2020-09-24 15:31:52,086 355273 INFO  - ==> GRPC service request ended:  >>> isbn: 618260308

2020-09-24 15:31:54,371 357558 ERROR - ==> GRPC service request failed: null
2020-09-24 15:31:54,371 357558 ERROR - Exception while executing runnable io.grpc.internal.ServerImpl$JumpToApplicationThreadServerStreamListener$1HalfClosed@1f2f9fca
java.lang.NullPointerException: null
	at lib.grpc.services.auto.BookLibraryProtos$GenericResponse$Builder.setMessage(BookLibraryProtos.java:6000) ~[classes/:?]
	at lib.grpc.aspect.ServiceAdvices.exceptionAdvice(ServiceAdvices.java:70) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_252]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_252]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_252]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_252]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:66) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$68a893e.saveBookToServer(<generated>) ~[classes/:?]
	at lib.grpc.services.auto.BookServiceGrpc$MethodHandlers.invoke(BookServiceGrpc.java:801) ~[classes/:?]
	at io.grpc.stub.ServerCalls$UnaryServerCallHandler$UnaryServerCallListener.onHalfClose(ServerCalls.java:172) ~[grpc-stub-1.30.0.jar:1.30.0]
	at io.grpc.internal.ServerCallImpl$ServerStreamListenerImpl.halfClosed(ServerCallImpl.java:331) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.ServerImpl$JumpToApplicationThreadServerStreamListener$1HalfClosed.runInContext(ServerImpl.java:820) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:123) [grpc-core-1.30.0.jar:1.30.0]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-24 15:32:23,851 387038 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260308
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-24 15:32:35,306 398493 INFO  - ==> GRPC service request ended:  >>> isbn: 618260308

2020-09-24 15:32:35,307 398494 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260308

2020-09-24 15:32:50,878 414065 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-24 15:32:50,883 414070 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 15:32:50,883 414070 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 16:43:30,446 4653633 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 16:43:30,849 4654036 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-24 16:43:30,849 4654036 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-24 16:43:31,411 4654598 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 16:43:31,412 4654599 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 16:43:39,571 4662758 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-24 16:43:39,572 4662759 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 16:43:39,573 4662760 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 16:44:18,944 4702131 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 16:44:19,023 4702210 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 16:44:19,024 4702211 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 16:44:23,492 4706679 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-24 16:44:23,493 4706680 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 16:44:23,493 4706680 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 16:49:29,004 5012191 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 16:49:29,724 5012911 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 16:49:29,724 5012911 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 16:52:15,939 5179126 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 16:52:16,428 5179615 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 16:52:16,429 5179616 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 16:52:35,946 5199133 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 16:52:35,978 5199165 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080"
userId: "gaurav"
password: "gaurav"

2020-09-24 16:52:35,979 5199166 ERROR - ==> GRPC service request failed: 
2020-09-24 16:52:35,980 5199167 ERROR - Exception while executing runnable io.grpc.internal.ServerImpl$JumpToApplicationThreadServerStreamListener$1HalfClosed@458a6093
org.nuxeo.client.spi.NuxeoClientRemoteException: 
	at org.nuxeo.client.NuxeoClient.handleResponse(NuxeoClient.java:317) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at org.nuxeo.client.NuxeoClient.fetchResponse(NuxeoClient.java:275) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at org.nuxeo.client.objects.AbstractConnectable.fetchResponse(AbstractConnectable.java:65) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at org.nuxeo.client.objects.user.UserManager.fetchCurrentUser(UserManager.java:75) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at org.nuxeo.client.NuxeoClient$Builder.connect(NuxeoClient.java:492) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at lib.server.rest.client.NXServerServices.initClient(NXServerServices.java:30) ~[classes/:?]
	at lib.server.wrapper.BookWrapperService.login(BookWrapperService.java:22) ~[classes/:?]
	at lib.service.api.impl.BookServiceImpl.login(BookServiceImpl.java:154) ~[classes/:?]
	at lib.grpc.services.GrpcBookService.login(GrpcBookService.java:169) ~[classes/:?]
	at lib.grpc.services.GrpcBookService$$FastClassBySpringCGLIB$$37be6d05.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:752) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$68a893e.login(<generated>) ~[classes/:?]
	at lib.grpc.services.auto.BookServiceGrpc$MethodHandlers.invoke(BookServiceGrpc.java:793) ~[classes/:?]
	at io.grpc.stub.ServerCalls$UnaryServerCallHandler$UnaryServerCallListener.onHalfClose(ServerCalls.java:172) ~[grpc-stub-1.30.0.jar:1.30.0]
	at io.grpc.internal.ServerCallImpl$ServerStreamListenerImpl.halfClosed(ServerCallImpl.java:331) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.ServerImpl$JumpToApplicationThreadServerStreamListener$1HalfClosed.runInContext(ServerImpl.java:820) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:123) [grpc-core-1.30.0.jar:1.30.0]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-24 16:54:21,729 5304916 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 16:54:43,694 5326881 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080"
userId: "gaurav"
password: "gaurav"

2020-09-24 16:55:07,627 5350814 ERROR - ==> GRPC service request failed: 
2020-09-24 16:55:07,629 5350816 ERROR - Exception while executing runnable io.grpc.internal.ServerImpl$JumpToApplicationThreadServerStreamListener$1HalfClosed@243217c8
org.nuxeo.client.spi.NuxeoClientRemoteException: 
	at org.nuxeo.client.NuxeoClient.handleResponse(NuxeoClient.java:317) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at org.nuxeo.client.NuxeoClient.fetchResponse(NuxeoClient.java:275) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at org.nuxeo.client.objects.AbstractConnectable.fetchResponse(AbstractConnectable.java:65) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at org.nuxeo.client.objects.user.UserManager.fetchCurrentUser(UserManager.java:75) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at org.nuxeo.client.NuxeoClient$Builder.connect(NuxeoClient.java:492) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at lib.server.rest.client.NXServerServices.initClient(NXServerServices.java:30) ~[classes/:?]
	at lib.server.wrapper.BookWrapperService.login(BookWrapperService.java:22) ~[classes/:?]
	at lib.service.api.impl.BookServiceImpl.login(BookServiceImpl.java:154) ~[classes/:?]
	at lib.grpc.services.GrpcBookService.login(GrpcBookService.java:169) ~[classes/:?]
	at lib.grpc.services.GrpcBookService$$FastClassBySpringCGLIB$$37be6d05.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:752) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$68a893e.login(<generated>) ~[classes/:?]
	at lib.grpc.services.auto.BookServiceGrpc$MethodHandlers.invoke(BookServiceGrpc.java:793) ~[classes/:?]
	at io.grpc.stub.ServerCalls$UnaryServerCallHandler$UnaryServerCallListener.onHalfClose(ServerCalls.java:172) ~[grpc-stub-1.30.0.jar:1.30.0]
	at io.grpc.internal.ServerCallImpl$ServerStreamListenerImpl.halfClosed(ServerCallImpl.java:331) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.ServerImpl$JumpToApplicationThreadServerStreamListener$1HalfClosed.runInContext(ServerImpl.java:820) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:123) [grpc-core-1.30.0.jar:1.30.0]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-24 16:57:02,319 5465506 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 16:57:43,724 5506911 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080"
userId: "gaurav"
password: "gaurav"

2020-09-24 16:57:57,952 5521139 ERROR - ==> GRPC service request failed: 
2020-09-24 16:57:57,954 5521141 ERROR - Exception while executing runnable io.grpc.internal.ServerImpl$JumpToApplicationThreadServerStreamListener$1HalfClosed@62424e72
org.nuxeo.client.spi.NuxeoClientRemoteException: 
	at org.nuxeo.client.NuxeoClient.handleResponse(NuxeoClient.java:317) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at org.nuxeo.client.NuxeoClient.fetchResponse(NuxeoClient.java:275) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at org.nuxeo.client.objects.AbstractConnectable.fetchResponse(AbstractConnectable.java:65) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at org.nuxeo.client.objects.user.UserManager.fetchCurrentUser(UserManager.java:75) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at org.nuxeo.client.NuxeoClient$Builder.connect(NuxeoClient.java:492) ~[nuxeo-java-client-3.3.0.jar:3.3.0]
	at lib.server.rest.client.NXServerServices.initClient(NXServerServices.java:33) ~[classes/:?]
	at lib.server.wrapper.BookWrapperService.login(BookWrapperService.java:22) ~[classes/:?]
	at lib.service.api.impl.BookServiceImpl.login(BookServiceImpl.java:154) ~[classes/:?]
	at lib.grpc.services.GrpcBookService.login(GrpcBookService.java:169) ~[classes/:?]
	at lib.grpc.services.GrpcBookService$$FastClassBySpringCGLIB$$37be6d05.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:752) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$68a893e.login(<generated>) ~[classes/:?]
	at lib.grpc.services.auto.BookServiceGrpc$MethodHandlers.invoke(BookServiceGrpc.java:793) ~[classes/:?]
	at io.grpc.stub.ServerCalls$UnaryServerCallHandler$UnaryServerCallListener.onHalfClose(ServerCalls.java:172) ~[grpc-stub-1.30.0.jar:1.30.0]
	at io.grpc.internal.ServerCallImpl$ServerStreamListenerImpl.halfClosed(ServerCallImpl.java:331) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.ServerImpl$JumpToApplicationThreadServerStreamListener$1HalfClosed.runInContext(ServerImpl.java:820) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:123) [grpc-core-1.30.0.jar:1.30.0]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-24 16:59:22,957 5606144 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 16:59:29,906 5613093 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080"
userId: "gaurav"
password: "gaurav"

2020-09-24 16:59:29,907 5613094 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080"
userId: "gaurav"
password: "gaurav"

2020-09-24 16:59:39,993 5623180 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 17:00:11,085 5654272 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080"
userId: "gaurav"
password: "gaurav"

2020-09-24 17:00:11,085 5654272 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080"
userId: "gaurav"
password: "gaurav"

2020-09-24 17:00:25,442 5668629 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gauravv"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 17:00:25,494 5668681 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gauravv"
password: "gaurav"

2020-09-24 17:00:25,494 5668681 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gauravv"
password: "gaurav"

2020-09-24 17:00:31,425 5674612 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 17:00:31,440 5674627 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 17:00:31,442 5674629 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 17:00:34,396 5677583 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-24 17:00:34,397 5677584 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 17:00:34,398 5677585 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 17:01:13,996 5717183 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "dss"
password: "sss"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 17:01:14,013 5717200 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "dss"
password: "sss"

2020-09-24 17:01:14,013 5717200 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "dss"
password: "sss"

2020-09-24 17:01:27,894 5731081 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 17:01:27,910 5731097 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 17:01:27,911 5731098 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 17:01:38,967 5742154 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-24 17:01:38,967 5742154 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 17:01:38,968 5742155 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 17:01:42,042 5745229 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-24 17:01:42,043 5745230 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 17:01:42,043 5745230 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 17:06:18,384 6021571 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 17:06:18,524 6021711 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-24 17:06:18,524 6021711 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-24 17:06:19,161 6022348 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 17:06:19,161 6022348 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 17:06:26,695 6029882 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-24 17:06:26,696 6029883 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 17:06:26,696 6029883 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 17:06:43,254 6046441 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 17:06:43,275 6046462 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 17:06:43,276 6046463 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 17:06:46,157 6049344 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-24 17:06:46,164 6049351 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-24 17:06:46,164 6049351 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-24 17:06:49,257 6052444 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 908606664
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-24 17:06:49,262 6052449 INFO  - ==> GRPC service request ended:  >>> isbn: 908606664

2020-09-24 17:06:49,263 6052450 INFO  - ==> GRPC service request successfull:  >>> isbn: 908606664

2020-09-24 17:06:52,654 6055841 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 393310728
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-24 17:06:52,924 6056111 INFO  - ==> GRPC service request ended:  >>> isbn: 393310728

2020-09-24 17:06:52,925 6056112 INFO  - ==> GRPC service request successfull:  >>> isbn: 393310728

2020-09-24 17:06:53,100 6056287 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 17:06:53,570 6056757 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 17:06:53,571 6056758 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 17:07:02,225 6065412 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 393310728
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-24 17:07:02,231 6065418 INFO  - ==> GRPC service request ended:  >>> isbn: 393310728

2020-09-24 17:07:02,231 6065418 INFO  - ==> GRPC service request successfull:  >>> isbn: 393310728

2020-09-24 17:07:10,785 6073972 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-24 17:07:10,785 6073972 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 17:07:10,786 6073973 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 17:07:12,901 6076088 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 393310728
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-24 17:07:12,905 6076092 INFO  - ==> GRPC service request ended:  >>> isbn: 393310728

2020-09-24 17:07:12,906 6076093 INFO  - ==> GRPC service request successfull:  >>> isbn: 393310728

2020-09-24 17:07:16,806 6079993 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 908783116
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-24 17:07:16,809 6079996 INFO  - ==> GRPC service request ended:  >>> isbn: 908783116

2020-09-24 17:07:16,809 6079996 INFO  - ==> GRPC service request successfull:  >>> isbn: 908783116

2020-09-24 17:07:33,172 6096359 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "s"
password: "s"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 17:07:33,183 6096370 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "s"
password: "s"

2020-09-24 17:07:33,184 6096371 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "s"
password: "s"

2020-09-24 17:07:50,635 6113822 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-24 17:07:50,636 6113823 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 17:07:50,636 6113823 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 17:46:52,788 2699  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 433864 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-24 17:46:52,807 2718  INFO  - No active profile set, falling back to default profiles: default
2020-09-24 17:46:54,034 3945  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-24 17:46:54,173 4084  INFO  - Finished Spring Data repository scanning in 118ms. Found 2 JPA repository interfaces.
2020-09-24 17:46:56,014 5925  INFO  - HikariPool-1 - Starting...
2020-09-24 17:46:56,022 5933  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-24 17:46:56,554 6465  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-24 17:46:56,560 6471  INFO  - HikariPool-1 - Start completed.
2020-09-24 17:46:56,713 6624  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-24 17:46:57,033 6944  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-24 17:46:57,036 6947  INFO  - HHH000206: hibernate.properties not found
2020-09-24 17:46:57,531 7442  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-24 17:46:58,556 8467  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-24 17:46:58,567 8478  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-24 17:47:00,458 10369 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-24 17:47:01,632 11543 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-24 17:47:02,514 12425 INFO  - Started BooksLibraryApp in 10.54 seconds (JVM running for 12.553)
2020-09-24 17:47:02,516 12427 INFO  - Starting gRPC Server ...
2020-09-24 17:47:02,610 12521 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$3d8eb4f4' service has been registered.
2020-09-24 17:47:04,139 14050 INFO  - gRPC Server started, listening on port 7070.
2020-09-24 17:47:41,643 51554 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 17:47:41,727 51638 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-24 17:47:43,000 52911 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 17:47:43,000 52911 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 17:48:13,892 83803 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-24 17:48:13,893 83804 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 17:48:13,893 83804 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 17:49:47,369 177280 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-24 17:49:47,372 177283 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 17:49:47,372 177283 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 17:50:04,698 194609 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 17:50:05,332 195243 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 17:50:05,333 195244 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 17:50:22,455 212366 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-24 17:50:22,530 212441 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 17:50:22,530 212441 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 19:37:37,364 2835  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 445420 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-24 19:37:37,374 2845  INFO  - No active profile set, falling back to default profiles: default
2020-09-24 19:37:38,548 4019  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-24 19:37:38,672 4143  INFO  - Finished Spring Data repository scanning in 105ms. Found 2 JPA repository interfaces.
2020-09-24 19:37:40,478 5949  INFO  - HikariPool-1 - Starting...
2020-09-24 19:37:40,486 5957  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-24 19:37:41,051 6522  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-24 19:37:41,056 6527  INFO  - HikariPool-1 - Start completed.
2020-09-24 19:37:41,212 6683  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-24 19:37:41,515 6986  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-24 19:37:41,519 6990  INFO  - HHH000206: hibernate.properties not found
2020-09-24 19:37:41,934 7405  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-24 19:37:42,952 8423  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-24 19:37:42,969 8440  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-24 19:37:44,869 10340 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-24 19:37:45,882 11353 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-24 19:37:46,785 12256 INFO  - Started BooksLibraryApp in 10.143 seconds (JVM running for 12.43)
2020-09-24 19:37:46,787 12258 INFO  - Starting gRPC Server ...
2020-09-24 19:37:46,900 12371 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$f36c0a32' service has been registered.
2020-09-24 19:37:48,444 13915 INFO  - gRPC Server started, listening on port 7070.
2020-09-24 19:40:27,208 172679 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 19:40:35,201 180672 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-24 19:40:45,824 191295 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-24 19:40:45,824 191295 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-24 19:42:04,454 269925 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-24 19:42:04,627 270098 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-24 19:42:04,628 270099 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-24 19:42:17,502 282973 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 19:42:56,065 321536 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 19:42:59,468 324939 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 19:43:03,093 328564 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 19:43:03,094 328565 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 19:43:05,521 330992 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 19:43:05,522 330993 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 19:43:06,326 331797 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 19:43:06,326 331797 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 20:02:41,813 1507284 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 15333
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-24 20:02:41,823 1507294 INFO  - ==> GRPC service request ended:  >>> isbn: 15333

2020-09-24 20:02:41,824 1507295 INFO  - ==> GRPC service request successfull:  >>> isbn: 15333

2020-09-24 20:03:01,157 1526628 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 20:03:01,776 1527247 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 20:03:01,777 1527248 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 20:03:15,605 1541076 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 15333
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-24 20:03:15,777 1541248 INFO  - ==> GRPC service request ended:  >>> isbn: 15333

2020-09-24 20:03:15,777 1541248 INFO  - ==> GRPC service request successfull:  >>> isbn: 15333

2020-09-24 20:03:15,900 1541371 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 20:03:16,507 1541978 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 20:03:16,507 1541978 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 20:03:42,446 1567917 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 15333
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-24 20:03:42,452 1567923 INFO  - ==> GRPC service request ended:  >>> isbn: 15333

2020-09-24 20:03:42,452 1567923 INFO  - ==> GRPC service request successfull:  >>> isbn: 15333

2020-09-24 20:06:20,255 1725726 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-24 20:06:20,258 1725729 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 20:06:20,258 1725729 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 20:06:29,112 1734583 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 20:06:29,660 1735131 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 20:06:29,660 1735131 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 20:26:16,656 2922127 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:26:16,666 2922137 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-24 20:26:16,666 2922137 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-24 20:26:16,667 2922138 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-24 20:26:16,667 2922138 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-24 20:26:32,139 2937610 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 20:26:32,250 2937721 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 20:26:32,251 2937722 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 20:26:55,896 2961367 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-24 20:26:55,900 2961371 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 20:26:55,901 2961372 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 20:26:58,700 2964171 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:26:58,702 2964173 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-24 20:26:58,703 2964174 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-24 20:27:18,037 2983508 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:27:50,514 3015985 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-24 20:27:50,515 3015986 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-24 20:27:56,575 3022046 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 20:27:59,698 3025169 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 20:27:59,698 3025169 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 20:28:05,615 3031086 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:32:04,391 3269862 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-24 20:32:12,663 3278134 ERROR - ==> GRPC service request failed: not-null property references a null or transient value : lib.model.Book.author; nested exception is org.hibernate.PropertyValueException: not-null property references a null or transient value : lib.model.Book.author
2020-09-24 20:32:12,669 3278140 ERROR - Exception while executing runnable io.grpc.internal.ServerImpl$JumpToApplicationThreadServerStreamListener$1HalfClosed@113c8ce8
org.springframework.dao.DataIntegrityViolationException: not-null property references a null or transient value : lib.model.Book.author; nested exception is org.hibernate.PropertyValueException: not-null property references a null or transient value : lib.model.Book.author
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:315) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:254) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153) ~[spring-tx-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144) ~[spring-data-jpa-2.1.18.RELEASE.jar:2.1.18.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364) ~[spring-data-jpa-2.1.18.RELEASE.jar:2.1.18.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61) ~[spring-data-commons-2.1.18.RELEASE.jar:2.1.18.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at com.sun.proxy.$Proxy100.save(Unknown Source) ~[?:?]
	at lib.service.api.impl.BookServiceImpl.addBook(BookServiceImpl.java:47) ~[classes/:?]
	at lib.service.api.impl.BookServiceImpl.downloadBookFromServer(BookServiceImpl.java:187) ~[classes/:?]
	at lib.grpc.services.GrpcBookService.downloadBookFromServer(GrpcBookService.java:223) ~[classes/:?]
	at lib.grpc.services.GrpcBookService$$FastClassBySpringCGLIB$$37be6d05.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:752) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$f36c0a32.downloadBookFromServer(<generated>) ~[classes/:?]
	at lib.grpc.services.auto.BookServiceGrpc$MethodHandlers.invoke(BookServiceGrpc.java:949) ~[classes/:?]
	at io.grpc.stub.ServerCalls$UnaryServerCallHandler$UnaryServerCallListener.onHalfClose(ServerCalls.java:172) ~[grpc-stub-1.30.0.jar:1.30.0]
	at io.grpc.internal.ServerCallImpl$ServerStreamListenerImpl.halfClosed(ServerCallImpl.java:331) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.ServerImpl$JumpToApplicationThreadServerStreamListener$1HalfClosed.runInContext(ServerImpl.java:820) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:123) [grpc-core-1.30.0.jar:1.30.0]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
Caused by: org.hibernate.PropertyValueException: not-null property references a null or transient value : lib.model.Book.author
	at org.hibernate.engine.internal.Nullability.checkNullability(Nullability.java:108) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.internal.Nullability.checkNullability(Nullability.java:56) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.action.internal.AbstractEntityInsertAction.nullifyTransientReferencesIfNotAlready(AbstractEntityInsertAction.java:115) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.action.internal.AbstractEntityInsertAction.makeEntityManaged(AbstractEntityInsertAction.java:124) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:289) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:250) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:340) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:289) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:139) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:192) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:135) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:62) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:804) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:789) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_252]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_252]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_252]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_252]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:310) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at com.sun.proxy.$Proxy96.persist(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:535) ~[spring-data-jpa-2.1.18.RELEASE.jar:2.1.18.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_252]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_252]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_252]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_252]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359) ~[spring-data-commons-2.1.18.RELEASE.jar:2.1.18.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200) ~[spring-data-commons-2.1.18.RELEASE.jar:2.1.18.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644) ~[spring-data-commons-2.1.18.RELEASE.jar:2.1.18.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608) ~[spring-data-commons-2.1.18.RELEASE.jar:2.1.18.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595) ~[spring-data-commons-2.1.18.RELEASE.jar:2.1.18.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595) ~[spring-data-commons-2.1.18.RELEASE.jar:2.1.18.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59) ~[spring-data-commons-2.1.18.RELEASE.jar:2.1.18.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295) ~[spring-tx-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 39 more
2020-09-24 20:37:51,859 1701  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 408124 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-24 20:37:51,865 1707  INFO  - No active profile set, falling back to default profiles: default
2020-09-24 20:37:52,906 2748  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-24 20:37:53,053 2895  INFO  - Finished Spring Data repository scanning in 125ms. Found 2 JPA repository interfaces.
2020-09-24 20:37:54,313 4155  INFO  - HikariPool-1 - Starting...
2020-09-24 20:37:54,322 4164  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-24 20:37:54,740 4582  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-24 20:37:54,745 4587  INFO  - HikariPool-1 - Start completed.
2020-09-24 20:37:54,838 4680  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-24 20:37:54,955 4797  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-24 20:37:54,957 4799  INFO  - HHH000206: hibernate.properties not found
2020-09-24 20:37:55,257 5099  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-24 20:37:56,111 5953  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-24 20:37:56,120 5962  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-24 20:37:57,560 7402  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-24 20:37:58,416 8258  INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-24 20:37:59,139 8981  INFO  - Started BooksLibraryApp in 7.731 seconds (JVM running for 9.047)
2020-09-24 20:37:59,141 8983  INFO  - Starting gRPC Server ...
2020-09-24 20:37:59,219 9061  INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$330d2e7e' service has been registered.
2020-09-24 20:38:00,513 10355 INFO  - gRPC Server started, listening on port 7070.
2020-09-24 20:38:07,142 16984 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 6182603071
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:38:07,196 17038 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-24 20:38:07,488 17330 INFO  - ==> GRPC service request ended:  >>> isbn: 6182603071

2020-09-24 20:38:07,489 17331 INFO  - ==> GRPC service request successfull:  >>> isbn: 6182603071

2020-09-24 20:38:14,067 23909 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 20:38:14,551 24393 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 20:38:14,552 24394 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 20:40:36,296 166138 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 20:40:36,298 166140 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 20:40:36,298 166140 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 20:41:53,480 243322 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 6182603071
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:41:53,511 243353 INFO  - ==> GRPC service request ended:  >>> isbn: 6182603071

2020-09-24 20:41:53,511 243353 INFO  - ==> GRPC service request successfull:  >>> isbn: 6182603071

2020-09-24 20:43:17,757 327599 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 6182603071
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:43:17,777 327619 INFO  - ==> GRPC service request ended:  >>> isbn: 6182603071

2020-09-24 20:43:17,777 327619 INFO  - ==> GRPC service request successfull:  >>> isbn: 6182603071

2020-09-24 20:43:37,913 347755 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 6182603071
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:43:37,925 347767 INFO  - ==> GRPC service request ended:  >>> isbn: 6182603071

2020-09-24 20:43:37,925 347767 INFO  - ==> GRPC service request successfull:  >>> isbn: 6182603071

2020-09-24 20:43:56,023 4050  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 451244 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-24 20:43:56,032 4059  INFO  - No active profile set, falling back to default profiles: default
2020-09-24 20:43:57,217 5244  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-24 20:43:57,341 5368  INFO  - Finished Spring Data repository scanning in 105ms. Found 2 JPA repository interfaces.
2020-09-24 20:43:59,213 7240  INFO  - HikariPool-1 - Starting...
2020-09-24 20:43:59,224 7251  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-24 20:43:59,770 7797  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-24 20:43:59,776 7803  INFO  - HikariPool-1 - Start completed.
2020-09-24 20:43:59,929 7956  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-24 20:44:00,290 8317  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-24 20:44:00,295 8322  INFO  - HHH000206: hibernate.properties not found
2020-09-24 20:44:00,779 8806  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-24 20:44:01,899 9926  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-24 20:44:01,912 9939  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-24 20:44:03,852 11879 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-24 20:44:04,907 12934 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-24 20:44:05,801 13828 INFO  - Started BooksLibraryApp in 10.481 seconds (JVM running for 14.024)
2020-09-24 20:44:05,803 13830 INFO  - Starting gRPC Server ...
2020-09-24 20:44:05,897 13924 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$66f9e59d' service has been registered.
2020-09-24 20:44:07,403 15430 INFO  - gRPC Server started, listening on port 7070.
2020-09-24 20:44:12,009 20036 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 6182603071
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:44:18,992 27019 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-24 20:44:46,052 54079 INFO  - ==> GRPC service request ended:  >>> isbn: 6182603071

2020-09-24 20:44:46,053 54080 INFO  - ==> GRPC service request successfull:  >>> isbn: 6182603071

2020-09-24 20:44:50,567 58594 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 20:44:57,271 65298 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 20:44:57,272 65299 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 20:45:00,640 68667 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 6182603071
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:45:27,819 95846 INFO  - ==> GRPC service request ended:  >>> isbn: 6182603071

2020-09-24 20:45:27,819 95846 INFO  - ==> GRPC service request successfull:  >>> isbn: 6182603071

2020-09-24 20:45:34,717 102744 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:51:44,745 2789  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 453004 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-24 20:51:44,754 2798  INFO  - No active profile set, falling back to default profiles: default
2020-09-24 20:51:45,903 3947  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-24 20:51:46,044 4088  INFO  - Finished Spring Data repository scanning in 119ms. Found 2 JPA repository interfaces.
2020-09-24 20:51:47,958 6002  INFO  - HikariPool-1 - Starting...
2020-09-24 20:51:47,969 6013  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-24 20:51:48,495 6539  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-24 20:51:48,501 6545  INFO  - HikariPool-1 - Start completed.
2020-09-24 20:51:48,652 6696  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-24 20:51:49,005 7049  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-24 20:51:49,011 7055  INFO  - HHH000206: hibernate.properties not found
2020-09-24 20:51:49,420 7464  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-24 20:51:50,582 8626  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-24 20:51:50,593 8637  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-24 20:51:52,603 10647 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-24 20:51:53,765 11809 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-24 20:51:54,530 12574 INFO  - Started BooksLibraryApp in 10.451 seconds (JVM running for 12.653)
2020-09-24 20:51:54,532 12576 INFO  - Starting gRPC Server ...
2020-09-24 20:51:54,625 12669 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$9c5ac1d9' service has been registered.
2020-09-24 20:51:56,075 14119 INFO  - gRPC Server started, listening on port 7070.
2020-09-24 20:52:08,649 26693 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-24 20:52:09,349 27393 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 20:52:09,350 27394 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-24 20:52:13,014 31058 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:52:13,063 31107 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-24 20:53:09,726 87770 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-24 20:53:09,727 87771 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-24 20:54:00,607 138651 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:54:00,673 138717 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-24 20:54:00,674 138718 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-24 20:55:09,240 207284 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:55:09,259 207303 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-24 20:55:09,259 207303 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-24 20:55:17,127 215171 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 20:55:17,984 216028 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 20:55:17,984 216028 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 20:55:35,893 233937 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 20:55:36,371 234415 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 20:55:36,373 234417 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 20:55:40,662 238706 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-24 20:55:40,728 238772 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-24 20:55:40,729 238773 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-24 20:55:40,746 238790 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 20:55:41,292 239336 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 20:55:41,293 239337 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 20:55:50,239 248283 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:55:57,118 255162 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-24 20:55:57,119 255163 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-24 20:56:12,068 270112 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 20:56:12,450 270494 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 20:56:12,450 270494 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 20:56:13,834 271878 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 20:56:14,112 272156 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 20:56:14,112 272156 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 20:56:19,366 277410 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-24 20:56:19,380 277424 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-24 20:56:19,381 277425 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-24 20:56:19,396 277440 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 20:56:19,707 277751 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 20:56:19,708 277752 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 20:56:21,089 279133 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 20:56:21,441 279485 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 20:56:21,442 279486 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 20:56:22,192 280236 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 20:56:22,491 280535 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 20:56:22,491 280535 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-24 20:56:24,926 282970 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-24 20:56:24,955 282999 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-24 20:56:24,956 283000 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-24 20:56:27,562 285606 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-24 20:56:27,855 285899 INFO  - ==> GRPC service request ended:  >>> 
2020-09-24 20:56:27,856 285900 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 09:55:40,886 47038930 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12h52m31s247ms630µs800ns).
2020-09-25 11:24:34,165 52372209 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 11:24:34,266 52372310 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-25 11:24:34,268 52372312 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-25 11:24:34,641 52372685 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 11:24:34,642 52372686 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 11:33:13,689 52891733 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 11:33:13,723 52891767 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-25 11:33:13,724 52891768 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-25 11:33:14,121 52892165 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 11:33:14,121 52892165 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 11:50:02,489 53900533 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 11:50:02,621 53900665 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 11:50:02,621 53900665 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 11:59:47,580 54485624 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 11:59:47,611 54485655 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-25 11:59:47,612 54485656 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-25 11:59:47,861 54485905 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 11:59:47,861 54485905 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 12:21:09,579 55767623 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 12:21:09,608 55767652 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 12:21:09,608 55767652 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 12:25:08,332 56006376 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 12:25:08,355 56006399 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-25 12:25:08,355 56006399 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-25 12:25:08,702 56006746 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 12:25:08,702 56006746 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 12:25:13,907 56011951 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 12:25:13,926 56011970 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 12:25:13,926 56011970 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 12:25:48,933 56046977 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 12:25:48,958 56047002 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 12:25:48,958 56047002 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 12:48:21,747 57399791 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 12:48:22,074 57400118 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 12:48:22,074 57400118 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 12:48:39,759 57417803 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 12:48:39,777 57417821 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 12:48:39,777 57417821 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 12:50:09,396 57507440 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 12:50:09,411 57507455 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 12:50:09,412 57507456 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 12:51:52,816 57610860 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 12:51:53,079 57611123 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 12:51:53,080 57611124 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 12:52:01,539 57619583 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 12:52:01,551 57619595 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 12:52:01,552 57619596 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:33:28,353 60106397 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 13:33:28,388 60106432 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-25 13:33:28,388 60106432 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-25 13:33:28,678 60106722 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 13:33:28,679 60106723 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:33:49,602 60127646 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 13:33:49,798 60127842 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 13:33:49,800 60127844 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:33:56,234 60134278 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 13:33:56,304 60134348 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 13:33:56,304 60134348 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:38:04,993 60383037 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 13:38:05,142 60383186 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 13:38:05,142 60383186 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:38:09,349 60387393 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 13:38:09,363 60387407 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 13:38:09,363 60387407 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:38:57,935 60435979 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 13:38:58,100 60436144 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 13:38:58,100 60436144 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:39:02,136 60440180 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 13:39:02,150 60440194 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 13:39:02,153 60440197 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:40:16,682 60514726 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 13:40:16,689 60514733 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 13:40:16,690 60514734 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 13:46:13,465 60871509 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 13:46:13,734 60871778 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 13:46:13,735 60871779 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:46:22,405 60880449 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 13:46:22,417 60880461 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 13:46:22,417 60880461 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:46:48,018 60906062 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 13:46:48,019 60906063 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 13:46:48,020 60906064 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 13:47:06,308 60924352 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 13:47:06,311 60924355 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 13:47:06,311 60924355 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 13:48:09,244 60987288 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 13:48:09,247 60987291 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 13:48:09,247 60987291 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 13:50:47,526 61145570 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 13:50:47,694 61145738 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 13:50:47,694 61145738 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:52:12,978 61231022 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 13:52:13,212 61231256 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 13:52:13,212 61231256 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:52:30,652 61248696 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 13:52:30,663 61248707 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 13:52:30,664 61248708 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:52:37,765 61255809 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 13:52:37,766 61255810 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-25 13:52:37,766 61255810 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-25 13:52:37,767 61255811 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 13:52:37,768 61255812 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 13:52:45,265 61263309 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 13:52:45,267 61263311 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 13:52:45,267 61263311 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 13:52:46,424 61264468 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 13:52:46,426 61264470 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 13:52:46,426 61264470 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 13:52:47,144 61265188 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 13:52:47,146 61265190 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 13:52:47,146 61265190 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 13:53:09,438 61287482 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 13:53:09,439 61287483 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-25 13:53:09,439 61287483 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-25 13:53:09,440 61287484 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 13:53:09,440 61287484 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 13:53:20,721 61298765 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 13:53:20,722 61298766 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-25 13:53:20,722 61298766 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-25 13:53:20,723 61298767 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 13:53:20,723 61298767 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 13:54:49,329 61387373 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 13:54:49,348 61387392 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 13:54:49,348 61387392 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:54:50,850 61388894 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 13:54:50,851 61388895 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-25 13:54:50,851 61388895 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-25 13:54:50,852 61388896 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 13:54:50,852 61388896 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 13:54:53,205 61391249 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 13:54:53,216 61391260 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 13:54:53,216 61391260 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 13:54:54,459 61392503 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 13:54:54,461 61392505 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 13:54:54,461 61392505 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 13:54:55,029 61393073 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 13:54:55,034 61393078 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 13:54:55,034 61393078 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 13:57:29,612 61547656 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 13:57:29,615 61547659 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 13:57:29,615 61547659 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 14:00:42,859 61740903 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 14:00:43,179 61741223 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 14:00:43,179 61741223 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 14:00:46,568 61744612 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 14:00:46,582 61744626 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 14:00:46,583 61744627 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 14:00:48,048 61746092 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 14:00:48,050 61746094 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 14:00:48,050 61746094 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 14:26:17,514 63275558 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 14:26:17,515 63275559 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-25 14:26:17,515 63275559 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-25 14:26:17,517 63275561 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 14:26:17,518 63275562 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 14:26:36,550 63294594 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 908606664
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-25 14:26:36,553 63294597 INFO  - ==> GRPC service request ended:  >>> isbn: 908606664

2020-09-25 14:26:36,554 63294598 INFO  - ==> GRPC service request successfull:  >>> isbn: 908606664

2020-09-25 14:27:11,463 63329507 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 393310728
  title: "gg"
  author: "gg"
  publisher: "gg"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-25 14:27:11,466 63329510 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 393310728
  title: "gg"
  author: "gg"
  publisher: "gg"
}

2020-09-25 14:27:11,467 63329511 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 393310728
  title: "gg"
  author: "gg"
  publisher: "gg"
}

2020-09-25 14:33:10,235 63688279 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 14:33:10,276 63688320 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 14:33:10,276 63688320 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 14:33:13,785 63691829 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 14:33:13,796 63691840 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 14:33:13,796 63691840 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 14:33:27,712 63705756 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 14:33:27,723 63705767 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 14:33:27,723 63705767 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 14:34:13,331 63751375 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 14:34:13,333 63751377 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 14:34:13,334 63751378 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 14:49:14,204 64652248 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 14:49:14,377 64652421 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 14:49:14,378 64652422 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 14:49:21,691 64659735 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 14:49:21,713 64659757 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 14:49:21,713 64659757 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 14:49:24,299 64662343 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 14:49:24,301 64662345 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 14:49:24,301 64662345 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 14:49:30,851 64668895 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 14:49:30,853 64668897 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 14:49:30,853 64668897 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 14:49:31,687 64669731 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 618260307
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 14:49:31,690 64669734 INFO  - ==> GRPC service request ended:  >>> isbn: 618260307

2020-09-25 14:49:31,690 64669734 INFO  - ==> GRPC service request successfull:  >>> isbn: 618260307

2020-09-25 17:57:17,167 75935211 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 17:57:17,211 75935255 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-25 17:57:17,211 75935255 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-25 17:57:17,373 75935417 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 17:57:17,374 75935418 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 17:57:21,984 75940028 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 17:57:22,058 75940102 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 17:57:22,058 75940102 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 18:04:41,705 76379749 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 18:04:41,907 76379951 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 18:04:41,907 76379951 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 18:04:44,691 76382735 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 18:04:44,713 76382757 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 18:04:44,714 76382758 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 18:06:17,699 76475743 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 18:06:17,867 76475911 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 18:06:17,867 76475911 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 18:06:23,852 76481896 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 18:06:23,866 76481910 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 18:06:23,866 76481910 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 19:38:56,488 82034532 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 19:38:56,525 82034569 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-25 19:38:56,526 82034570 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-25 19:38:56,722 82034766 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 19:38:56,723 82034767 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 19:39:18,780 82056824 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 19:39:18,835 82056879 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 19:39:18,835 82056879 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 19:41:51,368 82209412 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 19:41:51,504 82209548 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 19:41:51,505 82209549 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 19:41:54,280 82212324 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 19:41:54,299 82212343 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 19:41:54,299 82212343 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 19:59:15,697 83253741 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 19:59:15,711 83253755 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-25 19:59:15,711 83253755 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-25 19:59:15,868 83253912 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 19:59:15,875 83253919 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 19:59:20,085 83258129 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 19:59:20,099 83258143 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 19:59:20,100 83258144 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 19:59:24,897 83262941 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 19:59:24,907 83262951 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 19:59:24,908 83262952 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 19:59:29,562 83267606 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 19:59:29,570 83267614 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 19:59:29,570 83267614 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 19:59:32,815 83270859 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 19:59:32,824 83270868 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 19:59:32,825 83270869 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 19:59:35,051 83273095 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 19:59:35,061 83273105 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 19:59:35,062 83273106 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 19:59:37,354 83275398 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 19:59:37,360 83275404 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 19:59:37,361 83275405 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 19:59:39,527 83277571 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 19:59:39,535 83277579 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 19:59:39,536 83277580 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 19:59:41,862 83279906 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 19:59:41,868 83279912 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 19:59:41,868 83279912 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:01:24,315 83382359 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:01:24,330 83382374 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:01:24,330 83382374 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:03:26,090 83504134 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:03:26,100 83504144 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:03:26,100 83504144 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:03:28,903 83506947 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:03:28,912 83506956 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:03:28,912 83506956 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:11:56,889 84014933 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:11:57,009 84015053 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:11:57,009 84015053 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:12:48,131 84066175 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:12:48,145 84066189 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:12:48,145 84066189 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:12:51,985 84070029 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:12:51,994 84070038 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:12:51,994 84070038 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:12:54,586 84072630 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:12:54,594 84072638 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:12:54,594 84072638 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:12:56,872 84074916 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:12:56,878 84074922 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:12:56,878 84074922 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:13:09,544 84087588 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:13:09,673 84087717 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:13:09,674 84087718 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:13:12,681 84090725 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:13:12,687 84090731 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:13:12,687 84090731 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:13:14,608 84092652 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:13:14,616 84092660 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:13:14,616 84092660 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:20:25,161 84523205 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:20:25,181 84523225 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-25 20:20:25,181 84523225 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-25 20:20:25,322 84523366 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:20:25,322 84523366 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:20:41,279 84539323 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:20:41,291 84539335 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:20:41,292 84539336 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:20:55,793 84553837 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:20:55,801 84553845 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:20:55,801 84553845 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:20:59,389 84557433 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:20:59,398 84557442 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:20:59,398 84557442 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:21:01,527 84559571 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:21:01,535 84559579 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:21:01,535 84559579 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:21:04,641 84562685 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:21:04,647 84562691 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:21:04,647 84562691 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:21:06,775 84564819 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:21:06,780 84564824 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:21:06,781 84564825 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:21:08,051 84566095 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:21:08,056 84566100 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:21:08,056 84566100 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:23:03,156 84681200 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:23:03,396 84681440 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:23:03,397 84681441 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:24:03,957 84742001 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:24:04,074 84742118 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:24:04,074 84742118 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:24:07,454 84745498 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:24:07,466 84745510 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:24:07,467 84745511 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:25:57,980 84856024 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:25:58,185 84856229 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:25:58,188 84856232 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:26:00,808 84858852 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:26:00,821 84858865 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:26:00,821 84858865 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:27:54,295 84972339 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:27:54,462 84972506 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:27:54,462 84972506 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:27:57,568 84975612 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:27:57,580 84975624 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:27:57,580 84975624 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:28:16,286 84994330 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 77432
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 20:28:16,291 84994335 INFO  - ==> GRPC service request ended:  >>> isbn: 77432

2020-09-25 20:28:16,291 84994335 INFO  - ==> GRPC service request successfull:  >>> isbn: 77432

2020-09-25 20:28:23,014 85001058 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:28:23,119 85001163 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:28:23,119 85001163 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:28:33,220 85011264 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 77432
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-25 20:28:33,241 85011285 INFO  - ==> GRPC service request ended:  >>> isbn: 77432

2020-09-25 20:28:33,242 85011286 INFO  - ==> GRPC service request successfull:  >>> isbn: 77432

2020-09-25 20:28:33,262 85011306 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:28:33,416 85011460 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:28:33,416 85011460 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:28:50,080 85028124 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:28:50,210 85028254 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:28:50,210 85028254 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:28:52,449 85030493 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 77432
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 20:28:52,476 85030520 INFO  - ==> GRPC service request ended:  >>> isbn: 77432

2020-09-25 20:28:52,477 85030521 INFO  - ==> GRPC service request successfull:  >>> isbn: 77432

2020-09-25 20:28:52,605 85030649 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:28:52,738 85030782 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:28:52,738 85030782 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:29:01,698 85039742 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:29:01,824 85039868 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:29:01,824 85039868 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:31:00,739 85158783 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:31:00,908 85158952 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:31:00,908 85158952 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:31:09,368 85167412 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:31:09,380 85167424 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:31:09,380 85167424 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:33:10,804 85288848 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:33:10,946 85288990 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:33:10,946 85288990 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:33:36,835 85314879 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 1
  title: "a"
  author: "a"
  publisher: "a"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-25 20:33:36,849 85314893 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 1
  title: "a"
  author: "a"
  publisher: "a"
}

2020-09-25 20:33:36,849 85314893 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 1
  title: "a"
  author: "a"
  publisher: "a"
}

2020-09-25 20:33:36,940 85314984 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:33:37,056 85315100 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:33:37,056 85315100 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:33:45,767 85323811 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:33:45,978 85324022 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:33:45,978 85324022 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:33:50,799 85328843 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:33:50,928 85328972 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:33:50,928 85328972 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:34:04,084 85342128 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 1111
  title: "1"
  author: "1"
  publisher: "1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-25 20:34:04,098 85342142 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 1111
  title: "1"
  author: "1"
  publisher: "1"
}

2020-09-25 20:34:04,098 85342142 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 1111
  title: "1"
  author: "1"
  publisher: "1"
}

2020-09-25 20:34:04,223 85342267 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:34:04,345 85342389 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:34:04,346 85342390 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:34:07,584 85345628 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:34:07,718 85345762 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:34:07,718 85345762 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:34:11,665 85349709 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1111
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-25 20:34:11,737 85349781 INFO  - ==> GRPC service request ended:  >>> isbn: 1111

2020-09-25 20:34:11,737 85349781 INFO  - ==> GRPC service request successfull:  >>> isbn: 1111

2020-09-25 20:34:11,758 85349802 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:34:11,919 85349963 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:34:11,919 85349963 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:36:40,359 85498403 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:36:40,375 85498419 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:36:40,376 85498420 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:36:44,487 85502531 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1111
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 20:36:44,490 85502534 INFO  - ==> GRPC service request ended:  >>> isbn: 1111

2020-09-25 20:36:44,491 85502535 INFO  - ==> GRPC service request successfull:  >>> isbn: 1111

2020-09-25 20:36:55,374 85513418 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1111
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-25 20:36:55,386 85513430 INFO  - ==> GRPC service request ended:  >>> isbn: 1111

2020-09-25 20:36:55,386 85513430 INFO  - ==> GRPC service request successfull:  >>> isbn: 1111

2020-09-25 20:36:55,406 85513450 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:36:55,580 85513624 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:36:55,580 85513624 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:36:59,538 85517582 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1111
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 20:36:59,561 85517605 INFO  - ==> GRPC service request ended:  >>> isbn: 1111

2020-09-25 20:36:59,561 85517605 INFO  - ==> GRPC service request successfull:  >>> isbn: 1111

2020-09-25 20:36:59,627 85517671 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:36:59,795 85517839 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:36:59,795 85517839 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:38:56,973 85635017 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:38:57,135 85635179 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:38:57,135 85635179 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:39:15,869 85653913 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-25 20:39:15,880 85653924 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:39:15,880 85653924 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:39:21,050 85659094 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:39:21,154 85659198 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:39:21,154 85659198 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:39:29,019 85667063 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:39:29,105 85667149 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:39:29,105 85667149 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:39:34,581 85672625 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1111
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-25 20:39:34,592 85672636 INFO  - ==> GRPC service request ended:  >>> isbn: 1111

2020-09-25 20:39:34,592 85672636 INFO  - ==> GRPC service request successfull:  >>> isbn: 1111

2020-09-25 20:39:34,613 85672657 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:39:34,725 85672769 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:39:34,725 85672769 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:39:48,083 85686127 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1111
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 20:39:48,104 85686148 INFO  - ==> GRPC service request ended:  >>> isbn: 1111

2020-09-25 20:39:48,105 85686149 INFO  - ==> GRPC service request successfull:  >>> isbn: 1111

2020-09-25 20:39:48,141 85686185 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:39:48,294 85686338 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:39:48,294 85686338 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:39:59,051 85697095 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 69987
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 20:39:59,052 85697096 INFO  - ==> GRPC service request ended:  >>> isbn: 69987

2020-09-25 20:39:59,052 85697096 INFO  - ==> GRPC service request successfull:  >>> isbn: 69987

2020-09-25 20:40:01,530 85699574 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1000
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-25 20:40:01,554 85699598 INFO  - ==> GRPC service request ended:  >>> isbn: 1000

2020-09-25 20:40:01,554 85699598 INFO  - ==> GRPC service request successfull:  >>> isbn: 1000

2020-09-25 20:40:01,586 85699630 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:40:01,736 85699780 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:40:01,736 85699780 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:40:10,981 85709025 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:40:11,099 85709143 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:40:11,099 85709143 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-25 20:41:46,411 85804455 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-25 20:41:46,526 85804570 INFO  - ==> GRPC service request ended:  >>> 
2020-09-25 20:41:46,526 85804570 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-26 01:20:15,045 102513089 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3h28s412ms533µs200ns).
2020-09-26 10:27:34,164 135352208 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=9h7m27s985ms158µs300ns).
2020-09-28 12:40:24,650 1831  INFO  - Neither @ContextConfiguration nor @ContextHierarchy found for test class [lib.application.test.BookServicesTest], using SpringBootContextLoader
2020-09-28 12:40:24,669 1850  INFO  - Could not detect default resource locations for test class [lib.application.test.BookServicesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-09-28 12:40:24,670 1851  INFO  - Could not detect default configuration classes for test class [lib.application.test.BookServicesTest]: BookServicesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-09-28 12:40:24,856 2037  INFO  - Found @SpringBootConfiguration lib.application.BooksLibraryApp for test class lib.application.test.BookServicesTest
2020-09-28 12:40:24,859 2040  INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-09-28 12:40:24,881 2062  INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@19fe4644, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@21d8bcbe, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5be067de, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7383eae2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@18245eb0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7c7d3c46, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@24fb6a80, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@48c35007, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@72a85671, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6722db6e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@18f20260]
2020-09-28 12:40:25,450 2631  INFO  - Starting BookServicesTest on INCNI6P031 with PID 140564 (started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-28 12:40:25,454 2635  INFO  - No active profile set, falling back to default profiles: default
2020-09-28 12:40:26,214 3395  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-28 12:40:26,308 3489  INFO  - Finished Spring Data repository scanning in 81ms. Found 2 JPA repository interfaces.
2020-09-28 12:40:26,426 3607  INFO  - Replacing 'dataSource' DataSource bean with embedded version
2020-09-28 12:40:27,500 4681  INFO  - Starting embedded database: url='jdbc:derby:memory:ddf12e84-c847-4697-91f3-e42d63062324;create=true', username='sa'
2020-09-28 15:03:44,527 2237  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 169004 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-28 15:03:44,534 2244  INFO  - No active profile set, falling back to default profiles: default
2020-09-28 15:03:45,596 3306  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-28 15:03:45,698 3408  INFO  - Finished Spring Data repository scanning in 89ms. Found 2 JPA repository interfaces.
2020-09-28 15:03:46,930 4640  INFO  - HikariPool-1 - Starting...
2020-09-28 15:03:46,935 4645  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-28 15:03:47,418 5128  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-28 15:03:47,424 5134  INFO  - HikariPool-1 - Start completed.
2020-09-28 15:03:47,516 5226  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-28 15:03:47,716 5426  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-28 15:03:47,720 5430  INFO  - HHH000206: hibernate.properties not found
2020-09-28 15:03:47,988 5698  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-28 15:03:48,792 6502  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-28 15:03:48,801 6511  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-28 15:03:50,213 7923  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-28 15:03:51,077 8787  INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-28 15:03:51,722 9432  INFO  - Started BooksLibraryApp in 7.69 seconds (JVM running for 9.502)
2020-09-28 15:03:51,723 9433  INFO  - Starting gRPC Server ...
2020-09-28 15:03:51,806 9516  INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$6c703f75' service has been registered.
2020-09-28 15:03:52,841 10551 INFO  - gRPC Server started, listening on port 7070.
2020-09-28 15:04:17,749 35459 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1000
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 15:04:27,128 44838 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-28 15:04:56,222 73932 INFO  - ==> GRPC service request ended:  >>> isbn: 1000

2020-09-28 15:04:56,222 73932 INFO  - ==> GRPC service request successfull:  >>> isbn: 1000

2020-09-28 15:30:20,772 1598482 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=21m3s157ms670µs800ns).
2020-09-28 15:39:41,649 2159359 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1000
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 15:39:44,083 2161793 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-28 15:39:44,084 2161794 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-28 15:39:44,095 2161805 INFO  - ==> GRPC service request ended:  >>> isbn: 1000

2020-09-28 15:39:44,096 2161806 INFO  - ==> GRPC service request successfull:  >>> isbn: 1000

2020-09-28 15:40:16,451 2194161 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1000
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 15:40:16,463 2194173 INFO  - ==> GRPC service request ended:  >>> isbn: 1000

2020-09-28 15:40:16,464 2194174 INFO  - ==> GRPC service request successfull:  >>> isbn: 1000

2020-09-28 15:45:20,399 2498109 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1000
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 15:45:20,417 2498127 INFO  - ==> GRPC service request ended:  >>> isbn: 1000

2020-09-28 15:45:20,418 2498128 INFO  - ==> GRPC service request successfull:  >>> isbn: 1000

2020-09-28 15:47:28,643 2626353 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1000
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 15:47:28,661 2626371 INFO  - ==> GRPC service request ended:  >>> isbn: 1000

2020-09-28 15:47:28,662 2626372 INFO  - ==> GRPC service request successfull:  >>> isbn: 1000

2020-09-28 16:45:02,212 6079922 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 78132
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 16:45:02,223 6079933 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-28 16:45:02,223 6079933 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-28 16:45:02,405 6080115 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 78132
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 16:45:02,406 6080116 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 78132
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 16:45:25,483 6103193 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1000
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 16:45:25,496 6103206 INFO  - ==> GRPC service request ended:  >>> isbn: 1000

2020-09-28 16:45:25,496 6103206 INFO  - ==> GRPC service request successfull:  >>> isbn: 1000

2020-09-28 16:47:31,078 6228788 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 61645
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 16:47:31,089 6228799 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 61645
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 16:47:31,089 6228799 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 61645
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 16:52:53,537 6551247 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1000
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 16:52:53,553 6551263 INFO  - ==> GRPC service request ended:  >>> isbn: 1000

2020-09-28 16:52:53,554 6551264 INFO  - ==> GRPC service request successfull:  >>> isbn: 1000

2020-09-28 17:05:08,079 2540  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 180220 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-28 17:05:08,086 2547  INFO  - No active profile set, falling back to default profiles: default
2020-09-28 17:05:09,054 3515  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-28 17:05:09,154 3615  INFO  - Finished Spring Data repository scanning in 89ms. Found 2 JPA repository interfaces.
2020-09-28 17:05:10,409 4870  INFO  - HikariPool-1 - Starting...
2020-09-28 17:05:10,414 4875  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-28 17:05:10,882 5343  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-28 17:05:10,887 5348  INFO  - HikariPool-1 - Start completed.
2020-09-28 17:05:11,006 5467  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-28 17:05:11,238 5699  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-28 17:05:11,241 5702  INFO  - HHH000206: hibernate.properties not found
2020-09-28 17:05:11,524 5985  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-28 17:05:12,315 6776  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-28 17:05:12,324 6785  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-28 17:05:13,860 8321  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-28 17:05:14,728 9189  INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-28 17:05:15,358 9819  INFO  - Started BooksLibraryApp in 7.809 seconds (JVM running for 9.888)
2020-09-28 17:05:15,360 9821  INFO  - Starting gRPC Server ...
2020-09-28 17:05:15,440 9901  INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$1e98e781' service has been registered.
2020-09-28 17:05:16,575 11036 INFO  - gRPC Server started, listening on port 7070.
2020-09-28 17:05:31,707 26168 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 73126
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 17:05:31,755 26216 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-28 17:05:32,236 26697 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 73126
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 17:05:32,236 26697 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 73126
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 17:05:45,318 39779 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1000
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 17:05:45,438 39899 INFO  - ==> GRPC service request ended:  >>> isbn: 1000

2020-09-28 17:05:45,439 39900 INFO  - ==> GRPC service request successfull:  >>> isbn: 1000

2020-09-28 17:08:39,755 214216 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 8182
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 17:08:39,766 214227 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 8182
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 17:08:39,767 214228 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 8182
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 17:08:48,315 222776 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1000
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 17:08:48,329 222790 INFO  - ==> GRPC service request ended:  >>> isbn: 1000

2020-09-28 17:08:48,329 222790 INFO  - ==> GRPC service request successfull:  >>> isbn: 1000

2020-09-28 17:15:19,257 613718 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 87826
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 17:15:19,276 613737 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 87826
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 17:15:19,276 613737 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 87826
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 17:15:30,383 624844 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 87826
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 17:15:30,389 624850 INFO  - ==> GRPC service request ended:  >>> isbn: 87826

2020-09-28 17:15:30,390 624851 INFO  - ==> GRPC service request successfull:  >>> isbn: 87826

2020-09-28 18:19:43,239 4477700 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=18m32s40ms938µs100ns).
2020-09-28 18:26:35,707 4890168 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 18:26:36,292 4890753 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:26:36,293 4890754 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:26:54,221 4908682 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 83566
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 18:26:54,227 4908688 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-28 18:26:54,227 4908688 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-28 18:26:54,241 4908702 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 83566
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 18:26:54,242 4908703 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 83566
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 18:26:57,732 4912193 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 83566
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 18:26:57,829 4912290 INFO  - ==> GRPC service request ended:  >>> isbn: 83566

2020-09-28 18:26:57,829 4912290 INFO  - ==> GRPC service request successfull:  >>> isbn: 83566

2020-09-28 18:27:32,843 4947304 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 18:27:32,844 4947305 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:27:32,845 4947306 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 18:41:07,522 5761983 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 18:41:07,545 5762006 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:41:07,545 5762006 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:41:19,040 5773501 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 3674
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 18:41:19,060 5773521 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 3674
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 18:41:19,061 5773522 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 3674
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 18:41:19,092 5773553 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 3674
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 18:41:19,123 5773584 INFO  - ==> GRPC service request ended:  >>> isbn: 3674

2020-09-28 18:41:19,123 5773584 INFO  - ==> GRPC service request successfull:  >>> isbn: 3674

2020-09-28 18:41:25,994 5780455 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 18:41:25,997 5780458 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:41:25,998 5780459 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 18:41:26,041 5780502 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 18:41:26,087 5780548 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:41:26,088 5780549 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:42:17,864 5832325 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 18:42:17,866 5832327 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:42:17,867 5832328 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 18:42:38,462 5852923 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 18:42:38,478 5852939 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:42:38,478 5852939 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:42:38,532 5852993 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 10941
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 18:42:38,540 5853001 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 10941
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 18:42:38,541 5853002 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 10941
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 18:42:38,569 5853030 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 10941
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 18:42:38,600 5853061 INFO  - ==> GRPC service request ended:  >>> isbn: 10941

2020-09-28 18:42:38,600 5853061 INFO  - ==> GRPC service request successfull:  >>> isbn: 10941

2020-09-28 18:42:38,621 5853082 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 18:42:38,622 5853083 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:42:38,622 5853083 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 18:42:38,638 5853099 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 18:42:38,651 5853112 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:42:38,652 5853113 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:42:38,662 5853123 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-28 18:42:38,709 5853170 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:42:38,709 5853170 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 18:43:10,534 5884995 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 18:43:10,537 5884998 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:43:10,537 5884998 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 18:43:24,760 5899221 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 18:43:24,777 5899238 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:43:24,777 5899238 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:43:24,839 5899300 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 77549
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 18:43:24,854 5899315 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 77549
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 18:43:24,854 5899315 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 77549
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 18:43:24,880 5899341 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 77549
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 18:43:24,904 5899365 INFO  - ==> GRPC service request ended:  >>> isbn: 77549

2020-09-28 18:43:24,905 5899366 INFO  - ==> GRPC service request successfull:  >>> isbn: 77549

2020-09-28 18:43:24,919 5899380 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 18:43:24,920 5899381 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:43:24,920 5899381 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 18:43:24,933 5899394 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 18:43:24,945 5899406 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:43:24,945 5899406 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:43:24,954 5899415 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-28 18:43:24,973 5899434 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:43:24,973 5899434 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 18:43:52,450 5926911 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 18:43:52,451 5926912 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:43:52,451 5926912 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 18:50:37,370 6331831 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 18:50:37,514 6331975 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:50:37,514 6331975 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:50:37,576 6332037 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 29630
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 18:50:37,578 6332039 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-28 18:50:37,579 6332040 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-28 18:50:37,588 6332049 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 29630
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 18:50:37,588 6332049 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 29630
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 18:50:37,613 6332074 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 29630
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 18:50:37,637 6332098 INFO  - ==> GRPC service request ended:  >>> isbn: 29630

2020-09-28 18:50:37,637 6332098 INFO  - ==> GRPC service request successfull:  >>> isbn: 29630

2020-09-28 18:50:37,650 6332111 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 18:50:37,650 6332111 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:50:37,650 6332111 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 18:50:37,661 6332122 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 18:50:37,673 6332134 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:50:37,673 6332134 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:50:37,678 6332139 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 42711
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 18:50:37,685 6332146 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 42711
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 18:50:37,685 6332146 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 42711
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 18:50:37,692 6332153 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-28 18:50:37,717 6332178 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:50:37,717 6332178 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 18:50:37,761 6332222 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 18:50:37,762 6332223 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:50:37,762 6332223 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 18:51:27,655 6382116 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 18:51:27,669 6382130 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:51:27,669 6382130 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:51:27,723 6382184 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 47012
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 18:51:27,737 6382198 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 47012
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 18:51:27,738 6382199 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 47012
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 18:51:27,763 6382224 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 47012
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 18:51:27,787 6382248 INFO  - ==> GRPC service request ended:  >>> isbn: 47012

2020-09-28 18:51:27,788 6382249 INFO  - ==> GRPC service request successfull:  >>> isbn: 47012

2020-09-28 18:51:27,802 6382263 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 18:51:27,802 6382263 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:51:27,802 6382263 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 18:51:27,818 6382279 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 18:51:27,831 6382292 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:51:27,831 6382292 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 18:51:27,841 6382302 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 99836
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 18:51:27,847 6382308 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 99836
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 18:51:27,848 6382309 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 99836
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 18:51:27,857 6382318 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-28 18:51:27,871 6382332 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:51:27,871 6382332 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 18:54:23,292 6557753 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 18:54:23,294 6557755 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 18:54:23,295 6557756 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:01:57,160 7011621 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:01:57,174 7011635 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:01:57,175 7011636 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:01:57,225 7011686 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 46659
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:01:57,234 7011695 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 46659
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:01:57,235 7011696 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 46659
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:01:57,268 7011729 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 46659
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 19:01:57,296 7011757 INFO  - ==> GRPC service request ended:  >>> isbn: 46659

2020-09-28 19:01:57,297 7011758 INFO  - ==> GRPC service request successfull:  >>> isbn: 46659

2020-09-28 19:01:57,311 7011772 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:01:57,312 7011773 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:01:57,312 7011773 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:01:57,323 7011784 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:01:57,335 7011796 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:01:57,335 7011796 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:01:57,341 7011802 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 72141
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:01:57,347 7011808 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 72141
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 19:01:57,348 7011809 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 72141
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 19:01:57,357 7011818 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-28 19:01:57,375 7011836 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:01:57,375 7011836 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:11:39,901 7594362 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:11:39,902 7594363 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:11:39,903 7594364 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:11:39,952 7594413 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:11:39,952 7594413 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:11:39,953 7594414 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:11:39,974 7594435 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:11:39,989 7594450 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:11:39,989 7594450 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:11:40,007 7594468 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 43573
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:11:40,016 7594477 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 43573
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 19:11:40,016 7594477 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 43573
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 19:11:40,041 7594502 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-28 19:11:40,054 7594515 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:11:40,054 7594515 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:19:20,197 8054658 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:19:20,198 8054659 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:19:20,198 8054659 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:19:20,247 8054708 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:19:20,247 8054708 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:19:20,247 8054708 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:19:20,267 8054728 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:19:20,280 8054741 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:19:20,280 8054741 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:19:20,297 8054758 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 16431
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:19:20,299 8054760 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-28 19:19:20,300 8054761 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-28 19:19:20,308 8054769 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 16431
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 19:19:20,308 8054769 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 16431
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 19:19:20,332 8054793 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-28 19:19:20,353 8054814 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:19:20,353 8054814 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:20:17,849 8112310 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:20:17,851 8112312 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:20:17,851 8112312 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:21:18,819 8173280 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:21:18,834 8173295 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:21:18,834 8173295 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:21:18,888 8173349 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 85139
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:21:18,890 8173351 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-28 19:21:18,890 8173351 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-28 19:21:18,904 8173365 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 85139
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:21:18,905 8173366 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 85139
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:21:18,933 8173394 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 85139
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 19:21:18,963 8173424 INFO  - ==> GRPC service request ended:  >>> isbn: 85139

2020-09-28 19:21:18,963 8173424 INFO  - ==> GRPC service request successfull:  >>> isbn: 85139

2020-09-28 19:21:18,981 8173442 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:21:18,982 8173443 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:21:18,982 8173443 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:21:19,001 8173462 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:21:19,014 8173475 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:21:19,014 8173475 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:21:19,025 8173486 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 24578
  title: "AAABookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:21:19,036 8173497 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 24578
  title: "AAABookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 19:21:19,037 8173498 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 24578
  title: "AAABookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 19:21:19,052 8173513 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-28 19:21:19,071 8173532 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:21:19,071 8173532 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:21:19,131 8173592 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:21:19,132 8173593 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:21:19,132 8173593 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:27:33,208 8547669 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:27:33,233 8547694 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:27:33,235 8547696 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:27:33,344 8547805 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 88841
  title: "AABookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:27:33,365 8547826 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 88841
  title: "AABookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:27:33,366 8547827 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 88841
  title: "AABookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:27:33,418 8547879 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 88841
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 19:27:33,476 8547937 INFO  - ==> GRPC service request ended:  >>> isbn: 88841

2020-09-28 19:27:33,476 8547937 INFO  - ==> GRPC service request successfull:  >>> isbn: 88841

2020-09-28 19:28:31,118 8605579 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:28:31,119 8605580 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:28:31,119 8605580 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:28:31,132 8605593 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:28:31,145 8605606 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:28:31,145 8605606 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:28:31,152 8605613 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 97068
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:28:31,166 8605627 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 97068
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 19:28:31,166 8605627 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 97068
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 19:28:31,174 8605635 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 97068
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 19:28:31,197 8605658 INFO  - ==> GRPC service request ended:  >>> isbn: 97068

2020-09-28 19:28:31,197 8605658 INFO  - ==> GRPC service request successfull:  >>> isbn: 97068

2020-09-28 19:28:31,208 8605669 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-28 19:28:31,245 8605706 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:28:31,245 8605706 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:28:43,506 8617967 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:28:43,507 8617968 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:28:43,507 8617968 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:33:39,595 8914056 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:33:39,614 8914075 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:33:39,614 8914075 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:33:39,660 8914121 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 66883
  title: "AABookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:33:39,668 8914129 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 66883
  title: "AABookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:33:39,668 8914129 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 66883
  title: "AABookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:33:39,690 8914151 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 66883
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 19:33:39,715 8914176 INFO  - ==> GRPC service request ended:  >>> isbn: 66883

2020-09-28 19:33:39,715 8914176 INFO  - ==> GRPC service request successfull:  >>> isbn: 66883

2020-09-28 19:33:39,733 8914194 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:33:39,733 8914194 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:33:39,734 8914195 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:33:39,747 8914208 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:33:39,758 8914219 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:33:39,759 8914220 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:33:39,766 8914227 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 28776
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:33:39,773 8914234 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 28776
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 19:33:39,773 8914234 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 28776
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 19:33:39,782 8914243 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 28776
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 19:33:39,807 8914268 INFO  - ==> GRPC service request ended:  >>> isbn: 28776

2020-09-28 19:33:39,807 8914268 INFO  - ==> GRPC service request successfull:  >>> isbn: 28776

2020-09-28 19:33:39,824 8914285 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-28 19:33:39,843 8914304 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:33:39,843 8914304 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:33:39,907 8914368 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:33:39,909 8914370 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:33:39,909 8914370 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:50:41,932 9936393 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:50:41,946 9936407 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:50:41,946 9936407 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:50:49,228 9943689 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 51742
  title: "BookTitle3"
  author: "BookAuthor3"
  publisher: "BookPublisher3"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:50:49,230 9943691 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-28 19:50:49,230 9943691 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-28 19:50:49,242 9943703 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 51742
  title: "BookTitle3"
  author: "BookAuthor3"
  publisher: "BookPublisher3"
}

2020-09-28 19:50:49,242 9943703 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 51742
  title: "BookTitle3"
  author: "BookAuthor3"
  publisher: "BookPublisher3"
}

2020-09-28 19:51:17,624 9972085 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 51742
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 19:51:17,652 9972113 INFO  - ==> GRPC service request ended:  >>> isbn: 51742

2020-09-28 19:51:17,652 9972113 INFO  - ==> GRPC service request successfull:  >>> isbn: 51742

2020-09-28 19:51:26,444 9980905 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 51742
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-28 19:51:26,566 9981027 INFO  - ==> GRPC service request ended:  >>> isbn: 51742

2020-09-28 19:51:26,566 9981027 INFO  - ==> GRPC service request successfull:  >>> isbn: 51742

2020-09-28 19:52:04,018 10018479 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:52:04,019 10018480 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:52:04,019 10018480 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:52:04,047 10018508 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:52:04,060 10018521 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:52:04,061 10018522 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:52:04,067 10018528 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 55495
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:52:04,079 10018540 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 55495
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:52:04,080 10018541 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 55495
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:52:04,085 10018546 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 55495
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 19:52:04,117 10018578 INFO  - ==> GRPC service request ended:  >>> isbn: 55495

2020-09-28 19:52:04,117 10018578 INFO  - ==> GRPC service request successfull:  >>> isbn: 55495

2020-09-28 19:52:45,625 10060086 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:52:45,625 10060086 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:52:45,625 10060086 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:52:45,677 10060138 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:52:45,678 10060139 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:52:45,678 10060139 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:52:45,699 10060160 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:52:45,712 10060173 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:52:45,712 10060173 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:52:45,733 10060194 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 92788
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:52:45,750 10060211 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 92788
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:52:45,751 10060212 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 92788
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:52:45,778 10060239 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 92788
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 19:52:45,804 10060265 INFO  - ==> GRPC service request ended:  >>> isbn: 92788

2020-09-28 19:52:45,804 10060265 INFO  - ==> GRPC service request successfull:  >>> isbn: 92788

2020-09-28 19:53:13,115 10087576 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:53:13,116 10087577 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:53:13,116 10087577 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:53:13,165 10087626 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:53:13,166 10087627 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:53:13,166 10087627 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:53:13,186 10087647 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:53:13,197 10087658 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:53:13,197 10087658 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:53:13,214 10087675 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 4598
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:53:13,228 10087689 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 4598
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:53:13,228 10087689 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 4598
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:53:13,255 10087716 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 4598
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 19:53:13,278 10087739 INFO  - ==> GRPC service request ended:  >>> isbn: 4598

2020-09-28 19:53:13,278 10087739 INFO  - ==> GRPC service request successfull:  >>> isbn: 4598

2020-09-28 19:53:56,613 10131074 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:53:56,614 10131075 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:53:56,614 10131075 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:53:56,661 10131122 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:53:56,661 10131122 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:53:56,661 10131122 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:53:56,682 10131143 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:53:56,696 10131157 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:53:56,696 10131157 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:53:56,714 10131175 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 59375
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:53:56,727 10131188 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 59375
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:53:56,728 10131189 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 59375
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 19:53:56,763 10131224 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 59375
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 19:53:56,789 10131250 INFO  - ==> GRPC service request ended:  >>> isbn: 59375

2020-09-28 19:53:56,789 10131250 INFO  - ==> GRPC service request successfull:  >>> isbn: 59375

2020-09-28 19:54:53,555 10188016 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:54:53,555 10188016 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:54:53,555 10188016 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:54:53,568 10188029 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 19:54:53,581 10188042 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:54:53,581 10188042 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 19:54:53,588 10188049 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 49905
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 19:54:53,602 10188063 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 49905
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 19:54:53,602 10188063 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 49905
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 19:54:53,609 10188070 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 49905
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 19:54:53,630 10188091 INFO  - ==> GRPC service request ended:  >>> isbn: 49905

2020-09-28 19:54:53,630 10188091 INFO  - ==> GRPC service request successfull:  >>> isbn: 49905

2020-09-28 19:54:53,639 10188100 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-28 19:54:53,670 10188131 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:54:53,670 10188131 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 19:54:53,728 10188189 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 19:54:53,728 10188189 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 19:54:53,729 10188190 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 20:52:02,446 13616907 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 20:52:02,469 13616930 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:52:02,469 13616930 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:52:15,731 13630192 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 86704
  title: "BookTitle3"
  author: "BookAuthor3"
  publisher: "BookPublisher3"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 20:52:15,736 13630197 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-28 20:52:15,736 13630197 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-28 20:52:15,753 13630214 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 86704
  title: "BookTitle3"
  author: "BookAuthor3"
  publisher: "BookPublisher3"
}

2020-09-28 20:52:15,753 13630214 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 86704
  title: "BookTitle3"
  author: "BookAuthor3"
  publisher: "BookPublisher3"
}

2020-09-28 20:52:15,786 13630247 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 86704
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 20:52:15,822 13630283 INFO  - ==> GRPC service request ended:  >>> isbn: 86704

2020-09-28 20:52:15,822 13630283 INFO  - ==> GRPC service request successfull:  >>> isbn: 86704

2020-09-28 20:52:33,626 13648087 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 86704
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-28 20:52:33,640 13648101 INFO  - ==> GRPC service request ended:  >>> isbn: 86704

2020-09-28 20:52:33,640 13648101 INFO  - ==> GRPC service request successfull:  >>> isbn: 86704

2020-09-28 20:53:26,268 13700729 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 86704
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-28 20:53:30,197 13704658 INFO  - ==> GRPC service request ended:  >>> isbn: 86704

2020-09-28 20:53:30,197 13704658 INFO  - ==> GRPC service request successfull:  >>> isbn: 86704

2020-09-28 20:54:05,874 13740335 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 20:54:05,874 13740335 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 20:54:05,875 13740336 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 20:54:05,887 13740348 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 20:54:05,899 13740360 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:05,899 13740360 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:10,524 13744985 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 54053
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 20:54:10,541 13745002 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 54053
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 20:54:10,542 13745003 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 54053
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 20:54:10,550 13745011 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 54053
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 20:54:10,572 13745033 INFO  - ==> GRPC service request ended:  >>> isbn: 54053

2020-09-28 20:54:10,573 13745034 INFO  - ==> GRPC service request successfull:  >>> isbn: 54053

2020-09-28 20:54:16,028 13750489 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 20:54:16,029 13750490 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 20:54:16,030 13750491 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 20:54:16,040 13750501 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 20:54:16,054 13750515 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:16,054 13750515 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:19,894 13754355 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 35477
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 20:54:19,912 13754373 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 35477
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 20:54:19,912 13754373 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 35477
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 20:54:19,919 13754380 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 35477
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 20:54:19,941 13754402 INFO  - ==> GRPC service request ended:  >>> isbn: 35477

2020-09-28 20:54:19,941 13754402 INFO  - ==> GRPC service request successfull:  >>> isbn: 35477

2020-09-28 20:54:19,951 13754412 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-28 20:54:19,977 13754438 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 20:54:19,978 13754439 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 20:54:20,034 13754495 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 20:54:20,034 13754495 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 20:54:20,035 13754496 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 20:54:31,989 13766450 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 20:54:31,999 13766460 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:31,999 13766460 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:32,042 13766503 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 44878
  title: "BookTitle3"
  author: "BookAuthor3"
  publisher: "BookPublisher3"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 20:54:32,054 13766515 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 44878
  title: "BookTitle3"
  author: "BookAuthor3"
  publisher: "BookPublisher3"
}

2020-09-28 20:54:32,055 13766516 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 44878
  title: "BookTitle3"
  author: "BookAuthor3"
  publisher: "BookPublisher3"
}

2020-09-28 20:54:32,074 13766535 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 44878
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 20:54:32,092 13766553 INFO  - ==> GRPC service request ended:  >>> isbn: 44878

2020-09-28 20:54:32,092 13766553 INFO  - ==> GRPC service request successfull:  >>> isbn: 44878

2020-09-28 20:54:32,099 13766560 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 44878
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-28 20:54:32,104 13766565 INFO  - ==> GRPC service request ended:  >>> isbn: 44878

2020-09-28 20:54:32,104 13766565 INFO  - ==> GRPC service request successfull:  >>> isbn: 44878

2020-09-28 20:54:32,112 13766573 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 44878
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-28 20:54:37,085 13771546 INFO  - ==> GRPC service request ended:  >>> isbn: 44878

2020-09-28 20:54:37,085 13771546 INFO  - ==> GRPC service request successfull:  >>> isbn: 44878

2020-09-28 20:54:37,096 13771557 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 20:54:37,096 13771557 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 20:54:37,096 13771557 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 20:54:37,106 13771567 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 20:54:37,118 13771579 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:37,118 13771579 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:37,123 13771584 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 38676
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 20:54:37,128 13771589 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 38676
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 20:54:37,128 13771589 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 38676
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 20:54:37,135 13771596 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 38676
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 20:54:37,158 13771619 INFO  - ==> GRPC service request ended:  >>> isbn: 38676

2020-09-28 20:54:37,158 13771619 INFO  - ==> GRPC service request successfull:  >>> isbn: 38676

2020-09-28 20:54:37,165 13771626 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 20:54:37,166 13771627 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 20:54:37,166 13771627 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 20:54:37,176 13771637 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 20:54:37,187 13771648 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:37,187 13771648 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:37,196 13771657 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 70495
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 20:54:37,202 13771663 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 70495
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 20:54:37,202 13771663 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 70495
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 20:54:37,209 13771670 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 70495
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 20:54:37,233 13771694 INFO  - ==> GRPC service request ended:  >>> isbn: 70495

2020-09-28 20:54:37,233 13771694 INFO  - ==> GRPC service request successfull:  >>> isbn: 70495

2020-09-28 20:54:37,243 13771704 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-28 20:54:37,258 13771719 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 20:54:37,258 13771719 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 20:54:37,306 13771767 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 20:54:37,307 13771768 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 20:54:37,307 13771768 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 20:54:47,460 13781921 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 20:54:47,470 13781931 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:47,470 13781931 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:47,518 13781979 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 69350
  title: "BookTitle3"
  author: "BookAuthor3"
  publisher: "BookPublisher3"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 20:54:47,531 13781992 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 69350
  title: "BookTitle3"
  author: "BookAuthor3"
  publisher: "BookPublisher3"
}

2020-09-28 20:54:47,532 13781993 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 69350
  title: "BookTitle3"
  author: "BookAuthor3"
  publisher: "BookPublisher3"
}

2020-09-28 20:54:47,554 13782015 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 69350
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 20:54:47,584 13782045 INFO  - ==> GRPC service request ended:  >>> isbn: 69350

2020-09-28 20:54:47,584 13782045 INFO  - ==> GRPC service request successfull:  >>> isbn: 69350

2020-09-28 20:54:47,606 13782067 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 69350
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-28 20:54:47,611 13782072 INFO  - ==> GRPC service request ended:  >>> isbn: 69350

2020-09-28 20:54:47,611 13782072 INFO  - ==> GRPC service request successfull:  >>> isbn: 69350

2020-09-28 20:54:47,622 13782083 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 69350
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-28 20:54:47,644 13782105 INFO  - ==> GRPC service request ended:  >>> isbn: 69350

2020-09-28 20:54:47,645 13782106 INFO  - ==> GRPC service request successfull:  >>> isbn: 69350

2020-09-28 20:54:47,664 13782125 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 20:54:47,665 13782126 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 20:54:47,665 13782126 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 20:54:47,678 13782139 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 20:54:47,690 13782151 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:47,690 13782151 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:47,698 13782159 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 17584
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 20:54:47,705 13782166 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 17584
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 20:54:47,705 13782166 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 17584
  title: "BookTitle1"
  author: "BookAuthor1"
  publisher: "BookPublisher1"
}

2020-09-28 20:54:47,713 13782174 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 17584
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 20:54:47,739 13782200 INFO  - ==> GRPC service request ended:  >>> isbn: 17584

2020-09-28 20:54:47,739 13782200 INFO  - ==> GRPC service request successfull:  >>> isbn: 17584

2020-09-28 20:54:47,744 13782205 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 20:54:47,745 13782206 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 20:54:47,745 13782206 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 20:54:47,756 13782217 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-28 20:54:47,766 13782227 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:47,766 13782227 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "Administrator"
password: "Administrator"

2020-09-28 20:54:47,775 13782236 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 87053
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-28 20:54:47,782 13782243 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 87053
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 20:54:47,782 13782243 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 87053
  title: "BookTitle2"
  author: "BookAuthor2"
  publisher: "BookPublisher2"
}

2020-09-28 20:54:47,789 13782250 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 87053
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-28 20:54:47,816 13782277 INFO  - ==> GRPC service request ended:  >>> isbn: 87053

2020-09-28 20:54:47,816 13782277 INFO  - ==> GRPC service request successfull:  >>> isbn: 87053

2020-09-28 20:54:47,827 13782288 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-28 20:54:47,843 13782304 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 20:54:47,843 13782304 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 20:54:47,895 13782356 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-28 20:54:47,895 13782356 INFO  - ==> GRPC service request ended:  >>> 
2020-09-28 20:54:47,895 13782356 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-28 23:55:43,398 24637859 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3h29s475ms720µs700ns).
2020-09-29 10:18:29,272 62003733 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=10h22m52s262ms879µs).
2020-09-29 12:40:39,116 70533577 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-29 12:40:39,404 70533865 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-29 12:40:39,404 70533865 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-29 12:40:39,961 70534422 INFO  - ==> GRPC service request ended:  >>> 
2020-09-29 12:40:39,962 70534423 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-29 12:41:04,406 70558867 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-29 12:41:04,407 70558868 INFO  - ==> GRPC service request ended:  >>> 
2020-09-29 12:41:04,407 70558868 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-29 12:41:25,350 70579811 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 908606664
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-29 12:41:25,357 70579818 INFO  - ==> GRPC service request ended:  >>> isbn: 908606664

2020-09-29 12:41:25,357 70579818 INFO  - ==> GRPC service request successfull:  >>> isbn: 908606664

2020-09-29 12:41:29,638 70584099 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 908783116
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-29 12:41:29,642 70584103 INFO  - ==> GRPC service request ended:  >>> isbn: 908783116

2020-09-29 12:41:29,642 70584103 INFO  - ==> GRPC service request successfull:  >>> isbn: 908783116

2020-09-29 12:41:42,267 70596728 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.logout(EmptyRequest,StreamObserver))
2020-09-29 12:41:42,268 70596729 INFO  - ==> GRPC service request ended:  >>> 
2020-09-29 12:41:42,268 70596729 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-29 12:41:54,891 70609352 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-29 12:41:54,949 70609410 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-29 12:41:54,949 70609410 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-29 12:42:00,549 70615010 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-29 12:42:00,587 70615048 INFO  - ==> GRPC service request ended:  >>> 
2020-09-29 12:42:00,588 70615049 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-29 12:42:42,305 70656766 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-29 12:42:42,794 70657255 INFO  - ==> GRPC service request ended:  >>> 
2020-09-29 12:42:42,794 70657255 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-29 12:42:53,046 70667507 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-29 12:42:53,434 70667895 INFO  - ==> GRPC service request ended:  >>> 
2020-09-29 12:42:53,434 70667895 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-29 13:15:37,293 2998  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 265344 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-29 13:15:37,300 3005  INFO  - No active profile set, falling back to default profiles: default
2020-09-29 13:15:38,736 4441  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-29 13:15:38,871 4576  INFO  - Finished Spring Data repository scanning in 117ms. Found 2 JPA repository interfaces.
2020-09-29 13:15:40,687 6392  INFO  - HikariPool-1 - Starting...
2020-09-29 13:15:40,710 6415  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-29 13:15:42,654 8359  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-29 13:15:42,660 8365  INFO  - HikariPool-1 - Start completed.
2020-09-29 13:15:43,457 9162  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-29 13:15:43,902 9607  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-29 13:15:43,906 9611  INFO  - HHH000206: hibernate.properties not found
2020-09-29 13:15:44,697 10402 INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-29 13:15:47,867 13572 INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-29 13:15:47,883 13588 WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-29 13:15:50,812 16517 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-29 13:15:52,157 17862 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-29 13:15:53,704 19409 INFO  - Started BooksLibraryApp in 17.136 seconds (JVM running for 19.588)
2020-09-29 13:15:53,706 19411 INFO  - Starting gRPC Server ...
2020-09-29 13:15:53,849 19554 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$2961722f' service has been registered.
2020-09-29 13:15:56,326 22031 INFO  - gRPC Server started, listening on port 7070.
2020-09-29 13:16:53,397 79102 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-29 13:16:53,462 79167 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-29 13:16:55,023 80728 INFO  - ==> GRPC service request ended:  >>> 
2020-09-29 13:16:55,023 80728 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-29 13:17:38,054 123759 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 908783116
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-29 13:17:38,089 123794 INFO  - ==> GRPC service request ended:  >>> isbn: 908783116

2020-09-29 13:17:38,090 123795 INFO  - ==> GRPC service request successfull:  >>> isbn: 908783116

2020-09-29 13:17:45,593 131298 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.UserLoginRequest >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.login(UserLoginRequest,StreamObserver))
2020-09-29 13:17:46,173 131878 INFO  - ==> GRPC service request ended:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-29 13:17:46,173 131878 INFO  - ==> GRPC service request successfull:  >>> serverUrl: "http://localhost:8080/nuxeo"
userId: "gaurav"
password: "gaurav"

2020-09-29 13:17:56,727 142432 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 908783116
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.saveBookToServer(IsbnRequest,StreamObserver))
2020-09-29 13:17:56,939 142644 INFO  - ==> GRPC service request ended:  >>> isbn: 908783116

2020-09-29 13:17:56,939 142644 INFO  - ==> GRPC service request successfull:  >>> isbn: 908783116

2020-09-29 13:17:57,107 142812 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-29 13:17:57,967 143672 INFO  - ==> GRPC service request ended:  >>> 
2020-09-29 13:17:57,968 143673 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-29 13:18:33,382 179087 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.fetchAllBooksFromServer(EmptyRequest,StreamObserver))
2020-09-29 13:18:33,405 179110 INFO  - ==> GRPC service request ended:  >>> 
2020-09-29 13:18:33,405 179110 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-29 13:18:45,325 191030 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-29 13:18:45,632 191337 INFO  - ==> GRPC service request ended:  >>> 
2020-09-29 13:18:45,633 191338 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-29 13:19:05,390 211095 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 56635
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-29 13:19:05,396 211101 INFO  - ==> GRPC service request ended:  >>> isbn: 56635

2020-09-29 13:19:05,397 211102 INFO  - ==> GRPC service request successfull:  >>> isbn: 56635

2020-09-29 13:19:12,814 218519 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 56635
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-29 13:19:12,860 218565 INFO  - ==> GRPC service request ended:  >>> isbn: 56635

2020-09-29 13:19:12,860 218565 INFO  - ==> GRPC service request successfull:  >>> isbn: 56635

2020-09-29 13:19:12,888 218593 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-29 13:19:13,185 218890 INFO  - ==> GRPC service request ended:  >>> 
2020-09-29 13:19:13,185 218890 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-29 13:19:16,964 222669 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 56635
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.downloadBookFromServer(IsbnRequest,StreamObserver))
2020-09-29 13:19:17,012 222717 INFO  - ==> GRPC service request ended:  >>> isbn: 56635

2020-09-29 13:19:17,013 222718 INFO  - ==> GRPC service request successfull:  >>> isbn: 56635

2020-09-29 13:19:17,077 222782 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-29 13:19:17,570 223275 INFO  - ==> GRPC service request ended:  >>> 
2020-09-29 13:19:17,573 223278 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-29 13:19:38,754 244459 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-29 13:19:39,026 244731 INFO  - ==> GRPC service request ended:  >>> 
2020-09-29 13:19:39,027 244732 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-29 13:21:07,840 333545 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-29 13:21:08,149 333854 INFO  - ==> GRPC service request ended:  >>> 
2020-09-29 13:21:08,149 333854 INFO  - ==> GRPC service request successfull:  >>> 
