2020-09-03 19:00:01,310 85875294 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 19:00:01,352 85875336 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-03 19:00:01,352 85875336 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-03 19:00:01,355 85875339 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 19:00:01,355 85875339 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 19:01:37,933 85971917 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 19:01:37,950 85971934 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 19:01:37,950 85971934 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 19:07:14,283 86308267 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 19:07:14,287 86308271 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-03 19:07:14,287 86308271 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-03 19:07:14,289 86308273 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 19:07:14,289 86308273 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 19:07:21,084 86315068 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 19:07:21,090 86315074 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 19:07:21,090 86315074 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 19:22:44,469 87238453 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 19:22:44,477 87238461 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 19:22:44,477 87238461 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 19:23:02,271 87256255 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 489649
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-03 19:23:02,405 87256389 INFO  - ==> GRPC service request ended:  >>> isbn: 489649

2020-09-03 19:23:02,405 87256389 INFO  - ==> GRPC service request successfull:  >>> isbn: 489649

2020-09-03 19:23:02,442 87256426 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 19:23:02,448 87256432 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 19:23:02,448 87256432 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 19:23:16,107 87270091 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 46464699
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-03 19:23:16,117 87270101 INFO  - ==> GRPC service request ended:  >>> isbn: 46464699

2020-09-03 19:23:16,117 87270101 INFO  - ==> GRPC service request successfull:  >>> isbn: 46464699

2020-09-03 19:23:16,155 87270139 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 19:23:16,159 87270143 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 19:23:16,159 87270143 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 19:35:54,645 88028629 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 19:35:54,650 88028634 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-03 19:35:54,651 88028635 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-03 19:35:54,653 88028637 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 19:35:54,654 88028638 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 19:36:02,813 88036797 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 19:36:02,817 88036801 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 19:36:02,818 88036802 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 19:49:05,023 88819007 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 83661
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-03 19:49:05,031 88819015 INFO  - ==> GRPC service request ended:  >>> isbn: 83661

2020-09-03 19:49:05,032 88819016 INFO  - ==> GRPC service request successfull:  >>> isbn: 83661

2020-09-03 19:49:05,074 88819058 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 19:49:05,080 88819064 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 19:49:05,080 88819064 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 19:49:46,489 88860473 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 41864161
  title: "RandomT"
  author: "RandomA"
  publisher: "RandomP"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 19:49:46,501 88860485 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 41864161
  title: "RandomT"
  author: "RandomA"
  publisher: "RandomP"
}

2020-09-03 19:49:46,501 88860485 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 41864161
  title: "RandomT"
  author: "RandomA"
  publisher: "RandomP"
}

2020-09-03 19:49:46,567 88860551 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 19:49:46,572 88860556 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 19:49:46,572 88860556 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 19:49:59,629 88873613 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 41864161
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-03 19:49:59,641 88873625 INFO  - ==> GRPC service request ended:  >>> isbn: 41864161

2020-09-03 19:49:59,642 88873626 INFO  - ==> GRPC service request successfull:  >>> isbn: 41864161

2020-09-03 19:49:59,721 88873705 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 19:49:59,725 88873709 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 19:49:59,726 88873710 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 20:07:21,282 89915266 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 20:07:21,287 89915271 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-03 20:07:21,288 89915272 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-03 20:07:21,290 89915274 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 20:07:21,290 89915274 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 20:08:28,765 89982749 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 20:08:28,772 89982756 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 20:08:28,773 89982757 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 20:11:23,241 90157225 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 20:11:23,251 90157235 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 20:11:23,251 90157235 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 20:15:44,255 90418239 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 20:15:44,261 90418245 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 20:15:44,261 90418245 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 20:36:56,014 91689998 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookRequestId: 1
bookDetails {
  isbn: 5161968554
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 20:36:56,027 91690011 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-03 20:36:56,027 91690011 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-03 20:36:56,029 91690013 INFO  - ==> GRPC service request ended:  >>> bookRequestId: 1
bookDetails {
  isbn: 5161968554
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-03 20:36:56,030 91690014 INFO  - ==> GRPC service request successfull:  >>> bookRequestId: 1
bookDetails {
  isbn: 5161968554
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-03 20:41:13,614 91947598 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookRequestId: 1
bookDetails {
  isbn: 5161968554
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 20:41:13,629 91947613 WARN  - SQL Error: 20000, SQLState: 23505
2020-09-03 20:41:13,629 91947613 ERROR - The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by 'UK_EHPDFJPU1JM3HIJHJ4MM0HX9H' defined on 'BOOK'.
2020-09-03 20:41:13,629 91947613 ERROR - HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
2020-09-03 20:41:13,632 91947616 INFO  - ==> GRPC service request ended:  >>> bookRequestId: 1
bookDetails {
  isbn: 5161968554
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-03 20:41:13,632 91947616 ERROR - ==> GRPC service request failed: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2020-09-03 20:41:13,633 91947617 ERROR - Exception while executing runnable io.grpc.internal.ServerImpl$JumpToApplicationThreadServerStreamListener$1HalfClosed@23fced92
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:297) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:254) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:537) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:746) ~[spring-tx-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:714) ~[spring-tx-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:534) ~[spring-tx-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:305) ~[spring-tx-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144) ~[spring-data-jpa-2.1.18.RELEASE.jar:2.1.18.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364) ~[spring-data-jpa-2.1.18.RELEASE.jar:2.1.18.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61) ~[spring-data-commons-2.1.18.RELEASE.jar:2.1.18.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at com.sun.proxy.$Proxy96.save(Unknown Source) ~[?:?]
	at lib.service.api.impl.BookServiceImpl.addBook(BookServiceImpl.java:26) ~[classes/:?]
	at lib.grpc.services.GrpcBookService.addBook(GrpcBookService.java:45) ~[classes/:?]
	at lib.grpc.services.GrpcBookService$$FastClassBySpringCGLIB$$37be6d05.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:752) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$e69ae75a.addBook(<generated>) ~[classes/:?]
	at lib.grpc.services.auto.BookServiceGrpc$MethodHandlers.invoke(BookServiceGrpc.java:559) ~[classes/:?]
	at io.grpc.stub.ServerCalls$UnaryServerCallHandler$UnaryServerCallListener.onHalfClose(ServerCalls.java:172) ~[grpc-stub-1.30.0.jar:1.30.0]
	at io.grpc.internal.ServerCallImpl$ServerStreamListenerImpl.halfClosed(ServerCallImpl.java:331) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.ServerImpl$JumpToApplicationThreadServerStreamListener$1HalfClosed.runInContext(ServerImpl.java:820) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37) ~[grpc-core-1.30.0.jar:1.30.0]
	at io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:123) [grpc-core-1.30.0.jar:1.30.0]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:59) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:178) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3192) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3706) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:90) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:478) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:356) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1472) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:512) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2506) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:533) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 45 more
Caused by: org.apache.derby.shared.common.error.DerbySQLIntegrityConstraintViolationException: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by 'UK_EHPDFJPU1JM3HIJHJ4MM0HX9H' defined on 'BOOK'.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeLargeUpdate(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3192) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3706) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:90) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:478) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:356) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1472) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:512) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2506) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:533) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 45 more
Caused by: org.apache.derby.iapi.error.StandardException: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by 'UK_EHPDFJPU1JM3HIJHJ4MM0HX9H' defined on 'BOOK'.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.IndexChanger.insertAndCheckDups(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.IndexChanger.doInsert(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.IndexChanger.insert(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.IndexSetChanger.insert(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.RowChangerImpl.insertRow(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.InsertResultSet.open(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeLargeUpdate(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3192) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3706) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:90) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:478) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:356) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1472) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:512) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2506) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:533) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 45 more
2020-09-03 20:52:04,753 92598737 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 20:52:04,763 92598747 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 20:52:04,763 92598747 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 20:52:17,793 92611777 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 20:52:17,796 92611780 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 20:52:17,797 92611781 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 20:52:38,365 92632349 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 2651891
  title: "T1"
  author: "A1"
  publisher: "P1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 20:52:38,377 92632361 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 2651891
  title: "T1"
  author: "A1"
  publisher: "P1"
}

2020-09-03 20:52:38,378 92632362 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 2651891
  title: "T1"
  author: "A1"
  publisher: "P1"
}

2020-09-03 20:52:38,434 92632418 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 20:52:38,437 92632421 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 20:52:38,437 92632421 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:00:35,463 93109447 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:00:35,468 93109452 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:00:35,469 93109453 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:00:43,190 93117174 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:00:43,193 93117177 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:00:43,194 93117178 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:00:59,530 93133514 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 265161616
  title: "T2"
  author: "A2"
  publisher: "P2"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:00:59,540 93133524 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-03 21:00:59,540 93133524 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-03 21:00:59,540 93133524 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 265161616
  title: "T2"
  author: "A2"
  publisher: "P2"
}

2020-09-03 21:00:59,540 93133524 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 265161616
  title: "T2"
  author: "A2"
  publisher: "P2"
}

2020-09-03 21:00:59,602 93133586 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:00:59,605 93133589 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:00:59,605 93133589 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:04:22,086 93336070 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookRequestId: 1
bookDetails {
  isbn: 51619654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:04:22,097 93336081 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-03 21:04:22,097 93336081 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-03 21:04:22,098 93336082 INFO  - ==> GRPC service request ended:  >>> bookRequestId: 1
bookDetails {
  isbn: 51619654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-03 21:04:22,099 93336083 INFO  - ==> GRPC service request successfull:  >>> bookRequestId: 1
bookDetails {
  isbn: 51619654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-03 21:08:14,343 93568327 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:08:14,347 93568331 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-03 21:08:14,348 93568332 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-03 21:08:14,349 93568333 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:08:14,349 93568333 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:08:21,899 93575883 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:08:21,905 93575889 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:08:21,905 93575889 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:08:35,929 93589913 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 23432523
  title: "T"
  author: "A"
  publisher: "P"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:08:35,939 93589923 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 23432523
  title: "T"
  author: "A"
  publisher: "P"
}

2020-09-03 21:08:35,939 93589923 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 23432523
  title: "T"
  author: "A"
  publisher: "P"
}

2020-09-03 21:08:35,996 93589980 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:08:36,000 93589984 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:08:36,000 93589984 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:12:47,027 93841011 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:12:47,035 93841019 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:12:47,035 93841019 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:12:58,166 93852150 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:12:58,171 93852155 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:12:58,171 93852155 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:13:11,759 93865743 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 24849484
  title: "T"
  author: "A"
  publisher: "P"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:13:11,769 93865753 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 24849484
  title: "T"
  author: "A"
  publisher: "P"
}

2020-09-03 21:13:11,769 93865753 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 24849484
  title: "T"
  author: "A"
  publisher: "P"
}

2020-09-03 21:13:11,827 93865811 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:13:11,830 93865814 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:13:11,831 93865815 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:15:19,255 93993239 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:15:19,260 93993244 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:15:19,261 93993245 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:15:30,936 94004920 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:15:30,939 94004923 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:15:30,939 94004923 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:15:46,427 94020411 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 35413541
  title: "T"
  author: "A"
  publisher: "P"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:15:46,429 94020413 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 35413541
  title: "T"
  author: "A"
  publisher: "P"
}

2020-09-03 21:15:46,429 94020413 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 35413541
  title: "T"
  author: "A"
  publisher: "P"
}

2020-09-03 21:15:46,496 94020480 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:15:46,499 94020483 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:15:46,499 94020483 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:17:58,104 94152088 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:17:58,109 94152093 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:17:58,109 94152093 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:18:01,737 94155721 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:18:01,742 94155726 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:18:01,742 94155726 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:18:16,564 94170548 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 849611856
  title: "T1"
  author: "A1"
  publisher: "P1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:18:16,575 94170559 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 849611856
  title: "T1"
  author: "A1"
  publisher: "P1"
}

2020-09-03 21:18:16,576 94170560 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 849611856
  title: "T1"
  author: "A1"
  publisher: "P1"
}

2020-09-03 21:18:16,637 94170621 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:18:16,640 94170624 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:18:16,640 94170624 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:21:22,412 94356396 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:21:22,443 94356427 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:21:22,443 94356427 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:21:26,605 94360589 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:21:26,610 94360594 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:21:26,610 94360594 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:21:41,053 94375037 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 48645616
  title: "T1"
  author: "A1"
  publisher: "P1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:21:41,064 94375048 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 48645616
  title: "T1"
  author: "A1"
  publisher: "P1"
}

2020-09-03 21:21:41,064 94375048 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 48645616
  title: "T1"
  author: "A1"
  publisher: "P1"
}

2020-09-03 21:21:41,133 94375117 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:21:41,138 94375122 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:21:41,138 94375122 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:23:59,276 94513260 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:23:59,288 94513272 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:23:59,288 94513272 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:24:04,362 94518346 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:24:04,366 94518350 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:24:04,366 94518350 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:24:31,591 94545575 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 89489489
  title: "T3"
  author: "A3"
  publisher: "P3"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:24:31,601 94545585 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 89489489
  title: "T3"
  author: "A3"
  publisher: "P3"
}

2020-09-03 21:24:31,601 94545585 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 89489489
  title: "T3"
  author: "A3"
  publisher: "P3"
}

2020-09-03 21:24:31,662 94545646 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:24:31,666 94545650 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:24:31,666 94545650 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:26:17,462 94651446 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:26:17,466 94651450 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:26:17,467 94651451 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:26:26,153 94660137 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:26:26,157 94660141 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:26:26,157 94660141 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:26:36,679 94670663 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 353415
  title: "e"
  author: "e"
  publisher: "e"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:26:36,689 94670673 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 353415
  title: "e"
  author: "e"
  publisher: "e"
}

2020-09-03 21:26:36,689 94670673 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 353415
  title: "e"
  author: "e"
  publisher: "e"
}

2020-09-03 21:26:36,750 94670734 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:26:36,754 94670738 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:26:36,754 94670738 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:29:06,675 94820659 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:29:06,687 94820671 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:29:06,688 94820672 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:29:19,992 94833976 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookRequestId: 1
bookDetails {
  isbn: 5161965499
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:29:33,918 94847902 INFO  - ==> GRPC service request ended:  >>> bookRequestId: 1
bookDetails {
  isbn: 5161965499
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-03 21:29:33,918 94847902 INFO  - ==> GRPC service request successfull:  >>> bookRequestId: 1
bookDetails {
  isbn: 5161965499
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-03 21:30:00,961 94874945 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 784516
  title: "t"
  author: "t"
  publisher: "t"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:30:06,707 94880691 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 784516
  title: "t"
  author: "t"
  publisher: "t"
}

2020-09-03 21:30:06,708 94880692 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 784516
  title: "t"
  author: "t"
  publisher: "t"
}

2020-09-03 21:30:06,787 94880771 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:30:06,794 94880778 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:30:06,794 94880778 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:32:29,075 95023059 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 5252
  title: "g"
  author: "g"
  publisher: "g"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:32:29,086 95023070 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-03 21:32:29,086 95023070 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-03 21:32:29,087 95023071 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 5252
  title: "g"
  author: "g"
  publisher: "g"
}

2020-09-03 21:32:29,087 95023071 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 5252
  title: "g"
  author: "g"
  publisher: "g"
}

2020-09-03 21:32:29,172 95023156 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:32:29,176 95023160 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:32:29,176 95023160 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:32:59,242 95053226 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 23423423
  title: "d"
  author: "d"
  publisher: "d"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:32:59,250 95053234 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-03 21:32:59,250 95053234 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-03 21:32:59,251 95053235 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 23423423
  title: "d"
  author: "d"
  publisher: "d"
}

2020-09-03 21:32:59,252 95053236 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 23423423
  title: "d"
  author: "d"
  publisher: "d"
}

2020-09-03 21:32:59,311 95053295 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:32:59,318 95053302 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:32:59,318 95053302 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:41:22,215 95556199 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:41:22,221 95556205 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-03 21:41:22,221 95556205 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-03 21:41:22,223 95556207 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:41:22,224 95556208 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:41:27,898 95561882 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:41:27,904 95561888 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:41:27,904 95561888 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:41:38,986 95572970 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 489646
  title: "T"
  author: "T"
  publisher: "T"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:41:38,997 95572981 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 489646
  title: "T"
  author: "T"
  publisher: "T"
}

2020-09-03 21:41:38,997 95572981 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 489646
  title: "T"
  author: "T"
  publisher: "T"
}

2020-09-03 21:41:39,058 95573042 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:41:39,062 95573046 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:41:39,062 95573046 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:45:26,276 95800260 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:45:26,282 95800266 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:45:26,283 95800267 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:45:31,401 95805385 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:45:31,406 95805390 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:45:31,406 95805390 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:45:44,256 95818240 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 459849
  title: "s"
  author: "s"
  publisher: "s"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:45:44,259 95818243 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 459849
  title: "s"
  author: "s"
  publisher: "s"
}

2020-09-03 21:45:44,259 95818243 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 459849
  title: "s"
  author: "s"
  publisher: "s"
}

2020-09-03 21:45:44,325 95818309 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:45:44,329 95818313 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:45:44,329 95818313 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:47:55,293 95949277 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:47:55,307 95949291 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:47:55,307 95949291 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:48:00,905 95954889 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:48:00,910 95954894 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:48:00,911 95954895 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:48:09,689 95963673 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 45
  title: "f"
  author: "df"
  publisher: "df"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:48:09,701 95963685 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 45
  title: "f"
  author: "df"
  publisher: "df"
}

2020-09-03 21:48:09,701 95963685 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 45
  title: "f"
  author: "df"
  publisher: "df"
}

2020-09-03 21:48:09,763 95963747 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:48:09,768 95963752 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:48:09,768 95963752 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:49:51,301 96065285 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 55
  title: "t"
  author: "t"
  publisher: "w"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:51:38,141 96172125 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 55
  title: "t"
  author: "t"
  publisher: "w"
}

2020-09-03 21:51:38,141 96172125 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 55
  title: "t"
  author: "t"
  publisher: "w"
}

2020-09-03 21:51:38,216 96172200 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:51:38,223 96172207 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:51:38,223 96172207 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:57:49,324 96543308 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:57:49,331 96543315 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:57:49,331 96543315 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:58:03,125 96557109 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 5645
  title: "rthtr"
  author: "sdfsd"
  publisher: "dbe"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:58:08,383 96562367 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 5645
  title: "rthtr"
  author: "sdfsd"
  publisher: "dbe"
}

2020-09-03 21:58:08,383 96562367 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 5645
  title: "rthtr"
  author: "sdfsd"
  publisher: "dbe"
}

2020-09-03 21:58:08,464 96562448 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:58:08,470 96562454 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:58:08,470 96562454 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:58:40,180 96594164 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 5645
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-03 21:58:40,192 96594176 INFO  - ==> GRPC service request ended:  >>> isbn: 5645

2020-09-03 21:58:40,193 96594177 INFO  - ==> GRPC service request successfull:  >>> isbn: 5645

2020-09-03 21:58:40,254 96594238 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:58:40,259 96594243 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:58:40,259 96594243 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:58:56,788 96610772 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 55
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-03 21:58:56,799 96610783 INFO  - ==> GRPC service request ended:  >>> isbn: 55

2020-09-03 21:58:56,799 96610783 INFO  - ==> GRPC service request successfull:  >>> isbn: 55

2020-09-03 21:58:56,838 96610822 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:58:56,842 96610826 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:58:56,843 96610827 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:59:15,126 96629110 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 98092348
  title: "jiosfno"
  author: "nionfvo"
  publisher: "nwfiosndio"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-03 21:59:15,135 96629119 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 98092348
  title: "jiosfno"
  author: "nionfvo"
  publisher: "nwfiosndio"
}

2020-09-03 21:59:15,135 96629119 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 98092348
  title: "jiosfno"
  author: "nionfvo"
  publisher: "nwfiosndio"
}

2020-09-03 21:59:15,367 96629351 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:59:15,371 96629355 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:59:15,372 96629356 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-03 21:59:28,518 96642502 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 98092348
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-03 21:59:28,529 96642513 INFO  - ==> GRPC service request ended:  >>> isbn: 98092348

2020-09-03 21:59:28,529 96642513 INFO  - ==> GRPC service request successfull:  >>> isbn: 98092348

2020-09-03 21:59:28,583 96642567 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-03 21:59:28,587 96642571 INFO  - ==> GRPC service request ended:  >>> 
2020-09-03 21:59:28,587 96642571 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 01:53:55,031 110709015 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3h29s42ms901µs100ns).
2020-09-04 08:27:51,052 134345036 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6h33m31s42ms454µs300ns).
2020-09-04 14:12:34,132 2076  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 45724 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-04 14:12:34,144 2088  INFO  - No active profile set, falling back to default profiles: default
2020-09-04 14:12:34,954 2898  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-04 14:12:35,047 2991  INFO  - Finished Spring Data repository scanning in 81ms. Found 1 JPA repository interfaces.
2020-09-04 14:12:36,258 4202  INFO  - HikariPool-1 - Starting...
2020-09-04 14:12:36,266 4210  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-04 14:12:36,789 4733  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-04 14:12:36,794 4738  INFO  - HikariPool-1 - Start completed.
2020-09-04 14:12:36,889 4833  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-04 14:12:37,066 5010  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-04 14:12:37,067 5011  INFO  - HHH000206: hibernate.properties not found
2020-09-04 14:12:37,382 5326  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-04 14:12:38,090 6034  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-04 14:12:38,099 6043  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-04 14:12:39,396 7340  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-04 14:12:39,945 7889  INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-04 14:12:40,430 8374  INFO  - Started BooksLibraryApp in 6.815 seconds (JVM running for 8.526)
2020-09-04 14:12:40,432 8376  INFO  - Starting gRPC Server ...
2020-09-04 14:12:40,511 8455  INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$b121d898' service has been registered.
2020-09-04 14:12:41,605 9549  INFO  - gRPC Server started, listening on port 7070.
2020-09-04 14:13:10,013 37957 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:13:10,072 38016 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-04 14:13:10,372 38316 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:13:10,373 38317 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 14:22:18,327 586271 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:22:18,351 586295 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:22:18,351 586295 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 14:23:17,954 645898 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "r"
  author: "r"
  publisher: "r"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 14:23:28,911 656855 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "r"
  author: "r"
  publisher: "r"
}

2020-09-04 14:23:28,912 656856 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "r"
  author: "r"
  publisher: "r"
}

2020-09-04 14:23:29,011 656955 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:23:29,044 656988 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:23:29,044 656988 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 14:24:11,006 698950 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "r"
  author: "r"
  publisher: "r"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 14:24:25,592 713536 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "r"
  author: "r"
  publisher: "r"
}

2020-09-04 14:24:25,593 713537 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "r"
  author: "r"
  publisher: "r"
}

2020-09-04 14:24:25,681 713625 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:24:25,703 713647 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:24:25,703 713647 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 14:25:03,952 751896 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "g"
  author: "g"
  publisher: "g"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 14:25:09,478 757422 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "g"
  author: "g"
  publisher: "g"
}

2020-09-04 14:25:09,479 757423 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "g"
  author: "g"
  publisher: "g"
}

2020-09-04 14:25:09,588 757532 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:25:09,597 757541 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:25:09,597 757541 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 14:42:56,633 1824577 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookRequestId: 1
bookDetails {
  isbn: 51619654994
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 14:42:56,637 1824581 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-04 14:42:56,638 1824582 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-04 14:42:56,745 1824689 INFO  - ==> GRPC service request ended:  >>> bookRequestId: 1
bookDetails {
  isbn: 51619654994
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-04 14:42:56,746 1824690 INFO  - ==> GRPC service request successfull:  >>> bookRequestId: 1
bookDetails {
  isbn: 51619654994
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-04 14:52:39,237 2407181 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:52:39,247 2407191 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:52:39,248 2407192 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 14:52:48,410 2416354 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:52:48,419 2416363 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:52:48,419 2416363 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 14:53:08,755 2436699 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:53:08,762 2436706 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:53:08,762 2436706 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 14:55:33,645 2581589 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:55:33,654 2581598 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:55:33,654 2581598 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 14:55:39,350 2587294 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:55:39,356 2587300 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:55:39,356 2587300 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 14:55:56,679 2604623 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "r"
  author: "r"
  publisher: "r"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 14:55:56,682 2604626 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "r"
  author: "r"
  publisher: "r"
}

2020-09-04 14:55:56,682 2604626 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "r"
  author: "r"
  publisher: "r"
}

2020-09-04 14:55:56,750 2604694 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:55:56,756 2604700 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:55:56,758 2604702 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 14:58:01,937 2729881 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:58:01,948 2729892 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:58:01,949 2729893 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 14:58:07,709 2735653 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:58:07,717 2735661 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:58:07,717 2735661 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 14:58:21,350 2749294 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "e"
  author: "e"
  publisher: "e"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 14:58:21,352 2749296 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "e"
  author: "e"
  publisher: "e"
}

2020-09-04 14:58:21,352 2749296 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "e"
  author: "e"
  publisher: "e"
}

2020-09-04 14:58:21,412 2749356 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:58:21,416 2749360 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:58:21,416 2749360 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 14:58:50,171 2778115 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "e"
  author: "e"
  publisher: "e"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 14:58:50,173 2778117 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "e"
  author: "e"
  publisher: "e"
}

2020-09-04 14:58:50,173 2778117 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "e"
  author: "e"
  publisher: "e"
}

2020-09-04 14:58:50,231 2778175 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 14:58:50,237 2778181 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 14:58:50,237 2778181 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 15:01:23,683 2931627 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 15:01:23,691 2931635 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 15:01:23,692 2931636 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 15:01:58,972 2966916 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 851859
  title: "e"
  author: "e"
  publisher: "e"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 15:01:58,985 2966929 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 851859
  title: "e"
  author: "e"
  publisher: "e"
}

2020-09-04 15:01:58,985 2966929 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 851859
  title: "e"
  author: "e"
  publisher: "e"
}

2020-09-04 15:01:59,068 2967012 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 15:01:59,074 2967018 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 15:01:59,074 2967018 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 15:05:27,882 3175826 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 15:05:27,891 3175835 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 15:05:27,892 3175836 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 15:05:45,563 3193507 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 15:05:45,570 3193514 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 15:05:45,570 3193514 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 15:06:00,819 3208763 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "ed"
  author: "ff"
  publisher: "ff"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 15:06:00,822 3208766 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "ed"
  author: "ff"
  publisher: "ff"
}

2020-09-04 15:06:00,823 3208767 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "ed"
  author: "ff"
  publisher: "ff"
}

2020-09-04 15:06:00,890 3208834 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 15:06:00,897 3208841 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 15:06:00,897 3208841 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 15:06:34,108 3242052 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 34234
  title: "df"
  author: "dd"
  publisher: "ff"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 15:06:34,122 3242066 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 34234
  title: "df"
  author: "dd"
  publisher: "ff"
}

2020-09-04 15:06:34,122 3242066 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 34234
  title: "df"
  author: "dd"
  publisher: "ff"
}

2020-09-04 15:06:34,241 3242185 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 15:06:34,245 3242189 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 15:06:34,246 3242190 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 15:12:06,114 3574058 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 15:12:06,120 3574064 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-04 15:12:06,121 3574065 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-04 15:12:06,123 3574067 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 15:12:06,123 3574067 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 15:12:16,163 3584107 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 15:12:16,169 3584113 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 15:12:16,169 3584113 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 15:12:27,879 3595823 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "e"
  author: "e"
  publisher: "e"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 15:12:27,881 3595825 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-04 15:12:27,881 3595825 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-04 15:12:27,882 3595826 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "e"
  author: "e"
  publisher: "e"
}

2020-09-04 15:12:27,883 3595827 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "e"
  author: "e"
  publisher: "e"
}

2020-09-04 15:12:27,946 3595890 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 15:12:27,949 3595893 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 15:12:27,949 3595893 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 15:12:45,107 3613051 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 62626
  title: "werwe"
  author: "werwe"
  publisher: "sdfs"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 15:12:45,119 3613063 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 62626
  title: "werwe"
  author: "werwe"
  publisher: "sdfs"
}

2020-09-04 15:12:45,120 3613064 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 62626
  title: "werwe"
  author: "werwe"
  publisher: "sdfs"
}

2020-09-04 15:12:45,188 3613132 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 15:12:45,191 3613135 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 15:12:45,192 3613136 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 18:28:50,983 1986  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 4008 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-04 18:28:50,988 1991  INFO  - No active profile set, falling back to default profiles: default
2020-09-04 18:28:51,735 2738  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-04 18:28:51,821 2824  INFO  - Finished Spring Data repository scanning in 71ms. Found 1 JPA repository interfaces.
2020-09-04 18:28:52,892 3895  INFO  - HikariPool-1 - Starting...
2020-09-04 18:28:52,898 3901  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-04 18:28:53,278 4281  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-04 18:28:53,283 4286  INFO  - HikariPool-1 - Start completed.
2020-09-04 18:28:53,416 4419  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-04 18:28:53,717 4720  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-04 18:28:53,721 4724  INFO  - HHH000206: hibernate.properties not found
2020-09-04 18:28:54,227 5230  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-04 18:28:55,046 6049  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-04 18:28:55,055 6058  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-04 18:28:56,129 7132  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-04 18:28:56,556 7559  INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-04 18:28:57,002 8005  INFO  - Started BooksLibraryApp in 6.492 seconds (JVM running for 8.149)
2020-09-04 18:28:57,004 8007  INFO  - Starting gRPC Server ...
2020-09-04 18:28:57,079 8082  INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$f39d7248' service has been registered.
2020-09-04 18:28:58,072 9075  INFO  - gRPC Server started, listening on port 7070.
2020-09-04 18:29:49,040 60043 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookRequestId: 1
bookDetails {
  isbn: 51619654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 18:29:49,077 60080 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-04 18:29:49,376 60379 INFO  - ==> GRPC service request ended:  >>> bookRequestId: 1
bookDetails {
  isbn: 51619654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-04 18:29:49,376 60379 INFO  - ==> GRPC service request successfull:  >>> bookRequestId: 1
bookDetails {
  isbn: 51619654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-04 18:32:01,354 192357 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 18:32:01,435 192438 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 18:32:01,436 192439 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 18:32:08,752 199755 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 18:32:08,772 199775 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 18:32:08,772 199775 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 18:32:27,556 218559 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "d"
  author: "d"
  publisher: "d"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 18:32:27,559 218562 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "d"
  author: "d"
  publisher: "d"
}

2020-09-04 18:32:27,560 218563 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "d"
  author: "d"
  publisher: "d"
}

2020-09-04 18:32:27,632 218635 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 18:32:27,646 218649 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 18:32:27,646 218649 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 18:32:47,698 238701 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 3453453
  title: "edf"
  author: "dsfsds"
  publisher: "sdfsdfsd"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 18:32:47,781 238784 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 3453453
  title: "edf"
  author: "dsfsds"
  publisher: "sdfsdfsd"
}

2020-09-04 18:32:47,781 238784 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 3453453
  title: "edf"
  author: "dsfsds"
  publisher: "sdfsdfsd"
}

2020-09-04 18:32:47,874 238877 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 18:32:47,891 238894 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 18:32:47,891 238894 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 18:33:38,704 289707 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookRequestId: 1
bookDetails {
  isbn: 516195654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 18:33:38,718 289721 INFO  - ==> GRPC service request ended:  >>> bookRequestId: 1
bookDetails {
  isbn: 516195654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-04 18:33:38,718 289721 INFO  - ==> GRPC service request successfull:  >>> bookRequestId: 1
bookDetails {
  isbn: 516195654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-04 18:44:39,538 950541 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 18:44:39,562 950565 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 18:44:39,562 950565 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 18:44:51,166 962169 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 18:44:51,174 962177 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 18:44:51,174 962177 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 18:45:19,180 990183 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "er"
  author: "sd"
  publisher: "sd"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 18:45:19,183 990186 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "er"
  author: "sd"
  publisher: "sd"
}

2020-09-04 18:45:19,184 990187 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "er"
  author: "sd"
  publisher: "sd"
}

2020-09-04 18:45:19,244 990247 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 18:45:19,251 990254 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 18:45:19,251 990254 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 18:45:58,484 1029487 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookRequestId: 1
bookDetails {
  isbn: 516195654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 18:45:58,486 1029489 INFO  - ==> GRPC service request ended:  >>> bookRequestId: 1
bookDetails {
  isbn: 516195654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-04 18:45:58,487 1029490 INFO  - ==> GRPC service request successfull:  >>> bookRequestId: 1
bookDetails {
  isbn: 516195654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-04 18:46:01,980 1032983 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookRequestId: 1
bookDetails {
  isbn: 516195654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 18:46:01,982 1032985 INFO  - ==> GRPC service request ended:  >>> bookRequestId: 1
bookDetails {
  isbn: 516195654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-04 18:46:01,982 1032985 INFO  - ==> GRPC service request successfull:  >>> bookRequestId: 1
bookDetails {
  isbn: 516195654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-04 18:46:05,867 1036870 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookRequestId: 1
bookDetails {
  isbn: 516195654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 18:46:05,870 1036873 INFO  - ==> GRPC service request ended:  >>> bookRequestId: 1
bookDetails {
  isbn: 516195654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-04 18:46:05,870 1036873 INFO  - ==> GRPC service request successfull:  >>> bookRequestId: 1
bookDetails {
  isbn: 516195654
  title: "My Book Title"
  author: "Some Author"
  publisher: "Some Publisher"
}

2020-09-04 18:49:18,335 1229338 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 18:49:18,348 1229351 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 18:49:18,349 1229352 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 18:52:47,826 1438829 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 18:52:47,839 1438842 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 18:52:47,840 1438843 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 18:52:58,018 1449021 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 18:52:58,024 1449027 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 18:52:58,024 1449027 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 18:55:03,799 1574802 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "we"
  author: "sd"
  publisher: "sd"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 18:55:03,803 1574806 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "we"
  author: "sd"
  publisher: "sd"
}

2020-09-04 18:55:03,803 1574806 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "we"
  author: "sd"
  publisher: "sd"
}

2020-09-04 18:55:03,902 1574905 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 18:55:03,909 1574912 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 18:55:03,909 1574912 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 18:55:51,186 1622189 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 18:55:51,192 1622195 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 18:55:51,194 1622197 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 18:59:31,217 1842220 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 18:59:31,226 1842229 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-04 18:59:31,227 1842230 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-04 18:59:31,229 1842232 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 18:59:31,229 1842232 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 19:00:47,783 1918786 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "d"
  author: "d"
  publisher: "dd"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 19:00:47,787 1918790 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "d"
  author: "d"
  publisher: "dd"
}

2020-09-04 19:00:47,788 1918791 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "d"
  author: "d"
  publisher: "dd"
}

2020-09-04 19:00:47,889 1918892 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 19:00:47,896 1918899 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 19:00:47,896 1918899 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 19:06:22,876 2253879 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 19:06:22,889 2253892 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 19:06:22,889 2253892 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 19:06:38,801 2269804 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "l"
  author: "p"
  publisher: "p"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 19:06:38,803 2269806 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "l"
  author: "p"
  publisher: "p"
}

2020-09-04 19:06:38,803 2269806 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "l"
  author: "p"
  publisher: "p"
}

2020-09-04 19:06:38,886 2269889 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 19:06:38,891 2269894 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 19:06:38,891 2269894 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 19:07:44,488 2335491 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "s"
  author: "s"
  publisher: "s"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 19:07:44,492 2335495 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "s"
  author: "s"
  publisher: "s"
}

2020-09-04 19:07:44,492 2335495 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "s"
  author: "s"
  publisher: "s"
}

2020-09-04 19:07:44,594 2335597 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 19:07:44,598 2335601 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 19:07:44,598 2335601 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 19:08:28,515 2379518 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 3423423
  title: "sd"
  author: "sdfs"
  publisher: "sdfsd"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 19:08:28,527 2379530 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 3423423
  title: "sd"
  author: "sdfs"
  publisher: "sdfsd"
}

2020-09-04 19:08:28,527 2379530 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 3423423
  title: "sd"
  author: "sdfs"
  publisher: "sdfsd"
}

2020-09-04 19:08:28,642 2379645 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 19:08:28,649 2379652 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 19:08:28,649 2379652 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 19:11:52,039 2583042 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 19:11:52,048 2583051 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 19:11:52,048 2583051 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 19:12:02,523 2593526 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 19:12:02,528 2593531 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 19:12:02,528 2593531 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 19:12:20,342 2611345 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "ee"
  author: "ee"
  publisher: "ee"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 19:12:20,344 2611347 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "ee"
  author: "ee"
  publisher: "ee"
}

2020-09-04 19:12:20,345 2611348 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "ee"
  author: "ee"
  publisher: "ee"
}

2020-09-04 19:12:20,430 2611433 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 19:12:20,434 2611437 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 19:12:20,434 2611437 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 19:12:34,678 2625681 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 85414196
  title: "ddd"
  author: "dddd"
  publisher: "ssss"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 19:12:34,691 2625694 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 85414196
  title: "ddd"
  author: "dddd"
  publisher: "ssss"
}

2020-09-04 19:12:34,691 2625694 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 85414196
  title: "ddd"
  author: "dddd"
  publisher: "ssss"
}

2020-09-04 19:12:34,800 2625803 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 19:12:34,810 2625813 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 19:12:34,811 2625814 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 19:33:57,998 3909001 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "55"
  author: "144"
  publisher: "15"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 19:33:58,011 3909014 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-04 19:33:58,012 3909015 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-04 19:33:58,012 3909015 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "55"
  author: "144"
  publisher: "15"
}

2020-09-04 19:33:58,013 3909016 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "55"
  author: "144"
  publisher: "15"
}

2020-09-04 19:33:58,143 3909146 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 19:33:58,149 3909152 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 19:33:58,149 3909152 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 19:37:43,602 4134605 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 19:37:43,607 4134610 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 19:37:43,608 4134611 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 19:38:06,534 4157537 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "5156"
  author: "15641"
  publisher: "41856"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 19:38:06,536 4157539 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "5156"
  author: "15641"
  publisher: "41856"
}

2020-09-04 19:38:06,537 4157540 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "5156"
  author: "15641"
  publisher: "41856"
}

2020-09-04 19:38:21,392 4172395 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "5156"
  author: "15641"
  publisher: "41856"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 19:38:21,394 4172397 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "5156"
  author: "15641"
  publisher: "41856"
}

2020-09-04 19:38:21,395 4172398 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "5156"
  author: "15641"
  publisher: "41856"
}

2020-09-04 19:38:28,382 4179385 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 1533388
  title: "5156"
  author: "15641"
  publisher: "41856"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-04 19:38:28,394 4179397 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 1533388
  title: "5156"
  author: "15641"
  publisher: "41856"
}

2020-09-04 19:38:28,395 4179398 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 1533388
  title: "5156"
  author: "15641"
  publisher: "41856"
}

2020-09-04 19:38:28,509 4179512 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 19:38:28,513 4179516 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 19:38:28,513 4179516 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 20:36:58,247 7689250 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 20:36:58,253 7689256 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-04 20:36:58,253 7689256 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-04 20:36:58,255 7689258 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 20:36:58,255 7689258 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 20:37:10,985 7701988 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 20:37:10,990 7701993 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 20:37:10,990 7701993 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 20:57:36,378 8927381 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 20:57:36,383 8927386 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-04 20:57:36,383 8927386 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-04 20:57:36,384 8927387 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 20:57:36,384 8927387 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:00:41,383 9112386 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:00:41,390 9112393 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:00:41,391 9112394 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:00:55,041 9126044 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:00:55,047 9126050 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:00:55,048 9126051 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:01:18,745 9149748 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:01:18,749 9149752 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:01:18,750 9149753 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:01:44,050 9175053 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:01:44,054 9175057 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:01:44,054 9175057 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:04:23,497 9334500 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:04:23,502 9334505 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:04:23,502 9334505 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:08:49,966 9600969 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:08:49,971 9600974 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:08:49,971 9600974 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:18:59,515 10210518 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:18:59,521 10210524 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:18:59,521 10210524 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:19:18,224 10229227 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:19:18,228 10229231 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:19:18,229 10229232 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:19:46,290 10257293 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:19:46,293 10257296 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:19:46,293 10257296 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:21:54,503 10385506 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:21:54,507 10385510 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:21:54,508 10385511 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:22:08,951 10399954 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:22:08,955 10399958 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:22:08,955 10399958 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:22:13,295 10404298 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:22:13,300 10404303 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:22:13,300 10404303 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:22:14,024 10405027 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:22:14,027 10405030 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:22:14,027 10405030 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:23:16,110 10467113 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:23:16,114 10467117 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:23:16,114 10467117 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:28:56,437 10807440 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:28:56,442 10807445 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-04 21:28:56,443 10807446 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-04 21:28:56,445 10807448 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:28:56,445 10807448 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:32:23,422 11014425 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:32:23,427 11014430 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:32:23,427 11014430 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:33:08,943 11059946 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:33:08,948 11059951 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:33:08,948 11059951 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:33:16,911 11067914 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:33:16,914 11067917 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:33:16,914 11067917 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:34:07,892 11118895 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:34:07,896 11118899 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:34:07,897 11118900 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:34:24,684 11135687 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:34:24,687 11135690 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:34:24,688 11135691 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:34:36,372 11147375 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:34:36,376 11147379 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:34:36,377 11147380 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:34:43,389 11154392 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:34:43,392 11154395 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:34:43,392 11154395 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:38:08,203 11359206 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:38:08,207 11359210 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:38:08,207 11359210 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:38:15,713 11366716 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:38:15,718 11366721 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:38:15,718 11366721 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:38:23,823 11374826 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:38:23,826 11374829 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:38:23,827 11374830 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:38:39,049 11390052 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:38:39,052 11390055 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:38:39,052 11390055 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:38:42,086 11393089 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:38:42,089 11393092 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:38:42,089 11393092 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:38:51,890 11402893 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:38:51,894 11402897 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:38:51,894 11402897 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:39:02,541 11413544 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:39:02,545 11413548 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:39:02,546 11413549 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:39:23,709 11434712 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:39:23,713 11434716 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:39:23,713 11434716 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:39:55,261 11466264 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:39:55,265 11466268 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:39:55,266 11466269 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:43:39,506 11690509 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:43:39,511 11690514 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:43:39,511 11690514 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:43:50,282 11701285 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:43:50,285 11701288 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:43:50,285 11701288 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:43:54,753 11705756 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:43:54,757 11705760 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:43:54,757 11705760 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:43:58,788 11709791 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:43:58,790 11709793 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:43:58,790 11709793 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:44:01,956 11712959 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:44:01,959 11712962 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:44:01,959 11712962 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:44:09,469 11720472 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:44:09,472 11720475 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:44:09,472 11720475 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:46:58,012 11889015 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:46:58,016 11889019 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:46:58,016 11889019 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:47:04,957 11895960 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:47:04,960 11895963 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:47:04,960 11895963 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:47:09,775 11900778 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:47:09,777 11900780 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:47:09,778 11900781 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:47:18,461 11909464 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:47:18,464 11909467 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:47:18,464 11909467 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:47:22,870 11913873 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:47:22,872 11913875 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:47:22,872 11913875 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-04 21:47:30,821 11921824 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-04 21:47:30,823 11921826 INFO  - ==> GRPC service request ended:  >>> 
2020-09-04 21:47:30,824 11921827 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-05 00:54:22,564 23133567 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3h28s497ms345µs400ns).
2020-09-05 16:01:28,443 77559446 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15h7m10s606ms914µs).
2020-09-05 17:19:42,450 82253453 INFO  - Transport failed
io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 1603010200010001fc0303905ea45518ee621569225f71af
	at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:103) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:306) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:239) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:438) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-05 17:19:42,449 82253452 INFO  - Transport failed
io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 1603010200010001fc030342a6e7f7349b98d6de8b2f67c9
	at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:103) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:306) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:239) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:438) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-05 17:29:30,413 82841416 INFO  - Transport failed
io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 1603010200010001fc0303c3a0fab392cd469d17e0434ad5
	at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:103) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:306) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:239) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:438) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-05 17:29:30,429 82841432 INFO  - Transport failed
io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 1603010200010001fc03034c39a96eb9066c94941ad191ea
	at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:103) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:306) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:239) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:438) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-05 17:36:32,301 83263304 INFO  - Transport failed
io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 1603010200010001fc03030fef163bd50e8e3b2e17703513
	at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:103) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:306) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:239) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:438) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-05 17:36:32,317 83263320 INFO  - Transport failed
io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 1603010200010001fc030302980c0627baebfd0ccd39b0d1
	at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:103) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:306) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:239) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:438) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-05 22:50:55,091 102126094 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3h26s211ms68µs100ns).
2020-09-06 12:17:39,832 150530835 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13h26m49s489ms833µs200ns).
2020-09-06 19:02:10,739 174801742 INFO  - Transport failed
io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 1603010200010001fc030374b827daad03de5c9e8d539881
	at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:103) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:306) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:239) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:438) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-06 19:02:10,755 174801758 INFO  - Transport failed
io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 1603010200010001fc03039a010cd879869e701535035d87
	at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:103) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:306) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:239) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:438) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-07 08:19:08,206 222619209 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6h32m1s888ms560µs800ns).
2020-09-07 10:48:07,837 231558840 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=59s358ms202µs).
2020-09-07 12:06:16,179 236247182 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-07 12:06:16,188 236247191 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-07 12:06:16,188 236247191 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-07 12:06:16,190 236247193 INFO  - ==> GRPC service request ended:  >>> 
2020-09-07 12:06:16,190 236247193 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-07 12:06:34,283 236265286 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1533388
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-07 12:06:34,335 236265338 INFO  - ==> GRPC service request ended:  >>> isbn: 1533388

2020-09-07 12:06:34,335 236265338 INFO  - ==> GRPC service request successfull:  >>> isbn: 1533388

2020-09-07 12:06:34,383 236265386 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-07 12:06:34,388 236265391 INFO  - ==> GRPC service request ended:  >>> 
2020-09-07 12:06:34,388 236265391 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-07 12:06:44,568 236275571 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-07 12:06:44,572 236275575 INFO  - ==> GRPC service request ended:  >>> 
2020-09-07 12:06:44,572 236275575 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-07 12:06:53,451 236284454 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-07 12:06:53,455 236284458 INFO  - ==> GRPC service request ended:  >>> 
2020-09-07 12:06:53,456 236284459 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-07 17:00:53,562 253924565 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=31m26s607ms488µs500ns).
2020-09-07 17:07:40,421 254331424 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m16s848ms56µs801ns).
2020-09-07 18:12:15,218 258206221 INFO  - Transport failed
io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 1603010200010001fc0303d61cfa368fc4d2a38ae539b763
	at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:103) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:306) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:239) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:438) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-07 18:12:15,229 258206232 INFO  - Transport failed
io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 1603010200010001fc03038a213991836585ec4fc3e09970
	at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:103) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:306) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:239) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:438) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-07 18:13:08,798 258259801 INFO  - Transport failed
io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 1603010200010001fc03030b30c1a1e477f0307b0709abd7
	at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:103) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:306) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:239) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:438) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-07 18:13:08,811 258259814 INFO  - Transport failed
io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 1603010200010001fc0303fa1ff91d894e9f4edbe5a1f326
	at io.netty.handler.codec.http2.Http2Exception.connectionError(Http2Exception.java:103) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.readClientPrefaceString(Http2ConnectionHandler.java:306) ~[netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder.decode(Http2ConnectionHandler.java:239) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:438) [netty-codec-http2-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:440) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) [netty-codec-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.50.Final.jar:4.1.50.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_252]
2020-09-08 00:38:10,467 281361470 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3h28s822ms657µs500ns).
2020-09-08 08:26:21,672 309452675 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=7h48m17s352ms954µs700ns).
2020-09-08 15:46:17,821 6650  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 307636 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-08 15:46:17,829 6658  INFO  - No active profile set, falling back to default profiles: default
2020-09-08 15:46:19,721 8550  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-08 15:46:19,902 8731  INFO  - Finished Spring Data repository scanning in 158ms. Found 1 JPA repository interfaces.
2020-09-08 15:46:22,334 11163 INFO  - HikariPool-1 - Starting...
2020-09-08 15:46:22,344 11173 WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-08 15:46:23,096 11925 INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-08 15:46:23,106 11935 INFO  - HikariPool-1 - Start completed.
2020-09-08 15:46:23,304 12133 INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-08 15:46:23,739 12568 INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-08 15:46:23,750 12579 INFO  - HHH000206: hibernate.properties not found
2020-09-08 15:46:24,465 13294 INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-08 15:46:26,736 15565 INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-08 15:46:26,758 15587 WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-08 15:46:31,692 20521 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-08 15:46:32,785 21614 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-08 15:46:33,673 22502 INFO  - Started BooksLibraryApp in 16.953 seconds (JVM running for 22.82)
2020-09-08 15:46:33,678 22507 INFO  - Starting gRPC Server ...
2020-09-08 15:46:33,815 22644 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$f76f4367' service has been registered.
2020-09-08 15:46:37,307 26136 INFO  - gRPC Server started, listening on port 7070.
2020-09-08 15:48:04,081 112910 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-08 15:48:04,161 112990 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-08 15:48:04,506 113335 INFO  - ==> GRPC service request ended:  >>> 
2020-09-08 15:48:04,506 113335 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-08 15:48:18,523 127352 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 15333
  title: "f"
  author: "f"
  publisher: "f"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-08 15:48:18,654 127483 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 15333
  title: "f"
  author: "f"
  publisher: "f"
}

2020-09-08 15:48:18,655 127484 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 15333
  title: "f"
  author: "f"
  publisher: "f"
}

2020-09-08 15:48:31,822 140651 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 1533366
  title: "f"
  author: "f"
  publisher: "f"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-08 15:48:31,942 140771 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 1533366
  title: "f"
  author: "f"
  publisher: "f"
}

2020-09-08 15:48:31,943 140772 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 1533366
  title: "f"
  author: "f"
  publisher: "f"
}

2020-09-08 15:48:32,097 140926 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-08 15:48:32,130 140959 INFO  - ==> GRPC service request ended:  >>> 
2020-09-08 15:48:32,131 140960 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-08 15:48:46,767 155596 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 1533366
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-08 15:48:46,810 155639 INFO  - ==> GRPC service request ended:  >>> isbn: 1533366

2020-09-08 15:48:46,811 155640 INFO  - ==> GRPC service request successfull:  >>> isbn: 1533366

2020-09-08 15:48:46,869 155698 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-08 15:48:46,890 155719 INFO  - ==> GRPC service request ended:  >>> 
2020-09-08 15:48:46,890 155719 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-08 15:48:57,275 166104 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-08 15:48:57,292 166121 INFO  - ==> GRPC service request ended:  >>> 
2020-09-08 15:48:57,292 166121 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-08 15:49:02,914 171743 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-08 15:49:02,925 171754 INFO  - ==> GRPC service request ended:  >>> 
2020-09-08 15:49:02,925 171754 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-09 01:51:22,052 36310881 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3h27s653ms263µs800ns).
2020-09-09 08:23:44,496 59853325 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6h32m29s104ms487µs700ns).
2020-09-09 14:13:05,093 80813922 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-09 14:13:05,149 80813978 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-09 14:13:05,149 80813978 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-09 14:13:05,155 80813984 INFO  - ==> GRPC service request ended:  >>> 
2020-09-09 14:13:05,155 80813984 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-09 14:30:14,477 81843306 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-09 14:30:14,486 81843315 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-09 14:30:14,487 81843316 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-09 14:30:14,491 81843320 INFO  - ==> GRPC service request ended:  >>> 
2020-09-09 14:30:14,491 81843320 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-09 21:05:56,373 105585202 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2h9m6s499ms53µs700ns).
2020-09-09 22:30:31,251 110660080 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=38m3s767ms959µs300ns).
2020-09-10 01:31:04,780 121493609 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3h3s535ms124µs100ns).
2020-09-10 08:18:10,759 145919588 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6h47m13s415ms340µs500ns).
2020-09-11 01:22:50,467 207399296 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3h27s902ms452µs200ns).
2020-09-11 08:28:58,436 232967265 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=7h6m15s248ms389µs400ns).
2020-09-11 11:17:16,467 243065296 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=43m17s788ms253µs100ns).
2020-09-13 18:30:45,534 2383  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 170804 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-13 18:30:45,547 2396  INFO  - No active profile set, falling back to default profiles: default
2020-09-13 18:30:46,633 3482  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-13 18:30:46,766 3615  INFO  - Finished Spring Data repository scanning in 115ms. Found 1 JPA repository interfaces.
2020-09-13 18:30:48,346 5195  INFO  - HikariPool-1 - Starting...
2020-09-13 18:30:48,355 5204  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-13 18:30:48,871 5720  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-13 18:30:48,877 5726  INFO  - HikariPool-1 - Start completed.
2020-09-13 18:30:49,002 5851  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-13 18:30:49,495 6344  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-13 18:30:49,503 6352  INFO  - HHH000206: hibernate.properties not found
2020-09-13 18:30:50,388 7237  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-13 18:30:51,452 8301  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-13 18:30:51,465 8314  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-13 18:30:54,110 10959 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-13 18:30:55,813 12662 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-13 18:30:57,181 14030 INFO  - Started BooksLibraryApp in 12.251 seconds (JVM running for 14.193)
2020-09-13 18:30:57,182 14031 INFO  - Starting gRPC Server ...
2020-09-13 18:30:57,294 14143 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$e501086e' service has been registered.
2020-09-13 18:30:59,327 16176 INFO  - gRPC Server started, listening on port 7070.
2020-09-13 18:31:24,376 41225 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-13 18:31:24,446 41295 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-13 18:31:24,845 41694 INFO  - ==> GRPC service request ended:  >>> 
2020-09-13 18:31:24,845 41694 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-13 20:34:23,673 7420522 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-13 20:34:23,721 7420570 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-13 20:34:23,721 7420570 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-13 20:34:23,728 7420577 INFO  - ==> GRPC service request ended:  >>> 
2020-09-13 20:34:23,729 7420578 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-13 20:34:32,534 7429383 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-13 20:34:32,550 7429399 INFO  - ==> GRPC service request ended:  >>> 
2020-09-13 20:34:32,551 7429400 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-13 20:34:53,246 7450095 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-13 20:34:53,257 7450106 INFO  - ==> GRPC service request ended:  >>> 
2020-09-13 20:34:53,258 7450107 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-13 20:35:05,857 7462706 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 52519
  title: "gaurav"
  author: "gaurav"
  publisher: "gaurav"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-13 20:35:06,093 7462942 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 52519
  title: "gaurav"
  author: "gaurav"
  publisher: "gaurav"
}

2020-09-13 20:35:06,093 7462942 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 52519
  title: "gaurav"
  author: "gaurav"
  publisher: "gaurav"
}

2020-09-13 20:35:06,137 7462986 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-13 20:35:06,149 7462998 INFO  - ==> GRPC service request ended:  >>> 
2020-09-13 20:35:06,150 7462999 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-13 20:35:14,163 7471012 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-13 20:35:14,170 7471019 INFO  - ==> GRPC service request ended:  >>> 
2020-09-13 20:35:14,171 7471020 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 08:27:07,587 50184436 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6h27m24s210ms705µs700ns).
2020-09-14 10:38:21,409 58058258 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m13s589ms639µs500ns).
2020-09-14 10:47:09,161 58586010 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m7s349ms694µs300ns).
2020-09-14 14:25:03,578 71660427 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 14:25:03,611 71660460 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-14 14:25:03,612 71660461 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-14 14:25:03,617 71660466 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 14:25:03,617 71660466 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 14:25:53,601 71710450 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 14:25:53,613 71710462 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 14:25:53,613 71710462 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 14:26:01,679 71718528 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 14:26:01,694 71718543 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 14:26:01,694 71718543 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 14:27:27,063 71803912 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 8485416
  title: "ooo"
  author: "oooa"
  publisher: "ooop"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-14 14:27:27,091 71803940 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 8485416
  title: "ooo"
  author: "oooa"
  publisher: "ooop"
}

2020-09-14 14:27:27,091 71803940 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 8485416
  title: "ooo"
  author: "oooa"
  publisher: "ooop"
}

2020-09-14 14:27:27,186 71804035 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 14:27:27,197 71804046 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 14:27:27,197 71804046 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 14:27:35,844 71812693 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 14:27:35,851 71812700 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 14:27:35,852 71812701 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 14:27:39,716 71816565 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 14:27:39,723 71816572 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 14:27:39,723 71816572 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 14:27:56,339 71833188 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 8485416
  title: "sss"
  author: "sss"
  publisher: "ss"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-14 14:27:56,343 71833192 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 8485416
  title: "sss"
  author: "sss"
  publisher: "ss"
}

2020-09-14 14:27:56,344 71833193 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 8485416
  title: "sss"
  author: "sss"
  publisher: "ss"
}

2020-09-14 14:28:36,136 71872985 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 8485416
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-14 14:28:36,198 71873047 INFO  - ==> GRPC service request ended:  >>> isbn: 8485416

2020-09-14 14:28:36,199 71873048 INFO  - ==> GRPC service request successfull:  >>> isbn: 8485416

2020-09-14 14:28:36,218 71873067 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 14:28:36,231 71873080 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 14:28:36,231 71873080 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 14:28:38,049 71874898 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 14:28:38,056 71874905 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 14:28:38,056 71874905 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 14:28:41,189 71878038 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 14:28:41,197 71878046 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 14:28:41,197 71878046 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 18:09:54,643 85151492 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 18:09:54,681 85151530 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-14 18:09:54,681 85151530 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-14 18:09:54,687 85151536 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 18:09:54,687 85151536 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 18:50:46,398 87603247 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 18:50:46,406 87603255 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-14 18:50:46,407 87603256 WARN  - Database 'mydb' not created, connection made to existing database instead.
2020-09-14 18:50:46,414 87603263 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 18:50:46,415 87603264 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 18:52:20,404 87697253 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 18:52:20,420 87697269 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 18:52:20,420 87697269 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 18:52:44,046 87720895 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 18:52:44,054 87720903 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 18:52:44,054 87720903 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 18:53:29,923 87766772 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 9999
  title: "DemoBookTitle"
  author: "DemoAutor"
  publisher: "DemoPublisher"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-14 18:53:29,944 87766793 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 9999
  title: "DemoBookTitle"
  author: "DemoAutor"
  publisher: "DemoPublisher"
}

2020-09-14 18:53:29,944 87766793 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 9999
  title: "DemoBookTitle"
  author: "DemoAutor"
  publisher: "DemoPublisher"
}

2020-09-14 18:53:30,040 87766889 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 18:53:30,046 87766895 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 18:53:30,046 87766895 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 18:53:45,422 87782271 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 18:53:45,430 87782279 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 18:53:45,431 87782280 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 18:53:54,664 87791513 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 18:53:54,676 87791525 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 18:53:54,676 87791525 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 18:54:14,482 87811331 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 9999
  title: "rrr"
  author: "rrr"
  publisher: "rrr"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-14 18:54:14,487 87811336 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 9999
  title: "rrr"
  author: "rrr"
  publisher: "rrr"
}

2020-09-14 18:54:14,488 87811337 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 9999
  title: "rrr"
  author: "rrr"
  publisher: "rrr"
}

2020-09-14 18:54:52,264 87849113 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 9999
  title: "rrr"
  author: "rrr"
  publisher: "rrr"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-14 18:54:52,266 87849115 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 9999
  title: "rrr"
  author: "rrr"
  publisher: "rrr"
}

2020-09-14 18:54:52,266 87849115 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 9999
  title: "rrr"
  author: "rrr"
  publisher: "rrr"
}

2020-09-14 18:55:02,277 87859126 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 99999
  title: "rrr"
  author: "rrr"
  publisher: "rrr"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-14 18:55:02,289 87859138 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 99999
  title: "rrr"
  author: "rrr"
  publisher: "rrr"
}

2020-09-14 18:55:02,289 87859138 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 99999
  title: "rrr"
  author: "rrr"
  publisher: "rrr"
}

2020-09-14 18:55:02,393 87859242 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 18:55:02,402 87859251 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 18:55:02,403 87859252 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 18:55:45,685 87902534 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 18:55:45,692 87902541 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 18:55:45,692 87902541 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 18:56:01,799 87918648 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 18:56:01,806 87918655 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 18:56:01,806 87918655 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 18:56:14,507 87931356 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 99999
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-14 18:56:14,520 87931369 INFO  - ==> GRPC service request ended:  >>> isbn: 99999

2020-09-14 18:56:14,521 87931370 INFO  - ==> GRPC service request successfull:  >>> isbn: 99999

2020-09-14 18:56:14,578 87931427 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 18:56:14,585 87931434 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 18:56:14,585 87931434 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 18:59:11,087 88107936 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 18:59:11,105 88107954 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 18:59:11,106 88107955 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 19:00:19,259 88176108 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 19:00:19,266 88176115 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 19:00:19,266 88176115 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 19:07:46,787 88623636 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 19:07:46,795 88623644 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 19:07:46,795 88623644 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 19:07:48,994 88625843 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 19:07:48,999 88625848 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 19:07:48,999 88625848 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 19:07:55,059 88631908 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 19:07:55,063 88631912 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 19:07:55,063 88631912 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 19:08:04,113 88640962 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 19:08:04,117 88640966 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 19:08:04,117 88640966 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 19:16:12,652 89129501 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 19:16:12,657 89129506 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 19:16:12,657 89129506 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 19:16:16,772 89133621 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 19:16:16,778 89133627 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 19:16:16,778 89133627 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 19:16:20,581 89137430 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 19:16:20,587 89137436 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 19:16:20,587 89137436 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 19:16:22,456 89139305 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 19:16:22,460 89139309 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 19:16:22,461 89139310 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 19:16:23,471 89140320 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 19:16:23,476 89140325 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 19:16:23,476 89140325 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 19:16:25,688 89142537 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 19:16:25,693 89142542 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 19:16:25,693 89142542 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-14 19:16:27,050 89143899 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-14 19:16:27,055 89143904 INFO  - ==> GRPC service request ended:  >>> 
2020-09-14 19:16:27,055 89143904 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-15 01:22:29,650 111106499 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3h29s19ms162µs100ns).
2020-09-15 08:21:06,292 136223141 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6h58m44s115ms630µs).
2020-09-21 18:14:26,240 4234  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 76716 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-21 18:14:26,252 4246  INFO  - No active profile set, falling back to default profiles: default
2020-09-21 18:14:27,714 5708  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-21 18:14:27,876 5870  INFO  - Finished Spring Data repository scanning in 140ms. Found 1 JPA repository interfaces.
2020-09-21 18:14:30,169 8163  INFO  - HikariPool-1 - Starting...
2020-09-21 18:14:30,177 8171  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-21 18:14:30,876 8870  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-21 18:14:30,884 8878  INFO  - HikariPool-1 - Start completed.
2020-09-21 18:14:31,102 9096  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-21 18:14:31,508 9502  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-21 18:14:31,511 9505  INFO  - HHH000206: hibernate.properties not found
2020-09-21 18:14:32,168 10162 INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-21 18:14:33,698 11692 INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-21 18:14:33,711 11705 WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-21 18:14:35,748 13742 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-21 18:14:36,558 14552 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-21 18:14:37,280 15274 INFO  - Started BooksLibraryApp in 11.93 seconds (JVM running for 15.529)
2020-09-21 18:14:37,283 15277 INFO  - Starting gRPC Server ...
2020-09-21 18:14:37,411 15405 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$62f20e6f' service has been registered.
2020-09-21 18:14:39,296 17290 INFO  - gRPC Server started, listening on port 7070.
2020-09-21 18:15:18,467 56461 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-21 18:15:18,534 56528 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-21 18:15:18,865 56859 INFO  - ==> GRPC service request ended:  >>> 
2020-09-21 18:15:18,866 56860 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-21 18:16:11,213 109207 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 5555
  title: "T1"
  author: "A1"
  publisher: "P1"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-21 18:16:11,505 109499 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 5555
  title: "T1"
  author: "A1"
  publisher: "P1"
}

2020-09-21 18:16:11,505 109499 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 5555
  title: "T1"
  author: "A1"
  publisher: "P1"
}

2020-09-21 18:16:11,616 109610 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-21 18:16:11,648 109642 INFO  - ==> GRPC service request ended:  >>> 
2020-09-21 18:16:11,648 109642 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-21 18:16:27,231 125225 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-21 18:16:27,254 125248 INFO  - ==> GRPC service request ended:  >>> 
2020-09-21 18:16:27,254 125248 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-21 18:17:01,609 159603 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-21 18:17:01,624 159618 INFO  - ==> GRPC service request ended:  >>> 
2020-09-21 18:17:01,624 159618 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-21 18:17:16,394 174388 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-21 18:17:16,403 174397 INFO  - ==> GRPC service request ended:  >>> 
2020-09-21 18:17:16,404 174398 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-21 18:18:10,241 228235 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-21 18:18:10,252 228246 INFO  - ==> GRPC service request ended:  >>> 
2020-09-21 18:18:10,253 228247 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-21 18:18:35,951 253945 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-21 18:18:35,962 253956 INFO  - ==> GRPC service request ended:  >>> 
2020-09-21 18:18:35,962 253956 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-21 18:19:21,070 299064 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.BookRequest >>> bookDetails {
  isbn: 5555
  title: "dd"
  author: "dd"
  publisher: "dd"
}
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.addBook(BookRequest,StreamObserver))
2020-09-21 18:19:21,074 299068 INFO  - ==> GRPC service request ended:  >>> bookDetails {
  isbn: 5555
  title: "dd"
  author: "dd"
  publisher: "dd"
}

2020-09-21 18:19:21,074 299068 INFO  - ==> GRPC service request successfull:  >>> bookDetails {
  isbn: 5555
  title: "dd"
  author: "dd"
  publisher: "dd"
}

2020-09-21 18:19:55,991 333985 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.IsbnRequest >>> isbn: 5555
 >>> Requester: execution(void lib.grpc.services.GrpcBookService.deleteBookByIsbn(IsbnRequest,StreamObserver))
2020-09-21 18:19:56,042 334036 INFO  - ==> GRPC service request ended:  >>> isbn: 5555

2020-09-21 18:19:56,042 334036 INFO  - ==> GRPC service request successfull:  >>> isbn: 5555

2020-09-21 18:19:56,106 334100 INFO  - ==> GRPC service request recieved: lib.grpc.services.auto.EmptyRequest >>>  >>> Requester: execution(void lib.grpc.services.GrpcBookService.getAllBooks(EmptyRequest,StreamObserver))
2020-09-21 18:19:56,117 334111 INFO  - ==> GRPC service request ended:  >>> 
2020-09-21 18:19:56,118 334112 INFO  - ==> GRPC service request successfull:  >>> 
2020-09-22 18:25:24,775 2344  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 198384 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 18:25:24,786 2355  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 18:25:25,612 3181  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 18:25:25,722 3291  INFO  - Finished Spring Data repository scanning in 96ms. Found 1 JPA repository interfaces.
2020-09-22 18:25:29,651 7220  INFO  - HikariPool-1 - Starting...
2020-09-22 18:25:29,659 7228  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 18:25:30,096 7665  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-22 18:25:30,100 7669  INFO  - HikariPool-1 - Start completed.
2020-09-22 18:25:30,202 7771  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 18:25:30,425 7994  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 18:25:30,427 7996  INFO  - HHH000206: hibernate.properties not found
2020-09-22 18:25:30,754 8323  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 18:25:31,576 9145  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 18:25:31,586 9155  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 18:25:33,042 10611 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 18:25:33,557 11126 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookServiceInProd': Unsatisfied dependency expressed through field 'bookServerService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'lib.server.wrapper.BookWrapperService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-09-22 18:25:33,557 11126 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 18:25:33,559 11128 INFO  - HikariPool-1 - Shutdown initiated...
2020-09-22 18:25:33,564 11133 INFO  - HikariPool-1 - Shutdown completed.
2020-09-22 18:25:33,572 11141 INFO  - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-22 18:25:33,828 11397 ERROR - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field bookServerService in lib.service.api.impl.BookServiceImpl required a bean of type 'lib.server.wrapper.BookWrapperService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'lib.server.wrapper.BookWrapperService' in your configuration.

2020-09-22 18:26:13,714 1996  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 198372 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 18:26:13,721 2003  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 18:26:14,565 2847  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 18:26:14,675 2957  INFO  - Finished Spring Data repository scanning in 95ms. Found 1 JPA repository interfaces.
2020-09-22 18:26:20,555 8837  INFO  - HikariPool-1 - Starting...
2020-09-22 18:26:20,563 8845  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 18:26:20,955 9237  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-22 18:26:20,960 9242  INFO  - HikariPool-1 - Start completed.
2020-09-22 18:26:21,073 9355  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 18:26:21,311 9593  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 18:26:21,313 9595  INFO  - HHH000206: hibernate.properties not found
2020-09-22 18:26:21,584 9866  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 18:26:22,397 10679 INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 18:26:22,417 10699 WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 18:26:23,852 12134 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 18:26:24,390 12672 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookServiceInProd': Unsatisfied dependency expressed through field 'bookServerService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'lib.server.wrapper.BookWrapperService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-09-22 18:26:24,391 12673 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 18:26:24,394 12676 INFO  - HikariPool-1 - Shutdown initiated...
2020-09-22 18:26:24,398 12680 INFO  - HikariPool-1 - Shutdown completed.
2020-09-22 18:26:24,407 12689 INFO  - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-22 18:26:24,623 12905 ERROR - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field bookServerService in lib.service.api.impl.BookServiceImpl required a bean of type 'lib.server.wrapper.BookWrapperService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'lib.server.wrapper.BookWrapperService' in your configuration.

2020-09-22 18:29:09,263 1813  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 198464 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 18:29:09,271 1821  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 18:29:10,068 2618  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 18:29:10,160 2710  INFO  - Finished Spring Data repository scanning in 80ms. Found 1 JPA repository interfaces.
2020-09-22 18:29:13,193 5743  INFO  - HikariPool-1 - Starting...
2020-09-22 18:29:13,200 5750  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 18:29:13,598 6148  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-22 18:29:13,603 6153  INFO  - HikariPool-1 - Start completed.
2020-09-22 18:29:13,729 6279  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 18:29:13,972 6522  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 18:29:13,975 6525  INFO  - HHH000206: hibernate.properties not found
2020-09-22 18:29:14,299 6849  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 18:29:15,134 7684  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 18:29:15,145 7695  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 18:29:16,561 9111  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 18:29:17,136 9686  WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'bookServiceInProd': Unsatisfied dependency expressed through field 'bookServerService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'lib.server.wrapper.BookWrapperService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-09-22 18:29:17,145 9695  INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 18:29:17,148 9698  INFO  - HikariPool-1 - Shutdown initiated...
2020-09-22 18:29:17,152 9702  INFO  - HikariPool-1 - Shutdown completed.
2020-09-22 18:29:17,163 9713  INFO  - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-22 18:29:17,386 9936  ERROR - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field bookServerService in lib.service.api.impl.BookServiceImpl required a bean of type 'lib.server.wrapper.BookWrapperService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'lib.server.wrapper.BookWrapperService' in your configuration.

2020-09-22 18:32:02,902 2038  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 197344 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 18:32:02,909 2045  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 18:32:03,779 2915  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 18:32:03,873 3009  INFO  - Finished Spring Data repository scanning in 79ms. Found 1 JPA repository interfaces.
2020-09-22 18:32:06,835 5971  INFO  - HikariPool-1 - Starting...
2020-09-22 18:32:06,840 5976  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 18:32:07,229 6365  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-22 18:32:07,234 6370  INFO  - HikariPool-1 - Start completed.
2020-09-22 18:32:07,364 6500  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 18:32:07,579 6715  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 18:32:07,581 6717  INFO  - HHH000206: hibernate.properties not found
2020-09-22 18:32:07,871 7007  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 18:32:08,713 7849  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 18:32:08,722 7858  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 18:32:10,012 9148  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 18:32:10,930 10066 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-22 18:32:11,575 10711 INFO  - Started BooksLibraryApp in 9.212 seconds (JVM running for 10.776)
2020-09-22 18:32:11,577 10713 INFO  - Starting gRPC Server ...
2020-09-22 18:32:11,646 10782 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$527dc25d' service has been registered.
2020-09-22 18:32:12,871 12007 INFO  - gRPC Server started, listening on port 7070.
2020-09-22 18:32:45,159 44295 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-22 18:45:05,710 2157  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 202828 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 18:45:05,717 2164  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 18:45:06,705 3152  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 18:45:06,812 3259  INFO  - Finished Spring Data repository scanning in 90ms. Found 1 JPA repository interfaces.
2020-09-22 18:45:10,680 7127  INFO  - HikariPool-1 - Starting...
2020-09-22 18:45:10,688 7135  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 18:45:11,075 7522  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-22 18:45:11,080 7527  INFO  - HikariPool-1 - Start completed.
2020-09-22 18:45:11,171 7618  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 18:45:11,483 7930  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 18:45:11,486 7933  INFO  - HHH000206: hibernate.properties not found
2020-09-22 18:45:11,819 8266  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 18:45:12,651 9098  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 18:45:12,660 9107  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 18:45:13,909 10356 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 18:45:14,664 11111 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-22 18:45:15,299 11746 INFO  - Started BooksLibraryApp in 10.12 seconds (JVM running for 11.806)
2020-09-22 18:45:15,301 11748 INFO  - Starting gRPC Server ...
2020-09-22 18:45:15,366 11813 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$2b206de3' service has been registered.
2020-09-22 18:45:16,523 12970 INFO  - gRPC Server started, listening on port 7070.
2020-09-22 18:45:23,287 19734 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-22 18:49:06,561 1914  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 171764 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 18:49:06,567 1920  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 18:49:07,360 2713  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 18:49:07,461 2814  INFO  - Finished Spring Data repository scanning in 86ms. Found 1 JPA repository interfaces.
2020-09-22 18:49:08,798 4151  INFO  - HikariPool-1 - Starting...
2020-09-22 18:49:08,805 4158  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 18:49:09,275 4628  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-22 18:49:09,280 4633  INFO  - HikariPool-1 - Start completed.
2020-09-22 18:49:09,397 4750  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 18:49:09,685 5038  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 18:49:09,687 5040  INFO  - HHH000206: hibernate.properties not found
2020-09-22 18:49:10,031 5384  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 18:49:10,953 6306  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 18:49:10,966 6319  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 18:49:12,287 7640  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 18:49:13,063 8416  INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-22 18:49:13,698 9051  INFO  - Started BooksLibraryApp in 7.59 seconds (JVM running for 9.103)
2020-09-22 18:49:13,700 9053  INFO  - Starting gRPC Server ...
2020-09-22 18:49:13,783 9136  INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$14f1890a' service has been registered.
2020-09-22 18:49:15,059 10412 INFO  - gRPC Server started, listening on port 7070.
2020-09-22 18:49:21,937 17290 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-22 21:45:22,407 1096  INFO  - Neither @ContextConfiguration nor @ContextHierarchy found for test class [lib.application.test.BookGrpcServicesTest], using SpringBootContextLoader
2020-09-22 21:45:22,413 1102  INFO  - Could not detect default resource locations for test class [lib.application.test.BookGrpcServicesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-09-22 21:45:22,414 1103  INFO  - Could not detect default configuration classes for test class [lib.application.test.BookGrpcServicesTest]: BookGrpcServicesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-09-22 21:45:22,541 1230  INFO  - Found @SpringBootConfiguration lib.application.BooksLibraryApp for test class lib.application.test.BookGrpcServicesTest
2020-09-22 21:45:22,543 1232  INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-09-22 21:45:22,564 1253  INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@710c2b53, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5386659f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@14028087, org.springframework.test.context.support.DirtiesContextTestExecutionListener@cecf639, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1caa0244, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7ce026d3, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7ce69770, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1750fbeb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5b247367, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@268f106e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6e9a5ed8]
2020-09-22 21:45:22,913 1602  INFO  - Starting BookGrpcServicesTest on INCNI6P031 with PID 235660 (started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 21:45:22,916 1605  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 21:45:23,320 2009  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 21:45:23,394 2083  INFO  - Finished Spring Data repository scanning in 63ms. Found 2 JPA repository interfaces.
2020-09-22 21:45:23,486 2175  INFO  - Replacing 'dataSource' DataSource bean with embedded version
2020-09-22 21:45:24,270 2959  INFO  - Starting embedded database: url='jdbc:derby:memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c;create=true', username='sa'
2020-09-22 21:45:25,003 3692  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 21:45:25,086 3775  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 21:45:25,089 3778  INFO  - HHH000206: hibernate.properties not found
2020-09-22 21:45:25,362 4051  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 21:45:25,558 4247  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 21:45:25,566 4255  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 21:45:26,744 5433  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 21:45:27,493 6182  INFO  - Started BookGrpcServicesTest in 4.791 seconds (JVM running for 6.237)
2020-09-22 21:45:27,522 6211  INFO  - Began transaction (1) for test context [DefaultTestContext@ff21443 testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@61e14b53, testMethod = shouldRetrieveAllBookCountsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@31b6b0c7 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6253e59a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:27,723 6412  INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-22 21:45:28,021 6710  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,021 6710  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,021 6710  INFO  - Rolled back transaction for test: [DefaultTestContext@ff21443 testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@61e14b53, testMethod = shouldRetrieveAllBookCountsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@31b6b0c7 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6253e59a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,027 6716  INFO  - Began transaction (1) for test context [DefaultTestContext@ff21443 testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@4882b9a, testMethod = shouldRetrieveBookByTitleSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@31b6b0c7 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6253e59a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,051 6740  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,051 6740  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,052 6741  INFO  - Rolled back transaction for test: [DefaultTestContext@ff21443 testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@4882b9a, testMethod = shouldRetrieveBookByTitleSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@31b6b0c7 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6253e59a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,059 6748  INFO  - Began transaction (1) for test context [DefaultTestContext@ff21443 testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@7a3a49e5, testMethod = shouldRetrieveAllBooksByAuthorsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@31b6b0c7 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6253e59a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,082 6771  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,082 6771  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,083 6772  INFO  - Rolled back transaction for test: [DefaultTestContext@ff21443 testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@7a3a49e5, testMethod = shouldRetrieveAllBooksByAuthorsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@31b6b0c7 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6253e59a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,087 6776  INFO  - Began transaction (1) for test context [DefaultTestContext@ff21443 testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@6d4502ca, testMethod = shouldAddFirstBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@31b6b0c7 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6253e59a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,093 6782  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,093 6782  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,094 6783  INFO  - Rolled back transaction for test: [DefaultTestContext@ff21443 testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@6d4502ca, testMethod = shouldAddFirstBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@31b6b0c7 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6253e59a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,098 6787  INFO  - Began transaction (1) for test context [DefaultTestContext@ff21443 testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@3d718248, testMethod = shouldRetrieveAllBooksSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@31b6b0c7 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6253e59a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,115 6804  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,116 6805  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,116 6805  INFO  - Rolled back transaction for test: [DefaultTestContext@ff21443 testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@3d718248, testMethod = shouldRetrieveAllBooksSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@31b6b0c7 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6253e59a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,119 6808  INFO  - Began transaction (1) for test context [DefaultTestContext@ff21443 testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@2591d23a, testMethod = shouldDeleteBookByIsbnSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@31b6b0c7 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6253e59a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,154 6843  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,154 6843  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,155 6844  INFO  - Rolled back transaction for test: [DefaultTestContext@ff21443 testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@2591d23a, testMethod = shouldDeleteBookByIsbnSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@31b6b0c7 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6253e59a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,158 6847  INFO  - Began transaction (1) for test context [DefaultTestContext@ff21443 testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@5c60c08, testMethod = shouldAddSecondBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@31b6b0c7 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6253e59a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,165 6854  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,165 6854  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,165 6854  INFO  - Rolled back transaction for test: [DefaultTestContext@ff21443 testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@5c60c08, testMethod = shouldAddSecondBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@31b6b0c7 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6253e59a key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,168 6857  INFO  - Neither @ContextConfiguration nor @ContextHierarchy found for test class [lib.application.test.BookServicesTest], using SpringBootContextLoader
2020-09-22 21:45:28,168 6857  INFO  - Could not detect default resource locations for test class [lib.application.test.BookServicesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-09-22 21:45:28,169 6858  INFO  - Could not detect default configuration classes for test class [lib.application.test.BookServicesTest]: BookServicesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-09-22 21:45:28,174 6863  INFO  - Found @SpringBootConfiguration lib.application.BooksLibraryApp for test class lib.application.test.BookServicesTest
2020-09-22 21:45:28,175 6864  INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-09-22 21:45:28,176 6865  INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@9d3a7a1, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1c411474, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5e681097, org.springframework.test.context.support.DirtiesContextTestExecutionListener@152891f8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1d2c253, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@15a484a9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@b56c222, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5a2035e1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4df7b4ac, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7c47e077, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@41bd6a0f]
2020-09-22 21:45:28,181 6870  INFO  - Began transaction (1) for test context [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@67e4928c, testMethod = shouldRetrieveAllBookCountsSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,192 6881  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,193 6882  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,193 6882  INFO  - Rolled back transaction for test: [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@67e4928c, testMethod = shouldRetrieveAllBookCountsSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,196 6885  INFO  - Began transaction (1) for test context [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@9cc0505, testMethod = shouldRetrieveBookByIsbnSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,205 6894  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,205 6894  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,206 6895  INFO  - Rolled back transaction for test: [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@9cc0505, testMethod = shouldRetrieveBookByIsbnSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,209 6898  INFO  - Began transaction (1) for test context [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@42cfd794, testMethod = shouldRetrieveBookByTitleSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,219 6908  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,219 6908  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,220 6909  INFO  - Rolled back transaction for test: [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@42cfd794, testMethod = shouldRetrieveBookByTitleSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,223 6912  INFO  - Began transaction (1) for test context [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@7598d675, testMethod = shouldRetrieveBookByPublisherSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,241 6930  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,242 6931  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,242 6931  INFO  - Rolled back transaction for test: [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@7598d675, testMethod = shouldRetrieveBookByPublisherSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,248 6937  INFO  - Began transaction (1) for test context [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@46de118b, testMethod = shouldDeleteBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,272 6961  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,272 6961  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,273 6962  INFO  - Rolled back transaction for test: [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@46de118b, testMethod = shouldDeleteBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,278 6967  INFO  - Began transaction (1) for test context [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@7f77e065, testMethod = shouldAddFirstBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,283 6972  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,283 6972  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,284 6973  INFO  - Rolled back transaction for test: [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@7f77e065, testMethod = shouldAddFirstBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,288 6977  INFO  - Began transaction (1) for test context [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@68c4a860, testMethod = shouldRetrieveAllBooksSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,298 6987  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,298 6987  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,299 6988  INFO  - Rolled back transaction for test: [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@68c4a860, testMethod = shouldRetrieveAllBooksSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,304 6993  INFO  - Began transaction (1) for test context [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@573870cb, testMethod = shouldRetrieveBookByAuthorSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,311 7000  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,311 7000  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,312 7001  INFO  - Rolled back transaction for test: [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@573870cb, testMethod = shouldRetrieveBookByAuthorSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:45:28,316 7005  INFO  - Began transaction (1) for test context [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@377e90b0, testMethod = shouldAddSecondBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@14292d71]; rollback [true]
2020-09-22 21:45:28,324 7013  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:45:28,324 7013  WARN  - Database 'memory:0513615d-2ad9-4ed7-a9c5-f7c80904304c' not created, connection made to existing database instead.
2020-09-22 21:45:28,324 7013  INFO  - Rolled back transaction for test: [DefaultTestContext@57b130f6 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@377e90b0, testMethod = shouldAddSecondBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2cc61b3b testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@72e75786 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:47:49,381 1866  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 235400 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 21:47:49,386 1871  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 21:47:50,099 2584  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 21:47:50,203 2688  INFO  - Finished Spring Data repository scanning in 91ms. Found 2 JPA repository interfaces.
2020-09-22 21:47:51,608 4093  INFO  - HikariPool-1 - Starting...
2020-09-22 21:47:51,616 4101  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 21:47:52,088 4573  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-22 21:47:52,095 4580  INFO  - HikariPool-1 - Start completed.
2020-09-22 21:47:52,219 4704  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 21:47:52,510 4995  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 21:47:52,513 4998  INFO  - HHH000206: hibernate.properties not found
2020-09-22 21:47:52,812 5297  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 21:47:53,602 6087  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 21:47:53,610 6095  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 21:47:55,088 7573  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 21:47:55,951 8436  INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-22 21:47:56,614 9099  INFO  - Started BooksLibraryApp in 7.7 seconds (JVM running for 9.162)
2020-09-22 21:47:56,615 9100  INFO  - Starting gRPC Server ...
2020-09-22 21:47:56,698 9183  INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$401d145f' service has been registered.
2020-09-22 21:47:57,885 10370 INFO  - gRPC Server started, listening on port 7070.
2020-09-22 21:48:22,679 35164 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-22 21:56:59,466 1073  INFO  - Neither @ContextConfiguration nor @ContextHierarchy found for test class [lib.application.test.BookGrpcServicesTest], using SpringBootContextLoader
2020-09-22 21:56:59,472 1079  INFO  - Could not detect default resource locations for test class [lib.application.test.BookGrpcServicesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-09-22 21:56:59,474 1081  INFO  - Could not detect default configuration classes for test class [lib.application.test.BookGrpcServicesTest]: BookGrpcServicesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-09-22 21:56:59,611 1218  INFO  - Found @SpringBootConfiguration lib.application.BooksLibraryApp for test class lib.application.test.BookGrpcServicesTest
2020-09-22 21:56:59,615 1222  INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-09-22 21:56:59,633 1240  INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@710c2b53, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5386659f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@14028087, org.springframework.test.context.support.DirtiesContextTestExecutionListener@cecf639, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1caa0244, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7ce026d3, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7ce69770, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1750fbeb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5b247367, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@268f106e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6e9a5ed8]
2020-09-22 21:56:59,986 1593  INFO  - Starting BookGrpcServicesTest on INCNI6P031 with PID 234764 (started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 21:56:59,990 1597  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 21:57:00,481 2088  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 21:57:00,557 2164  INFO  - Finished Spring Data repository scanning in 65ms. Found 2 JPA repository interfaces.
2020-09-22 21:57:00,653 2260  INFO  - Replacing 'dataSource' DataSource bean with embedded version
2020-09-22 21:57:01,452 3059  INFO  - Starting embedded database: url='jdbc:derby:memory:2497eced-1e29-4273-8e7f-29c1da2e39e9;create=true', username='sa'
2020-09-22 21:57:02,075 3682  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 21:57:02,222 3829  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 21:57:02,226 3833  INFO  - HHH000206: hibernate.properties not found
2020-09-22 21:57:02,526 4133  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 21:57:02,708 4315  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 21:57:02,714 4321  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 21:57:03,743 5350  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 21:57:04,630 6237  INFO  - Started BookGrpcServicesTest in 4.867 seconds (JVM running for 6.284)
2020-09-22 21:57:04,662 6269  INFO  - Began transaction (1) for test context [DefaultTestContext@2673487b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@2d07aacc, testMethod = shouldRetrieveAllBookCountsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ff5d4f1 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@194224ca key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:04,910 6517  INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-22 21:57:05,268 6875  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,269 6876  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,269 6876  INFO  - Rolled back transaction for test: [DefaultTestContext@2673487b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@2d07aacc, testMethod = shouldRetrieveAllBookCountsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ff5d4f1 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@194224ca key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,276 6883  INFO  - Began transaction (1) for test context [DefaultTestContext@2673487b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@1c792107, testMethod = shouldRetrieveBookByTitleSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ff5d4f1 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@194224ca key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,297 6904  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,297 6904  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,297 6904  INFO  - Rolled back transaction for test: [DefaultTestContext@2673487b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@1c792107, testMethod = shouldRetrieveBookByTitleSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ff5d4f1 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@194224ca key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,302 6909  INFO  - Began transaction (1) for test context [DefaultTestContext@2673487b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@35af52dc, testMethod = shouldRetrieveAllBooksByAuthorsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ff5d4f1 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@194224ca key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,330 6937  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,330 6937  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,330 6937  INFO  - Rolled back transaction for test: [DefaultTestContext@2673487b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@35af52dc, testMethod = shouldRetrieveAllBooksByAuthorsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ff5d4f1 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@194224ca key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,335 6942  INFO  - Began transaction (1) for test context [DefaultTestContext@2673487b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@1b98355f, testMethod = shouldAddFirstBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ff5d4f1 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@194224ca key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,341 6948  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,341 6948  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,342 6949  INFO  - Rolled back transaction for test: [DefaultTestContext@2673487b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@1b98355f, testMethod = shouldAddFirstBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ff5d4f1 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@194224ca key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,346 6953  INFO  - Began transaction (1) for test context [DefaultTestContext@2673487b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@30bd39d5, testMethod = shouldRetrieveAllBooksSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ff5d4f1 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@194224ca key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,367 6974  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,367 6974  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,367 6974  INFO  - Rolled back transaction for test: [DefaultTestContext@2673487b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@30bd39d5, testMethod = shouldRetrieveAllBooksSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ff5d4f1 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@194224ca key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,372 6979  INFO  - Began transaction (1) for test context [DefaultTestContext@2673487b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@18463720, testMethod = shouldDeleteBookByIsbnSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ff5d4f1 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@194224ca key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,415 7022  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,415 7022  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,415 7022  INFO  - Rolled back transaction for test: [DefaultTestContext@2673487b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@18463720, testMethod = shouldDeleteBookByIsbnSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ff5d4f1 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@194224ca key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,423 7030  INFO  - Began transaction (1) for test context [DefaultTestContext@2673487b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@b56c222, testMethod = shouldAddSecondBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ff5d4f1 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@194224ca key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,432 7039  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,432 7039  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,432 7039  INFO  - Rolled back transaction for test: [DefaultTestContext@2673487b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@b56c222, testMethod = shouldAddSecondBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ff5d4f1 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@194224ca key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,435 7042  INFO  - Neither @ContextConfiguration nor @ContextHierarchy found for test class [lib.application.test.BookServicesTest], using SpringBootContextLoader
2020-09-22 21:57:05,436 7043  INFO  - Could not detect default resource locations for test class [lib.application.test.BookServicesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-09-22 21:57:05,436 7043  INFO  - Could not detect default configuration classes for test class [lib.application.test.BookServicesTest]: BookServicesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-09-22 21:57:05,441 7048  INFO  - Found @SpringBootConfiguration lib.application.BooksLibraryApp for test class lib.application.test.BookServicesTest
2020-09-22 21:57:05,442 7049  INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-09-22 21:57:05,443 7050  INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@647ff23e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6a04d2a4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@35a9e665, org.springframework.test.context.support.DirtiesContextTestExecutionListener@362be0cd, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2dde0a34, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@61836cd9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1b632442, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7227926b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2f75a9b1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@556aed22, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57a982f9]
2020-09-22 21:57:05,451 7058  INFO  - Began transaction (1) for test context [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@50f05307, testMethod = shouldRetrieveAllBookCountsSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,467 7074  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,467 7074  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,467 7074  INFO  - Rolled back transaction for test: [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@50f05307, testMethod = shouldRetrieveAllBookCountsSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,471 7078  INFO  - Began transaction (1) for test context [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@144440f5, testMethod = shouldRetrieveBookByIsbnSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,480 7087  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,480 7087  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,480 7087  INFO  - Rolled back transaction for test: [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@144440f5, testMethod = shouldRetrieveBookByIsbnSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,484 7091  INFO  - Began transaction (1) for test context [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@340fc1aa, testMethod = shouldRetrieveBookByTitleSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,495 7102  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,496 7103  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,496 7103  INFO  - Rolled back transaction for test: [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@340fc1aa, testMethod = shouldRetrieveBookByTitleSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,500 7107  INFO  - Began transaction (1) for test context [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@4182a651, testMethod = shouldRetrieveBookByPublisherSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,518 7125  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,518 7125  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,518 7125  INFO  - Rolled back transaction for test: [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@4182a651, testMethod = shouldRetrieveBookByPublisherSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,522 7129  INFO  - Began transaction (1) for test context [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@141dfcf9, testMethod = shouldDeleteBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,542 7149  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,542 7149  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,542 7149  INFO  - Rolled back transaction for test: [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@141dfcf9, testMethod = shouldDeleteBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,546 7153  INFO  - Began transaction (1) for test context [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@fceab5d, testMethod = shouldAddFirstBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,550 7157  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,551 7158  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,551 7158  INFO  - Rolled back transaction for test: [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@fceab5d, testMethod = shouldAddFirstBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,555 7162  INFO  - Began transaction (1) for test context [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@41e7a544, testMethod = shouldRetrieveAllBooksSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,571 7178  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,571 7178  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,572 7179  INFO  - Rolled back transaction for test: [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@41e7a544, testMethod = shouldRetrieveAllBooksSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,576 7183  INFO  - Began transaction (1) for test context [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@33eab2e8, testMethod = shouldRetrieveBookByAuthorSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,584 7191  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,584 7191  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,585 7192  INFO  - Rolled back transaction for test: [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@33eab2e8, testMethod = shouldRetrieveBookByAuthorSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:05,590 7197  INFO  - Began transaction (1) for test context [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@3355b8ff, testMethod = shouldAddSecondBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@48b2dbc4]; rollback [true]
2020-09-22 21:57:05,598 7205  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-22 21:57:05,598 7205  WARN  - Database 'memory:2497eced-1e29-4273-8e7f-29c1da2e39e9' not created, connection made to existing database instead.
2020-09-22 21:57:05,598 7205  INFO  - Rolled back transaction for test: [DefaultTestContext@42d0e41 testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@3355b8ff, testMethod = shouldAddSecondBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9cc0505 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@645d4639 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2bfc268b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@41e1e210, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1b6e1eff, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@816fad82, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6babf3bf], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-22 21:57:51,685 1824  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 236960 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 21:57:51,692 1831  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 21:57:52,489 2628  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 21:57:52,589 2728  INFO  - Finished Spring Data repository scanning in 89ms. Found 2 JPA repository interfaces.
2020-09-22 21:57:53,941 4080  INFO  - HikariPool-1 - Starting...
2020-09-22 21:57:53,949 4088  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 21:57:54,524 4663  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-22 21:57:54,530 4669  INFO  - HikariPool-1 - Start completed.
2020-09-22 21:57:54,642 4781  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 21:57:54,880 5019  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 21:57:54,883 5022  INFO  - HHH000206: hibernate.properties not found
2020-09-22 21:57:55,171 5310  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 21:57:55,995 6134  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 21:57:56,007 6146  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 21:57:57,519 7658  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 21:57:58,311 8450  INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-22 21:57:59,218 9357  INFO  - Started BooksLibraryApp in 7.991 seconds (JVM running for 9.46)
2020-09-22 21:57:59,220 9359  INFO  - Starting gRPC Server ...
2020-09-22 21:57:59,343 9482  INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$8931cb26' service has been registered.
2020-09-22 21:58:00,746 10885 INFO  - gRPC Server started, listening on port 7070.
2020-09-22 21:58:32,550 42689 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-22 22:27:12,393 1989  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 223716 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 22:27:12,400 1996  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 22:27:13,198 2794  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 22:27:13,306 2902  INFO  - Finished Spring Data repository scanning in 93ms. Found 2 JPA repository interfaces.
2020-09-22 22:27:14,620 4216  INFO  - HikariPool-1 - Starting...
2020-09-22 22:27:14,628 4224  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 22:27:15,727 5323  ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-22 22:27:15,744 5340  WARN  - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:329) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:357) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$f402bae5.CGLIB$jpaVendorAdapter$3(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$f402bae5$$FastClassBySpringCGLIB$$f5b239ae.invoke(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$f402bae5.jpaVendorAdapter(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_252]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_252]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_252]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_252]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1271) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1191) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1271) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1191) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:320) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 61 more
Caused by: java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
2020-09-22 22:27:15,874 5470  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 22:27:16,054 5650  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 22:27:16,057 5653  INFO  - HHH000206: hibernate.properties not found
2020-09-22 22:27:16,547 6143  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 22:27:17,403 6999  INFO  - HikariPool-1 - Starting...
2020-09-22 22:27:17,404 7000  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 22:27:18,422 8018  ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-22 22:27:18,423 8019  WARN  - HHH000342: Could not obtain connection to query metadata : Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
2020-09-22 22:27:18,452 8048  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 22:27:18,461 8057  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 22:27:18,491 8087  INFO  - HHH000422: Disabling contextual LOB creation as connection was null
2020-09-22 22:27:19,447 9043  INFO  - HikariPool-1 - Starting...
2020-09-22 22:27:19,447 9043  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 22:27:20,468 10064 ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-22 22:27:20,471 10067 WARN  - SQL Error: 40000, SQLState: XJ040
2020-09-22 22:27:20,472 10068 ERROR - Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
2020-09-22 22:27:20,472 10068 WARN  - SQL Error: 45000, SQLState: XSDB6
2020-09-22 22:27:20,472 10068 ERROR - Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
2020-09-22 22:27:20,484 10080 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
2020-09-22 22:27:20,494 10090 INFO  - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-22 22:27:20,499 10095 ERROR - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:403) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 15 more
Caused by: org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:47) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:132) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:96) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1250) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 15 more
Caused by: java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
2020-09-22 22:27:41,783 2244  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 244176 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 22:27:41,789 2250  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 22:27:42,819 3280  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 22:27:42,942 3403  INFO  - Finished Spring Data repository scanning in 106ms. Found 2 JPA repository interfaces.
2020-09-22 22:27:44,322 4783  INFO  - HikariPool-1 - Starting...
2020-09-22 22:27:44,328 4789  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 22:27:44,684 5145  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-22 22:27:44,688 5149  INFO  - HikariPool-1 - Start completed.
2020-09-22 22:27:44,778 5239  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 22:27:44,993 5454  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 22:27:44,996 5457  INFO  - HHH000206: hibernate.properties not found
2020-09-22 22:27:45,309 5770  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 22:27:46,092 6553  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 22:27:46,101 6562  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 22:27:47,518 7979  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 22:27:48,387 8848  INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-22 22:27:49,174 9635  INFO  - Started BooksLibraryApp in 7.915 seconds (JVM running for 9.731)
2020-09-22 22:27:49,176 9637  INFO  - Starting gRPC Server ...
2020-09-22 22:27:49,258 9719  INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$549e95d6' service has been registered.
2020-09-22 22:27:50,596 11057 INFO  - gRPC Server started, listening on port 7070.
2020-09-22 22:28:02,174 22635 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-22 23:36:43,940 2085  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 247000 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 23:36:43,947 2092  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 23:36:44,835 2980  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 23:36:44,945 3090  INFO  - Finished Spring Data repository scanning in 97ms. Found 2 JPA repository interfaces.
2020-09-22 23:36:46,643 4788  INFO  - HikariPool-1 - Starting...
2020-09-22 23:36:46,652 4797  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 23:36:47,050 5195  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-22 23:36:47,055 5200  INFO  - HikariPool-1 - Start completed.
2020-09-22 23:36:47,151 5296  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 23:36:47,370 5515  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 23:36:47,373 5518  INFO  - HHH000206: hibernate.properties not found
2020-09-22 23:36:47,718 5863  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 23:36:48,737 6882  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 23:36:48,748 6893  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 23:36:50,430 8575  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 23:36:51,322 9467  INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-22 23:36:52,038 10183 INFO  - Started BooksLibraryApp in 8.644 seconds (JVM running for 10.323)
2020-09-22 23:36:52,040 10185 INFO  - Starting gRPC Server ...
2020-09-22 23:36:52,121 10266 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$3372ee70' service has been registered.
2020-09-22 23:36:53,337 11482 INFO  - gRPC Server started, listening on port 7070.
2020-09-22 23:36:58,165 16310 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-22 23:45:50,256 2444  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 253552 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 23:45:50,263 2451  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 23:45:51,166 3354  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 23:45:51,286 3474  INFO  - Finished Spring Data repository scanning in 101ms. Found 2 JPA repository interfaces.
2020-09-22 23:45:52,884 5072  INFO  - HikariPool-1 - Starting...
2020-09-22 23:45:52,892 5080  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 23:45:53,617 5805  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-22 23:45:53,623 5811  INFO  - HikariPool-1 - Start completed.
2020-09-22 23:45:53,875 6063  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 23:45:54,100 6288  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 23:45:54,104 6292  INFO  - HHH000206: hibernate.properties not found
2020-09-22 23:45:54,560 6748  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 23:45:55,529 7717  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 23:45:55,540 7728  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 23:45:57,654 9842  WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table book_server_info add column fk_book_id integer not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table book_server_info add column fk_book_id integer not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:580) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:297) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:75) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1250) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: In an ALTER TABLE statement, the column 'FK_BOOK_ID' has been specified as NOT NULL and either the DEFAULT clause was not specified or was specified as DEFAULT NULL.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 33 more
Caused by: org.apache.derby.iapi.error.StandardException: In an ALTER TABLE statement, the column 'FK_BOOK_ID' has been specified as NOT NULL and either the DEFAULT clause was not specified or was specified as DEFAULT NULL.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.ColumnDefinitionNode.bindAndValidateDefault(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.TableElementList.validate(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.AlterTableNode.bindStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 33 more
2020-09-22 23:45:57,739 9927  WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table book_server_info add constraint FKoge2dhjp9k23nw7h8w3rfiiy3 foreign key (fk_book_id) references book" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table book_server_info add constraint FKoge2dhjp9k23nw7h8w3rfiiy3 foreign key (fk_book_id) references book" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:504) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:433) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:249) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1250) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: 'FK_BOOK_ID' is not a column in table or VTI 'BOOK_SERVER_INFO'.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 32 more
Caused by: org.apache.derby.iapi.error.StandardException: 'FK_BOOK_ID' is not a column in table or VTI 'BOOK_SERVER_INFO'.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.CreateConstraintConstantAction.executeConstantAction(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantActionBody(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantAction(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 32 more
2020-09-22 23:45:57,747 9935  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 23:45:58,899 11087 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-22 23:45:59,463 11651 INFO  - Started BooksLibraryApp in 9.836 seconds (JVM running for 11.714)
2020-09-22 23:45:59,465 11653 INFO  - Starting gRPC Server ...
2020-09-22 23:45:59,567 11755 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$7e7fd6c1' service has been registered.
2020-09-22 23:46:01,031 13219 INFO  - gRPC Server started, listening on port 7070.
2020-09-22 23:47:36,003 2308  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 252140 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-22 23:47:36,013 2318  INFO  - No active profile set, falling back to default profiles: default
2020-09-22 23:47:36,959 3264  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-22 23:47:37,079 3384  INFO  - Finished Spring Data repository scanning in 102ms. Found 2 JPA repository interfaces.
2020-09-22 23:47:38,389 4694  INFO  - HikariPool-1 - Starting...
2020-09-22 23:47:38,398 4703  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-22 23:47:38,806 5111  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-22 23:47:38,811 5116  INFO  - HikariPool-1 - Start completed.
2020-09-22 23:47:38,908 5213  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-22 23:47:39,162 5467  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-22 23:47:39,165 5470  INFO  - HHH000206: hibernate.properties not found
2020-09-22 23:47:39,470 5775  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-22 23:47:40,301 6606  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-22 23:47:40,310 6615  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-22 23:47:41,710 8015  WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table book_server_info add column id integer not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table book_server_info add column id integer not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:580) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:297) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:75) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1250) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: In an ALTER TABLE statement, the column 'ID' has been specified as NOT NULL and either the DEFAULT clause was not specified or was specified as DEFAULT NULL.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 33 more
Caused by: org.apache.derby.iapi.error.StandardException: In an ALTER TABLE statement, the column 'ID' has been specified as NOT NULL and either the DEFAULT clause was not specified or was specified as DEFAULT NULL.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.ColumnDefinitionNode.bindAndValidateDefault(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.TableElementList.validate(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.AlterTableNode.bindStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 33 more
2020-09-22 23:47:41,787 8092  WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table book_server_info add constraint FK4anji8mueuq7nbydbykcoom1d foreign key (id) references book" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table book_server_info add constraint FK4anji8mueuq7nbydbykcoom1d foreign key (id) references book" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:504) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:433) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:249) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1250) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: 'ID' is not a column in table or VTI 'BOOK_SERVER_INFO'.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 32 more
Caused by: org.apache.derby.iapi.error.StandardException: 'ID' is not a column in table or VTI 'BOOK_SERVER_INFO'.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.CreateConstraintConstantAction.executeConstantAction(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantActionBody(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantAction(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 32 more
2020-09-22 23:47:41,792 8097  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-22 23:47:42,605 8910  INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-22 23:47:43,203 9508  INFO  - Started BooksLibraryApp in 7.691 seconds (JVM running for 9.573)
2020-09-22 23:47:43,204 9509  INFO  - Starting gRPC Server ...
2020-09-22 23:47:43,287 9592  INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$2f0219f2' service has been registered.
2020-09-22 23:47:44,540 10845 INFO  - gRPC Server started, listening on port 7070.
2020-09-22 23:48:14,689 40994 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 11:21:43,899 2918  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 253732 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 11:21:43,915 2934  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 11:21:45,090 4109  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 11:21:45,236 4255  INFO  - Finished Spring Data repository scanning in 125ms. Found 2 JPA repository interfaces.
2020-09-23 11:21:47,017 6036  INFO  - HikariPool-1 - Starting...
2020-09-23 11:21:47,025 6044  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 11:21:47,545 6564  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 11:21:47,552 6571  INFO  - HikariPool-1 - Start completed.
2020-09-23 11:21:47,698 6717  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 11:21:47,996 7015  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 11:21:47,999 7018  INFO  - HHH000206: hibernate.properties not found
2020-09-23 11:21:48,419 7438  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 11:21:49,531 8550  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 11:21:49,544 8563  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 11:21:51,462 10481 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 11:21:52,571 11590 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 11:21:53,465 12484 INFO  - Started BooksLibraryApp in 10.258 seconds (JVM running for 12.541)
2020-09-23 11:21:53,467 12486 INFO  - Starting gRPC Server ...
2020-09-23 11:21:53,573 12592 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$785f64ae' service has been registered.
2020-09-23 11:21:55,050 14069 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 11:21:59,437 18456 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 11:51:54,125 1813144 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=25m3s637ms251µs800ns).
2020-09-23 12:00:53,258 2352277 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m29s135ms367µs700ns).
2020-09-23 12:51:52,749 2905  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 256588 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 12:51:52,758 2914  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 12:51:53,918 4074  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 12:51:54,048 4204  INFO  - Finished Spring Data repository scanning in 114ms. Found 2 JPA repository interfaces.
2020-09-23 12:51:55,829 5985  INFO  - HikariPool-1 - Starting...
2020-09-23 12:51:55,838 5994  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 12:51:56,973 7129  ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-23 12:51:56,993 7149  WARN  - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:329) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:357) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$3b34fc26.CGLIB$jpaVendorAdapter$9(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$3b34fc26$$FastClassBySpringCGLIB$$ca717aa0.invoke(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$3b34fc26.jpaVendorAdapter(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_252]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_252]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_252]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_252]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1271) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1191) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1271) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1191) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:320) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 61 more
Caused by: java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
2020-09-23 12:51:57,083 7239  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 12:51:57,326 7482  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 12:51:57,331 7487  INFO  - HHH000206: hibernate.properties not found
2020-09-23 12:51:58,094 8250  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 12:51:59,223 9379  INFO  - HikariPool-1 - Starting...
2020-09-23 12:51:59,224 9380  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 12:52:00,250 10406 ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-23 12:52:00,252 10408 WARN  - HHH000342: Could not obtain connection to query metadata : Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
2020-09-23 12:52:00,280 10436 INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 12:52:00,293 10449 WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 12:52:00,330 10486 INFO  - HHH000422: Disabling contextual LOB creation as connection was null
2020-09-23 12:52:01,652 11808 INFO  - HikariPool-1 - Starting...
2020-09-23 12:52:01,652 11808 WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 12:52:02,674 12830 ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-23 12:52:02,677 12833 WARN  - SQL Error: 40000, SQLState: XJ040
2020-09-23 12:52:02,677 12833 ERROR - Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
2020-09-23 12:52:02,677 12833 WARN  - SQL Error: 45000, SQLState: XSDB6
2020-09-23 12:52:02,678 12834 ERROR - Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
2020-09-23 12:52:02,690 12846 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
2020-09-23 12:52:02,704 12860 INFO  - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-23 12:52:02,714 12870 ERROR - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:403) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 15 more
Caused by: org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:47) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:132) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:96) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1250) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 15 more
Caused by: java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
2020-09-23 12:52:28,939 2737  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 245340 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 12:52:28,948 2746  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 12:52:30,063 3861  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 12:52:30,191 3989  INFO  - Finished Spring Data repository scanning in 110ms. Found 2 JPA repository interfaces.
2020-09-23 12:52:32,001 5799  INFO  - HikariPool-1 - Starting...
2020-09-23 12:52:32,009 5807  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 12:52:32,582 6380  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 12:52:32,588 6386  INFO  - HikariPool-1 - Start completed.
2020-09-23 12:52:32,729 6527  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 12:52:33,053 6851  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 12:52:33,057 6855  INFO  - HHH000206: hibernate.properties not found
2020-09-23 12:52:33,478 7276  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 12:52:34,437 8235  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 12:52:34,446 8244  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 12:52:36,107 9905  WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table book_server_info add column id integer not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table book_server_info add column id integer not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:580) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:297) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:75) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1250) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: In an ALTER TABLE statement, the column 'ID' has been specified as NOT NULL and either the DEFAULT clause was not specified or was specified as DEFAULT NULL.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 33 more
Caused by: org.apache.derby.iapi.error.StandardException: In an ALTER TABLE statement, the column 'ID' has been specified as NOT NULL and either the DEFAULT clause was not specified or was specified as DEFAULT NULL.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.ColumnDefinitionNode.bindAndValidateDefault(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.TableElementList.validate(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.AlterTableNode.bindStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 33 more
2020-09-23 12:52:36,122 9920  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 12:52:37,021 10819 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 12:52:37,776 11574 INFO  - Started BooksLibraryApp in 9.524 seconds (JVM running for 11.641)
2020-09-23 12:52:37,778 11576 INFO  - Starting gRPC Server ...
2020-09-23 12:52:37,871 11669 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$c60a6397' service has been registered.
2020-09-23 12:52:39,320 13118 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 12:53:37,717 71515 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 12:57:34,534 2281  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 263128 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 12:57:34,543 2290  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 12:57:35,555 3302  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 12:57:35,684 3431  INFO  - Finished Spring Data repository scanning in 110ms. Found 2 JPA repository interfaces.
2020-09-23 12:57:37,465 5212  INFO  - HikariPool-1 - Starting...
2020-09-23 12:57:37,474 5221  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 12:57:37,983 5730  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 12:57:37,989 5736  INFO  - HikariPool-1 - Start completed.
2020-09-23 12:57:38,227 5974  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 12:57:38,416 6163  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 12:57:38,420 6167  INFO  - HHH000206: hibernate.properties not found
2020-09-23 12:57:38,845 6592  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 12:57:39,878 7625  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 12:57:39,893 7640  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 12:57:41,788 9535  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 12:57:42,842 10589 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 12:57:43,692 11439 INFO  - Started BooksLibraryApp in 9.761 seconds (JVM running for 11.494)
2020-09-23 12:57:43,695 11442 INFO  - Starting gRPC Server ...
2020-09-23 12:57:43,802 11549 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$ddfbba3d' service has been registered.
2020-09-23 12:57:45,320 13067 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 12:57:45,362 13109 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 13:00:11,191 4047  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 266524 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 13:00:11,200 4056  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 13:00:12,364 5220  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 13:00:12,490 5346  INFO  - Finished Spring Data repository scanning in 109ms. Found 2 JPA repository interfaces.
2020-09-23 13:00:14,331 7187  INFO  - HikariPool-1 - Starting...
2020-09-23 13:00:14,340 7196  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:00:14,924 7780  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 13:00:14,929 7785  INFO  - HikariPool-1 - Start completed.
2020-09-23 13:00:15,090 7946  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 13:00:15,369 8225  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 13:00:15,372 8228  INFO  - HHH000206: hibernate.properties not found
2020-09-23 13:00:15,780 8636  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 13:00:16,912 9768  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 13:00:16,927 9783  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 13:00:18,970 11826 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 13:00:20,016 12872 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 13:00:20,773 13629 INFO  - Started BooksLibraryApp in 10.253 seconds (JVM running for 13.828)
2020-09-23 13:00:20,775 13631 INFO  - Starting gRPC Server ...
2020-09-23 13:00:20,870 13726 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$ef4ec9' service has been registered.
2020-09-23 13:00:22,331 15187 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 13:00:22,367 15223 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 13:05:00,323 2618  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 261460 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 13:05:00,332 2627  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 13:05:01,398 3693  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 13:05:01,524 3819  INFO  - Finished Spring Data repository scanning in 107ms. Found 2 JPA repository interfaces.
2020-09-23 13:05:03,347 5642  INFO  - HikariPool-1 - Starting...
2020-09-23 13:05:03,360 5655  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:05:04,516 6811  ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-23 13:05:04,527 6822  WARN  - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:329) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:357) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$671d9650.CGLIB$jpaVendorAdapter$3(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$671d9650$$FastClassBySpringCGLIB$$1e8ea6fb.invoke(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$671d9650.jpaVendorAdapter(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_252]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_252]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_252]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_252]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1271) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1191) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1271) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1191) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:320) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 61 more
Caused by: java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
2020-09-23 13:05:04,619 6914  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 13:05:04,784 7079  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 13:05:04,787 7082  INFO  - HHH000206: hibernate.properties not found
2020-09-23 13:05:05,248 7543  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 13:05:06,169 8464  INFO  - HikariPool-1 - Starting...
2020-09-23 13:05:06,170 8465  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:05:07,187 9482  ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-23 13:05:07,188 9483  WARN  - HHH000342: Could not obtain connection to query metadata : Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
2020-09-23 13:05:07,210 9505  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 13:05:07,222 9517  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 13:05:07,256 9551  INFO  - HHH000422: Disabling contextual LOB creation as connection was null
2020-09-23 13:05:08,548 10843 INFO  - HikariPool-1 - Starting...
2020-09-23 13:05:08,548 10843 WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:05:09,573 11868 ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-23 13:05:09,575 11870 WARN  - SQL Error: 40000, SQLState: XJ040
2020-09-23 13:05:09,576 11871 ERROR - Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
2020-09-23 13:05:09,576 11871 WARN  - SQL Error: 45000, SQLState: XSDB6
2020-09-23 13:05:09,576 11871 ERROR - Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
2020-09-23 13:05:09,587 11882 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
2020-09-23 13:05:09,597 11892 INFO  - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-23 13:05:09,602 11897 ERROR - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:403) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 15 more
Caused by: org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:47) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:132) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:96) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1250) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 15 more
Caused by: java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
2020-09-23 13:05:41,093 2550  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 268244 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 13:05:41,100 2557  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 13:05:42,167 3624  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 13:05:42,311 3768  INFO  - Finished Spring Data repository scanning in 127ms. Found 2 JPA repository interfaces.
2020-09-23 13:05:44,113 5570  INFO  - HikariPool-1 - Starting...
2020-09-23 13:05:44,122 5579  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:05:44,609 6066  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 13:05:44,614 6071  INFO  - HikariPool-1 - Start completed.
2020-09-23 13:05:44,753 6210  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 13:05:45,043 6500  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 13:05:45,047 6504  INFO  - HHH000206: hibernate.properties not found
2020-09-23 13:05:45,435 6892  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 13:05:46,452 7909  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 13:05:46,463 7920  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 13:05:48,255 9712  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 13:05:49,337 10794 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 13:05:50,117 11574 INFO  - Started BooksLibraryApp in 9.758 seconds (JVM running for 11.639)
2020-09-23 13:05:50,119 11576 INFO  - Starting gRPC Server ...
2020-09-23 13:05:50,224 11681 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$c5b649ad' service has been registered.
2020-09-23 13:05:51,779 13236 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 13:05:51,830 13287 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 13:06:14,338 2641  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 254624 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 13:06:14,347 2650  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 13:06:15,367 3670  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 13:06:15,480 3783  INFO  - Finished Spring Data repository scanning in 98ms. Found 2 JPA repository interfaces.
2020-09-23 13:06:17,248 5551  INFO  - HikariPool-1 - Starting...
2020-09-23 13:06:17,257 5560  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:06:17,750 6053  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 13:06:17,756 6059  INFO  - HikariPool-1 - Start completed.
2020-09-23 13:06:17,898 6201  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 13:06:18,206 6509  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 13:06:18,210 6513  INFO  - HHH000206: hibernate.properties not found
2020-09-23 13:06:18,609 6912  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 13:06:19,612 7915  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 13:06:19,628 7931  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 13:06:21,613 9916  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 13:06:22,853 11156 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 13:06:23,666 11969 INFO  - Started BooksLibraryApp in 10.013 seconds (JVM running for 12.038)
2020-09-23 13:06:23,668 11971 INFO  - Starting gRPC Server ...
2020-09-23 13:06:23,775 12078 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$7d03c7e0' service has been registered.
2020-09-23 13:06:25,264 13567 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 13:06:25,301 13604 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 13:07:31,608 2307  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 256496 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 13:07:31,615 2314  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 13:07:32,649 3348  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 13:07:32,779 3478  INFO  - Finished Spring Data repository scanning in 113ms. Found 2 JPA repository interfaces.
2020-09-23 13:07:34,499 5198  INFO  - HikariPool-1 - Starting...
2020-09-23 13:07:34,508 5207  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:07:34,969 5668  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 13:07:34,975 5674  INFO  - HikariPool-1 - Start completed.
2020-09-23 13:07:35,144 5843  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 13:07:35,521 6220  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 13:07:35,527 6226  INFO  - HHH000206: hibernate.properties not found
2020-09-23 13:07:36,002 6701  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 13:07:37,016 7715  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 13:07:37,028 7727  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 13:07:38,910 9609  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 13:07:40,128 10827 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 13:07:40,793 11492 INFO  - Started BooksLibraryApp in 9.796 seconds (JVM running for 11.556)
2020-09-23 13:07:40,795 11494 INFO  - Starting gRPC Server ...
2020-09-23 13:07:40,896 11595 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$4ad86d4d' service has been registered.
2020-09-23 13:07:42,380 13079 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 13:07:42,426 13125 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 13:16:11,122 2611  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 252040 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 13:16:11,131 2620  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 13:16:12,289 3778  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 13:16:12,423 3912  INFO  - Finished Spring Data repository scanning in 114ms. Found 2 JPA repository interfaces.
2020-09-23 13:16:14,234 5723  INFO  - HikariPool-1 - Starting...
2020-09-23 13:16:14,243 5732  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:16:14,702 6191  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 13:16:14,708 6197  INFO  - HikariPool-1 - Start completed.
2020-09-23 13:16:14,846 6335  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 13:16:15,137 6626  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 13:16:15,141 6630  INFO  - HHH000206: hibernate.properties not found
2020-09-23 13:16:15,587 7076  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 13:16:16,566 8055  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 13:16:16,578 8067  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 13:16:18,641 10130 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 13:16:19,816 11305 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 13:16:20,638 12127 INFO  - Started BooksLibraryApp in 10.193 seconds (JVM running for 12.284)
2020-09-23 13:16:20,641 12130 INFO  - Starting gRPC Server ...
2020-09-23 13:16:20,740 12229 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$9cd31706' service has been registered.
2020-09-23 13:16:22,307 13796 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 13:16:22,354 13843 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 13:16:46,198 2561  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 257724 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 13:16:46,206 2569  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 13:16:47,286 3649  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 13:16:47,460 3823  INFO  - Finished Spring Data repository scanning in 149ms. Found 2 JPA repository interfaces.
2020-09-23 13:16:49,773 6136  INFO  - HikariPool-1 - Starting...
2020-09-23 13:16:49,782 6145  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:16:50,539 6902  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 13:16:50,545 6908  INFO  - HikariPool-1 - Start completed.
2020-09-23 13:16:50,852 7215  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 13:16:51,091 7454  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 13:16:51,102 7465  INFO  - HHH000206: hibernate.properties not found
2020-09-23 13:16:51,596 7959  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 13:16:52,620 8983  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 13:16:52,634 8997  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 13:16:54,403 10766 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 13:16:55,356 11719 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 13:16:56,198 12561 INFO  - Started BooksLibraryApp in 10.792 seconds (JVM running for 12.629)
2020-09-23 13:16:56,200 12563 INFO  - Starting gRPC Server ...
2020-09-23 13:16:56,290 12653 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$bc416867' service has been registered.
2020-09-23 13:16:57,747 14110 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 13:16:57,792 14155 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 13:19:07,676 2595  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 265512 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 13:19:07,685 2604  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 13:19:08,694 3613  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 13:19:08,831 3750  INFO  - Finished Spring Data repository scanning in 119ms. Found 2 JPA repository interfaces.
2020-09-23 13:19:10,624 5543  INFO  - HikariPool-1 - Starting...
2020-09-23 13:19:10,632 5551  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:19:11,101 6020  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 13:19:11,107 6026  INFO  - HikariPool-1 - Start completed.
2020-09-23 13:19:11,250 6169  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 13:19:11,561 6480  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 13:19:11,568 6487  INFO  - HHH000206: hibernate.properties not found
2020-09-23 13:19:12,000 6919  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 13:19:13,020 7939  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 13:19:13,033 7952  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 13:19:14,800 9719  WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table book_server_info add column fk_book_id integer not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table book_server_info add column fk_book_id integer not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:580) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:297) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:75) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1250) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: In an ALTER TABLE statement, the column 'FK_BOOK_ID' has been specified as NOT NULL and either the DEFAULT clause was not specified or was specified as DEFAULT NULL.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 33 more
Caused by: org.apache.derby.iapi.error.StandardException: In an ALTER TABLE statement, the column 'FK_BOOK_ID' has been specified as NOT NULL and either the DEFAULT clause was not specified or was specified as DEFAULT NULL.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.ColumnDefinitionNode.bindAndValidateDefault(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.TableElementList.validate(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.AlterTableNode.bindStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 33 more
2020-09-23 13:19:14,897 9816  WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table book_server_info add constraint FKoge2dhjp9k23nw7h8w3rfiiy3 foreign key (fk_book_id) references book" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table book_server_info add constraint FKoge2dhjp9k23nw7h8w3rfiiy3 foreign key (fk_book_id) references book" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:504) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:433) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:249) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1250) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: 'FK_BOOK_ID' is not a column in table or VTI 'BOOK_SERVER_INFO'.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 32 more
Caused by: org.apache.derby.iapi.error.StandardException: 'FK_BOOK_ID' is not a column in table or VTI 'BOOK_SERVER_INFO'.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.CreateConstraintConstantAction.executeConstantAction(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantActionBody(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantAction(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.execute.MiscResultSet.open(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 32 more
2020-09-23 13:19:14,905 9824  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 13:19:15,928 10847 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 13:19:16,769 11688 INFO  - Started BooksLibraryApp in 9.75 seconds (JVM running for 11.762)
2020-09-23 13:19:16,771 11690 INFO  - Starting gRPC Server ...
2020-09-23 13:19:16,870 11789 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$86c02092' service has been registered.
2020-09-23 13:19:18,520 13439 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 13:19:18,562 13481 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 13:23:45,017 2500  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 260264 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 13:23:45,027 2510  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 13:23:46,104 3587  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 13:23:46,234 3717  INFO  - Finished Spring Data repository scanning in 113ms. Found 2 JPA repository interfaces.
2020-09-23 13:23:47,994 5477  INFO  - HikariPool-1 - Starting...
2020-09-23 13:23:48,003 5486  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:23:48,468 5951  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 13:23:48,474 5957  INFO  - HikariPool-1 - Start completed.
2020-09-23 13:23:48,614 6097  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 13:23:48,914 6397  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 13:23:48,918 6401  INFO  - HHH000206: hibernate.properties not found
2020-09-23 13:23:49,355 6838  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 13:23:50,537 8020  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 13:23:50,548 8031  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 13:23:52,420 9903  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 13:23:53,504 10987 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 13:23:54,305 11788 INFO  - Started BooksLibraryApp in 9.911 seconds (JVM running for 11.936)
2020-09-23 13:23:54,308 11791 INFO  - Starting gRPC Server ...
2020-09-23 13:23:54,403 11886 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$b6a1ca76' service has been registered.
2020-09-23 13:23:55,904 13387 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 13:23:55,951 13434 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 13:26:26,787 2623  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 111396 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 13:26:26,795 2631  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 13:26:27,789 3625  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 13:26:27,924 3760  INFO  - Finished Spring Data repository scanning in 112ms. Found 2 JPA repository interfaces.
2020-09-23 13:26:29,794 5630  INFO  - HikariPool-1 - Starting...
2020-09-23 13:26:29,803 5639  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:26:30,249 6085  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 13:26:30,255 6091  INFO  - HikariPool-1 - Start completed.
2020-09-23 13:26:30,380 6216  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 13:26:30,699 6535  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 13:26:30,703 6539  INFO  - HHH000206: hibernate.properties not found
2020-09-23 13:26:31,113 6949  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 13:26:32,282 8118  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 13:26:32,296 8132  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 13:26:34,289 10125 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 13:26:35,342 11178 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 13:26:36,141 11977 INFO  - Started BooksLibraryApp in 10.046 seconds (JVM running for 12.044)
2020-09-23 13:26:36,142 11978 INFO  - Starting gRPC Server ...
2020-09-23 13:26:36,240 12076 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$4dd870d0' service has been registered.
2020-09-23 13:26:37,835 13671 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 13:26:37,877 13713 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 13:31:04,691 2387  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 267448 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 13:31:04,702 2398  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 13:31:05,721 3417  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 13:31:05,855 3551  INFO  - Finished Spring Data repository scanning in 116ms. Found 2 JPA repository interfaces.
2020-09-23 13:31:07,646 5342  INFO  - HikariPool-1 - Starting...
2020-09-23 13:31:07,655 5351  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:31:08,113 5809  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 13:31:08,119 5815  INFO  - HikariPool-1 - Start completed.
2020-09-23 13:31:08,266 5962  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 13:31:08,564 6260  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 13:31:08,567 6263  INFO  - HHH000206: hibernate.properties not found
2020-09-23 13:31:08,997 6693  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 13:31:09,987 7683  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 13:31:09,997 7693  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 13:31:11,913 9609  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 13:31:13,036 10732 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 13:31:13,938 11634 INFO  - Started BooksLibraryApp in 9.903 seconds (JVM running for 11.696)
2020-09-23 13:31:13,940 11636 INFO  - Starting gRPC Server ...
2020-09-23 13:31:14,074 11770 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$4f59804a' service has been registered.
2020-09-23 13:31:15,570 13266 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 13:31:15,618 13314 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 13:32:53,695 2727  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 268780 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 13:32:53,703 2735  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 13:32:54,692 3724  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 13:32:54,824 3856  INFO  - Finished Spring Data repository scanning in 111ms. Found 2 JPA repository interfaces.
2020-09-23 13:32:56,566 5598  INFO  - HikariPool-1 - Starting...
2020-09-23 13:32:56,575 5607  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:32:57,032 6064  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 13:32:57,038 6070  INFO  - HikariPool-1 - Start completed.
2020-09-23 13:32:57,178 6210  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 13:32:57,429 6461  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 13:32:57,432 6464  INFO  - HHH000206: hibernate.properties not found
2020-09-23 13:32:57,839 6871  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 13:32:58,935 7967  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 13:32:58,947 7979  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 13:33:00,901 9933  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 13:33:01,946 10978 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 13:33:02,814 11846 INFO  - Started BooksLibraryApp in 9.811 seconds (JVM running for 11.915)
2020-09-23 13:33:02,817 11849 INFO  - Starting gRPC Server ...
2020-09-23 13:33:02,914 11946 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$baa9fd5d' service has been registered.
2020-09-23 13:33:04,636 13668 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 13:33:04,676 13708 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 13:57:44,332 2595  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 274460 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 13:57:44,340 2603  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 13:57:45,388 3651  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 13:57:45,512 3775  INFO  - Finished Spring Data repository scanning in 110ms. Found 2 JPA repository interfaces.
2020-09-23 13:57:47,333 5596  INFO  - HikariPool-1 - Starting...
2020-09-23 13:57:47,343 5606  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 13:57:48,078 6341  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 13:57:48,083 6346  INFO  - HikariPool-1 - Start completed.
2020-09-23 13:57:48,361 6624  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 13:57:48,608 6871  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 13:57:48,612 6875  INFO  - HHH000206: hibernate.properties not found
2020-09-23 13:57:49,016 7279  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 13:57:49,990 8253  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 13:57:50,001 8264  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 13:57:51,661 9924  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 13:57:52,620 10883 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 13:57:53,533 11796 INFO  - Started BooksLibraryApp in 9.906 seconds (JVM running for 11.871)
2020-09-23 13:57:53,535 11798 INFO  - Starting gRPC Server ...
2020-09-23 13:57:53,636 11899 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$c96426fc' service has been registered.
2020-09-23 13:57:55,191 13454 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 13:57:55,235 13498 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:04:41,199 2218  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 272456 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:04:41,207 2226  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:04:42,169 3188  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:04:42,296 3315  INFO  - Finished Spring Data repository scanning in 110ms. Found 2 JPA repository interfaces.
2020-09-23 14:04:44,194 5213  INFO  - HikariPool-1 - Starting...
2020-09-23 14:04:44,203 5222  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:04:44,649 5668  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:04:44,655 5674  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:04:44,805 5824  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:04:45,054 6073  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:04:45,057 6076  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:04:45,471 6490  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:04:46,428 7447  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:04:46,438 7457  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:04:48,456 9475  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:04:49,514 10533 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:04:50,427 11446 INFO  - Started BooksLibraryApp in 9.793 seconds (JVM running for 11.509)
2020-09-23 14:04:50,431 11450 INFO  - Starting gRPC Server ...
2020-09-23 14:04:50,532 11551 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$86354183' service has been registered.
2020-09-23 14:04:51,998 13017 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:04:52,038 13057 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:12:20,898 2493  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 270920 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:12:20,906 2501  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:12:22,034 3629  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:12:22,174 3769  INFO  - Finished Spring Data repository scanning in 122ms. Found 2 JPA repository interfaces.
2020-09-23 14:12:24,361 5956  INFO  - HikariPool-1 - Starting...
2020-09-23 14:12:24,377 5972  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:12:24,974 6569  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:12:24,979 6574  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:12:25,163 6758  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:12:25,540 7135  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:12:25,546 7141  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:12:26,141 7736  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:12:27,141 8736  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:12:27,156 8751  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:12:29,194 10789 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:12:30,429 12024 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:12:31,103 12698 INFO  - Started BooksLibraryApp in 10.872 seconds (JVM running for 12.848)
2020-09-23 14:12:31,105 12700 INFO  - Starting gRPC Server ...
2020-09-23 14:12:31,220 12815 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$69754485' service has been registered.
2020-09-23 14:12:32,662 14257 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:12:32,702 14297 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:13:28,389 2584  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 270632 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:13:28,398 2593  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:13:29,430 3625  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:13:29,563 3758  INFO  - Finished Spring Data repository scanning in 116ms. Found 2 JPA repository interfaces.
2020-09-23 14:13:31,304 5499  INFO  - HikariPool-1 - Starting...
2020-09-23 14:13:31,313 5508  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:13:32,447 6642  ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-23 14:13:32,459 6654  WARN  - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:329) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:357) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$36917825.CGLIB$jpaVendorAdapter$8(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$36917825$$FastClassBySpringCGLIB$$bcdc19ce.invoke(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$36917825.jpaVendorAdapter(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_252]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_252]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_252]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_252]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1271) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1191) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1271) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1191) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:320) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 61 more
Caused by: java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
2020-09-23 14:13:32,543 6738  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:13:32,733 6928  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:13:32,736 6931  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:13:33,239 7434  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:13:34,147 8342  INFO  - HikariPool-1 - Starting...
2020-09-23 14:13:34,147 8342  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:13:35,161 9356  ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-23 14:13:35,162 9357  WARN  - HHH000342: Could not obtain connection to query metadata : Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
2020-09-23 14:13:35,189 9384  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:13:35,203 9398  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:13:35,242 9437  INFO  - HHH000422: Disabling contextual LOB creation as connection was null
2020-09-23 14:13:36,363 10558 INFO  - HikariPool-1 - Starting...
2020-09-23 14:13:36,364 10559 WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:13:37,380 11575 ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-23 14:13:37,383 11578 WARN  - SQL Error: 40000, SQLState: XJ040
2020-09-23 14:13:37,383 11578 ERROR - Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
2020-09-23 14:13:37,383 11578 WARN  - SQL Error: 45000, SQLState: XSDB6
2020-09-23 14:13:37,383 11578 ERROR - Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
2020-09-23 14:13:37,393 11588 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
2020-09-23 14:13:37,403 11598 INFO  - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-23 14:13:37,408 11603 ERROR - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:403) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 15 more
Caused by: org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:47) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:40) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:65) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:59) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:132) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:96) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1250) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 15 more
Caused by: java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
2020-09-23 14:13:45,835 2536  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 274304 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:13:45,842 2543  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:13:46,978 3679  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:13:47,176 3877  INFO  - Finished Spring Data repository scanning in 166ms. Found 2 JPA repository interfaces.
2020-09-23 14:13:49,489 6190  INFO  - HikariPool-1 - Starting...
2020-09-23 14:13:49,505 6206  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:13:50,418 7119  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:13:50,423 7124  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:13:50,694 7395  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:13:50,927 7628  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:13:50,931 7632  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:13:51,487 8188  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:13:52,491 9192  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:13:52,504 9205  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:13:54,642 11343 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:13:55,725 12426 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:13:56,539 13240 INFO  - Started BooksLibraryApp in 11.353 seconds (JVM running for 13.309)
2020-09-23 14:13:56,541 13242 INFO  - Starting gRPC Server ...
2020-09-23 14:13:56,638 13339 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$85187b02' service has been registered.
2020-09-23 14:13:58,079 14780 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:13:58,123 14824 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:15:26,505 2692  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 265144 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:15:26,513 2700  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:15:27,571 3758  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:15:27,701 3888  INFO  - Finished Spring Data repository scanning in 111ms. Found 2 JPA repository interfaces.
2020-09-23 14:15:29,489 5676  INFO  - HikariPool-1 - Starting...
2020-09-23 14:15:29,498 5685  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:15:29,967 6154  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:15:29,973 6160  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:15:30,106 6293  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:15:30,425 6612  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:15:30,430 6617  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:15:30,821 7008  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:15:31,837 8024  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:15:31,852 8039  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:15:33,716 9903  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:15:34,828 11015 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:15:35,627 11814 INFO  - Started BooksLibraryApp in 9.835 seconds (JVM running for 11.883)
2020-09-23 14:15:35,629 11816 INFO  - Starting gRPC Server ...
2020-09-23 14:15:35,720 11907 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$1b68dc6a' service has been registered.
2020-09-23 14:15:37,215 13402 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:15:37,258 13445 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:19:55,399 2538  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 276576 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:19:55,406 2545  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:19:56,396 3535  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:19:56,531 3670  INFO  - Finished Spring Data repository scanning in 115ms. Found 2 JPA repository interfaces.
2020-09-23 14:19:58,300 5439  INFO  - HikariPool-1 - Starting...
2020-09-23 14:19:58,309 5448  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:19:58,841 5980  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:19:58,847 5986  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:19:59,100 6239  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:19:59,314 6453  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:19:59,319 6458  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:19:59,735 6874  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:20:00,933 8072  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:20:00,948 8087  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:20:02,828 9967  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:20:03,907 11046 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:20:05,045 12184 INFO  - Started BooksLibraryApp in 10.32 seconds (JVM running for 12.252)
2020-09-23 14:20:05,047 12186 INFO  - Starting gRPC Server ...
2020-09-23 14:20:05,161 12300 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$c7f11c5e' service has been registered.
2020-09-23 14:20:06,651 13790 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:20:06,695 13834 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:22:12,005 2449  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 271608 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:22:12,013 2457  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:22:12,995 3439  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:22:13,109 3553  INFO  - Finished Spring Data repository scanning in 98ms. Found 2 JPA repository interfaces.
2020-09-23 14:22:14,881 5325  INFO  - HikariPool-1 - Starting...
2020-09-23 14:22:14,894 5338  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:22:15,395 5839  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:22:15,402 5846  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:22:15,545 5989  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:22:15,850 6294  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:22:15,853 6297  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:22:16,313 6757  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:22:17,303 7747  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:22:17,315 7759  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:22:19,236 9680  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:22:20,396 10840 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:22:21,205 11649 INFO  - Started BooksLibraryApp in 9.837 seconds (JVM running for 11.714)
2020-09-23 14:22:21,207 11651 INFO  - Starting gRPC Server ...
2020-09-23 14:22:21,307 11751 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$59d1ea72' service has been registered.
2020-09-23 14:22:22,826 13270 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:22:22,877 13321 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:23:05,802 2283  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 277000 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:23:05,809 2290  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:23:06,881 3362  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:23:07,001 3482  INFO  - Finished Spring Data repository scanning in 104ms. Found 2 JPA repository interfaces.
2020-09-23 14:23:08,721 5202  INFO  - HikariPool-1 - Starting...
2020-09-23 14:23:08,731 5212  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:23:09,286 5767  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:23:09,292 5773  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:23:09,442 5923  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:23:09,709 6190  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:23:09,712 6193  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:23:10,125 6606  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:23:11,087 7568  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:23:11,099 7580  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:23:12,887 9368  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:23:13,931 10412 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:23:14,789 11270 INFO  - Started BooksLibraryApp in 9.54 seconds (JVM running for 11.327)
2020-09-23 14:23:14,791 11272 INFO  - Starting gRPC Server ...
2020-09-23 14:23:14,914 11395 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$a1fb2382' service has been registered.
2020-09-23 14:23:16,371 12852 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:23:16,416 12897 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:24:14,326 2590  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 270632 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:24:14,336 2600  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:24:15,345 3609  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:24:15,486 3750  INFO  - Finished Spring Data repository scanning in 121ms. Found 2 JPA repository interfaces.
2020-09-23 14:24:17,247 5511  INFO  - HikariPool-1 - Starting...
2020-09-23 14:24:17,256 5520  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:24:17,705 5969  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:24:17,712 5976  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:24:17,853 6117  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:24:18,168 6432  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:24:18,172 6436  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:24:18,685 6949  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:24:19,575 7839  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:24:19,585 7849  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:24:21,291 9555  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:24:22,211 10475 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:24:22,992 11256 INFO  - Started BooksLibraryApp in 9.316 seconds (JVM running for 11.325)
2020-09-23 14:24:22,993 11257 INFO  - Starting gRPC Server ...
2020-09-23 14:24:23,087 11351 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$369f7746' service has been registered.
2020-09-23 14:24:24,521 12785 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:24:24,567 12831 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:25:42,559 2601  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 272684 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:25:42,567 2609  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:25:43,594 3636  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:25:43,760 3802  INFO  - Finished Spring Data repository scanning in 121ms. Found 2 JPA repository interfaces.
2020-09-23 14:25:45,586 5628  INFO  - HikariPool-1 - Starting...
2020-09-23 14:25:45,597 5639  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:25:46,077 6119  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:25:46,083 6125  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:25:46,236 6278  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:25:46,567 6609  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:25:46,571 6613  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:25:47,035 7077  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:25:48,005 8047  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:25:48,016 8058  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:25:50,063 10105 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:25:51,141 11183 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:25:51,895 11937 INFO  - Started BooksLibraryApp in 10.042 seconds (JVM running for 11.997)
2020-09-23 14:25:51,897 11939 INFO  - Starting gRPC Server ...
2020-09-23 14:25:51,996 12038 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$eafdbf04' service has been registered.
2020-09-23 14:25:53,503 13545 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:25:53,550 13592 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:31:41,577 2284  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 275696 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:31:41,592 2299  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:31:42,872 3579  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:31:42,984 3691  INFO  - Finished Spring Data repository scanning in 97ms. Found 2 JPA repository interfaces.
2020-09-23 14:31:44,735 5442  INFO  - HikariPool-1 - Starting...
2020-09-23 14:31:44,748 5455  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:31:45,232 5939  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:31:45,237 5944  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:31:45,378 6085  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:31:45,671 6378  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:31:45,675 6382  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:31:46,105 6812  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:31:47,152 7859  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:31:47,162 7869  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:31:48,972 9679  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:31:49,989 10696 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:31:50,787 11494 INFO  - Started BooksLibraryApp in 9.837 seconds (JVM running for 11.557)
2020-09-23 14:31:50,789 11496 INFO  - Starting gRPC Server ...
2020-09-23 14:31:50,888 11595 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$a225e052' service has been registered.
2020-09-23 14:31:52,442 13149 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:31:52,489 13196 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:33:09,679 2643  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 269480 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:33:09,686 2650  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:33:10,748 3712  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:33:10,879 3843  INFO  - Finished Spring Data repository scanning in 113ms. Found 2 JPA repository interfaces.
2020-09-23 14:33:12,574 5538  INFO  - HikariPool-1 - Starting...
2020-09-23 14:33:12,583 5547  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:33:13,024 5988  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:33:13,030 5994  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:33:13,162 6126  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:33:13,463 6427  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:33:13,466 6430  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:33:13,837 6801  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:33:14,707 7671  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:33:14,715 7679  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:33:16,446 9410  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:33:17,598 10562 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:33:18,265 11229 INFO  - Started BooksLibraryApp in 9.237 seconds (JVM running for 11.303)
2020-09-23 14:33:18,267 11231 INFO  - Starting gRPC Server ...
2020-09-23 14:33:18,366 11330 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$d9d0f2c7' service has been registered.
2020-09-23 14:33:19,876 12840 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:33:19,923 12887 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:33:48,597 2719  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 278204 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:33:48,605 2727  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:33:49,603 3725  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:33:49,738 3860  INFO  - Finished Spring Data repository scanning in 117ms. Found 2 JPA repository interfaces.
2020-09-23 14:33:51,510 5632  INFO  - HikariPool-1 - Starting...
2020-09-23 14:33:51,519 5641  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:33:52,232 6354  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:33:52,237 6359  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:33:52,482 6604  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:33:52,763 6885  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:33:52,768 6890  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:33:53,226 7348  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:33:54,158 8280  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:33:54,171 8293  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:33:55,914 10036 WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table book_server_info add column id integer not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table book_server_info add column id integer not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:559) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:580) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:297) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:75) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1250) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1830) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1767) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: In an ALTER TABLE statement, the column 'ID' has been specified as NOT NULL and either the DEFAULT clause was not specified or was specified as DEFAULT NULL.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 33 more
Caused by: org.apache.derby.iapi.error.StandardException: In an ALTER TABLE statement, the column 'ID' has been specified as NOT NULL and either the DEFAULT clause was not specified or was specified as DEFAULT NULL.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.ColumnDefinitionNode.bindAndValidateDefault(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.TableElementList.validate(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.compile.AlterTableNode.bindStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericStatement.prepMinion(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.GenericStatement.prepare(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.prepareInternalStatement(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedStatement.execute(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) ~[HikariCP-3.2.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-3.2.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.3.17.Final.jar:5.3.17.Final]
	... 33 more
2020-09-23 14:33:55,965 10087 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:33:56,929 11051 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:33:57,704 11826 INFO  - Started BooksLibraryApp in 9.781 seconds (JVM running for 11.891)
2020-09-23 14:33:57,707 11829 INFO  - Starting gRPC Server ...
2020-09-23 14:33:57,801 11923 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$a548f5c7' service has been registered.
2020-09-23 14:33:59,271 13393 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:33:59,312 13434 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:35:48,955 123077 WARN  - SQL Error: 20000, SQLState: 42X14
2020-09-23 14:35:48,962 123084 ERROR - 'ID' is not a column in table or VTI 'SA.BOOK_SERVER_INFO'.
2020-09-23 14:35:49,013 123135 ERROR - HHH000346: Error during managed flush [org.hibernate.exception.SQLGrammarException: could not prepare statement]
2020-09-23 14:37:09,714 2450  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 278020 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:37:09,723 2459  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:37:10,696 3432  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:37:10,827 3563  INFO  - Finished Spring Data repository scanning in 113ms. Found 2 JPA repository interfaces.
2020-09-23 14:37:12,531 5267  INFO  - HikariPool-1 - Starting...
2020-09-23 14:37:12,539 5275  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:37:12,985 5721  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:37:12,991 5727  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:37:13,134 5870  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:37:13,453 6189  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:37:13,456 6192  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:37:13,878 6614  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:37:14,903 7639  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:37:14,924 7660  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:37:16,970 9706  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:37:18,046 10782 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:37:18,864 11600 INFO  - Started BooksLibraryApp in 9.795 seconds (JVM running for 11.663)
2020-09-23 14:37:18,866 11602 INFO  - Starting gRPC Server ...
2020-09-23 14:37:18,965 11701 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$87c78b50' service has been registered.
2020-09-23 14:37:20,398 13134 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:37:20,443 13179 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:53:17,026 1577  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 270604 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:53:17,032 1583  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:53:17,834 2385  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:53:17,958 2509  INFO  - Finished Spring Data repository scanning in 111ms. Found 2 JPA repository interfaces.
2020-09-23 14:53:19,149 3700  INFO  - HikariPool-1 - Starting...
2020-09-23 14:53:19,156 3707  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:53:19,481 4032  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:53:19,486 4037  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:53:19,592 4143  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:53:19,709 4260  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:53:19,711 4262  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:53:20,004 4555  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:53:20,877 5428  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:53:20,886 5437  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:53:22,287 6838  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:53:23,022 7573  INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:53:23,739 8290  INFO  - Started BooksLibraryApp in 7.168 seconds (JVM running for 8.349)
2020-09-23 14:53:23,740 8291  INFO  - Starting gRPC Server ...
2020-09-23 14:53:23,813 8364  INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$b69bbbab' service has been registered.
2020-09-23 14:53:25,136 9687  INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:53:25,169 9720  INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:53:26,129 10680 WARN  - SQL Error: 20000, SQLState: 23503
2020-09-23 14:53:26,129 10680 ERROR - DELETE on table 'BOOK' caused a violation of foreign key constraint 'FKOGE2DHJP9K23NW7H8W3RFIIY3' for key (17101).  The statement has been rolled back.
2020-09-23 14:53:26,130 10681 INFO  - HHH000010: On release of batch it still contained JDBC statements
2020-09-23 14:53:26,130 10681 ERROR - HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
2020-09-23 14:54:58,457 1677  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 278372 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:54:58,464 1684  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:54:59,242 2462  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:54:59,366 2586  INFO  - Finished Spring Data repository scanning in 111ms. Found 2 JPA repository interfaces.
2020-09-23 14:55:00,599 3819  INFO  - HikariPool-1 - Starting...
2020-09-23 14:55:00,606 3826  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:55:00,938 4158  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:55:00,943 4163  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:55:01,035 4255  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:55:01,148 4368  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:55:01,151 4371  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:55:01,439 4659  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:55:02,236 5456  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:55:02,245 5465  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:55:03,434 6654  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:55:04,083 7303  INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:55:04,697 7917  INFO  - Started BooksLibraryApp in 6.675 seconds (JVM running for 7.977)
2020-09-23 14:55:04,699 7919  INFO  - Starting gRPC Server ...
2020-09-23 14:55:04,788 8008  INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$c79d2b17' service has been registered.
2020-09-23 14:55:06,058 9278  INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:55:06,088 9308  INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:56:55,460 2652  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 277164 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 14:56:55,467 2659  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 14:56:56,508 3700  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 14:56:56,634 3826  INFO  - Finished Spring Data repository scanning in 110ms. Found 2 JPA repository interfaces.
2020-09-23 14:56:58,356 5548  INFO  - HikariPool-1 - Starting...
2020-09-23 14:56:58,365 5557  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 14:56:58,796 5988  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 14:56:58,802 5994  INFO  - HikariPool-1 - Start completed.
2020-09-23 14:56:58,935 6127  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 14:56:59,216 6408  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 14:56:59,219 6411  INFO  - HHH000206: hibernate.properties not found
2020-09-23 14:56:59,599 6791  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 14:57:00,591 7783  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 14:57:00,604 7796  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 14:57:02,318 9510  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 14:57:03,274 10466 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 14:57:04,117 11309 INFO  - Started BooksLibraryApp in 9.401 seconds (JVM running for 11.376)
2020-09-23 14:57:04,119 11311 INFO  - Starting gRPC Server ...
2020-09-23 14:57:04,220 11412 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$4a999b8' service has been registered.
2020-09-23 14:57:05,694 12886 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 14:57:05,736 12928 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 14:57:25,331 32523 WARN  - SQL Error: 20000, SQLState: 23503
2020-09-23 14:57:25,337 32529 ERROR - DELETE on table 'BOOK' caused a violation of foreign key constraint 'FKOGE2DHJP9K23NW7H8W3RFIIY3' for key (17301).  The statement has been rolled back.
2020-09-23 14:57:25,372 32564 INFO  - HHH000010: On release of batch it still contained JDBC statements
2020-09-23 14:57:25,408 32600 ERROR - HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
2020-09-23 15:00:32,095 2634  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 278124 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 15:00:32,103 2642  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 15:00:33,090 3629  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 15:00:33,192 3731  INFO  - Finished Spring Data repository scanning in 89ms. Found 2 JPA repository interfaces.
2020-09-23 15:00:34,931 5470  INFO  - HikariPool-1 - Starting...
2020-09-23 15:00:34,943 5482  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 15:00:36,099 6638  ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-23 15:00:36,121 6660  WARN  - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:329) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:357) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$6c80da4b.CGLIB$jpaVendorAdapter$7(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$6c80da4b$$FastClassBySpringCGLIB$$3f4a29bf.invoke(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$6c80da4b.jpaVendorAdapter(<generated>) ~[spring-boot-autoconfigure-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_252]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_252]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_252]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_252]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1271) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1191) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1271) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1191) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1159) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) [spring-context-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204) [spring-boot-2.1.15.RELEASE.jar:2.1.15.RELEASE]
	at lib.application.BooksLibraryApp.main(BooksLibraryApp.java:43) [classes/:?]
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:320) ~[spring-jdbc-5.1.16.RELEASE.jar:5.1.16.RELEASE]
	... 61 more
Caused by: java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
2020-09-23 15:00:36,228 6767  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 15:00:36,433 6972  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 15:00:36,437 6976  INFO  - HHH000206: hibernate.properties not found
2020-09-23 15:00:36,935 7474  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 15:00:37,851 8390  INFO  - HikariPool-1 - Starting...
2020-09-23 15:00:37,851 8390  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 15:00:38,867 9406  ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-23 15:00:38,871 9410  WARN  - HHH000342: Could not obtain connection to query metadata : Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
2020-09-23 15:00:38,895 9434  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 15:00:38,909 9448  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 15:00:38,946 9485  INFO  - HHH000422: Disabling contextual LOB creation as connection was null
2020-09-23 15:00:40,082 10621 INFO  - HikariPool-1 - Starting...
2020-09-23 15:00:40,083 10622 WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 15:00:41,100 11639 ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.bootDatabase(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$1.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.jdbc.InternalDriver.getNewEmbedConnection(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.jdbc.InternalDriver$LoginCallable.call(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_252]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_252]
	at java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_252]
Caused by: org.apache.derby.iapi.error.StandardException: Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.wrapArgsForTransportAcrossDRDA(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 15 more
Caused by: org.apache.derby.iapi.error.StandardException: Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.getJBMSLockOnDB(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.data.BaseDataFileFactory.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore$6.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.raw.RawStore.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.raw.RawStore.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.store.access.RAMAccessManager.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.store.access.RAMAccessManager.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.FileMonitor.startModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase$5.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.db.BasicDatabase.bootServiceModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.bootStore(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.db.BasicDatabase.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.boot(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.TopService.bootModule(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.bootService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startProviderService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.findProviderAndStartService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.services.monitor.BaseMonitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.iapi.services.monitor.Monitor.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at org.apache.derby.impl.jdbc.EmbedConnection$4.run(Unknown Source) ~[derby-10.14.2.0.jar:?]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_252]
	at org.apache.derby.impl.jdbc.EmbedConnection.startPersistentService(Unknown Source) ~[derby-10.14.2.0.jar:?]
	... 12 more
2020-09-23 15:00:41,104 11643 WARN  - SQL Error: 40000, SQLState: XJ040
2020-09-23 15:00:41,104 11643 ERROR - Failed to start database 'mydb' with class loader sun.misc.Launcher$AppClassLoader@18b4aac2, see the next exception for details.
2020-09-23 15:00:41,104 11643 WARN  - SQL Error: 45000, SQLState: XSDB6
2020-09-23 15:00:41,105 11644 ERROR - Another instance of Derby may have already booted the database D:\mlm_dev\gitrepo\books-library-project\library-application\mydb.
2020-09-23 15:00:41,116 11655 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
2020-09-23 15:00:41,128 11667 INFO  - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-23 15:01:02,067 2569  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 279968 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 15:01:02,076 2578  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 15:01:03,149 3651  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 15:01:03,282 3784  INFO  - Finished Spring Data repository scanning in 114ms. Found 2 JPA repository interfaces.
2020-09-23 15:01:05,024 5526  INFO  - HikariPool-1 - Starting...
2020-09-23 15:01:05,034 5536  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 15:01:05,504 6006  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 15:01:05,509 6011  INFO  - HikariPool-1 - Start completed.
2020-09-23 15:01:05,667 6169  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 15:01:05,957 6459  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 15:01:05,961 6463  INFO  - HHH000206: hibernate.properties not found
2020-09-23 15:01:06,384 6886  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 15:01:07,305 7807  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 15:01:07,315 7817  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 15:01:09,221 9723  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 15:01:10,478 10980 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 15:01:11,125 11627 INFO  - Started BooksLibraryApp in 9.686 seconds (JVM running for 11.69)
2020-09-23 15:01:11,126 11628 INFO  - Starting gRPC Server ...
2020-09-23 15:01:11,225 11727 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$4e992f30' service has been registered.
2020-09-23 15:01:12,698 13200 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 15:01:12,755 13257 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 15:03:37,264 2673  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 280808 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 15:03:37,273 2682  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 15:03:38,270 3679  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 15:03:38,403 3812  INFO  - Finished Spring Data repository scanning in 114ms. Found 2 JPA repository interfaces.
2020-09-23 15:03:40,214 5623  INFO  - HikariPool-1 - Starting...
2020-09-23 15:03:40,223 5632  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 15:03:40,761 6170  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 15:03:40,767 6176  INFO  - HikariPool-1 - Start completed.
2020-09-23 15:03:40,920 6329  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 15:03:41,203 6612  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 15:03:41,206 6615  INFO  - HHH000206: hibernate.properties not found
2020-09-23 15:03:41,614 7023  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 15:03:42,580 7989  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 15:03:42,592 8001  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 15:03:44,473 9882  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 15:03:45,551 10960 INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 15:03:46,529 11938 INFO  - Started BooksLibraryApp in 9.972 seconds (JVM running for 12.012)
2020-09-23 15:03:46,531 11940 INFO  - Starting gRPC Server ...
2020-09-23 15:03:46,650 12059 INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$3f62c2e9' service has been registered.
2020-09-23 15:03:48,463 13872 INFO  - gRPC Server started, listening on port 7070.
2020-09-23 15:03:48,510 13919 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 15:17:37,535 2089  INFO  - Neither @ContextConfiguration nor @ContextHierarchy found for test class [lib.application.test.BookGrpcServicesTest], using SpringBootContextLoader
2020-09-23 15:17:37,546 2100  INFO  - Could not detect default resource locations for test class [lib.application.test.BookGrpcServicesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-09-23 15:17:37,547 2101  INFO  - Could not detect default configuration classes for test class [lib.application.test.BookGrpcServicesTest]: BookGrpcServicesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-09-23 15:17:37,776 2330  INFO  - Found @SpringBootConfiguration lib.application.BooksLibraryApp for test class lib.application.test.BookGrpcServicesTest
2020-09-23 15:17:37,779 2333  INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-09-23 15:17:37,807 2361  INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1caa0244, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7ce026d3, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@7ce69770, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1750fbeb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5b247367, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@268f106e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e9a5ed8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7e057f43, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6c284af, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5890e879, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6440112d]
2020-09-23 15:17:38,790 3344  INFO  - Starting BookGrpcServicesTest on INCNI6P031 with PID 281224 (started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 15:17:38,794 3348  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 15:17:39,787 4341  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 15:17:39,910 4464  INFO  - Finished Spring Data repository scanning in 107ms. Found 2 JPA repository interfaces.
2020-09-23 15:17:40,049 4603  INFO  - Replacing 'dataSource' DataSource bean with embedded version
2020-09-23 15:17:41,421 5975  INFO  - Starting embedded database: url='jdbc:derby:memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c;create=true', username='sa'
2020-09-23 15:17:42,732 7286  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 15:17:42,925 7479  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 15:17:42,929 7483  INFO  - HHH000206: hibernate.properties not found
2020-09-23 15:17:43,571 8125  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 15:17:43,802 8356  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 15:17:43,820 8374  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 15:17:45,355 9909  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 15:17:46,343 10897 INFO  - Started BookGrpcServicesTest in 8.124 seconds (JVM running for 10.97)
2020-09-23 15:17:46,371 10925 INFO  - Began transaction (1) for test context [DefaultTestContext@78bad03b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@26101efc, testMethod = shouldRetrieveAllBookCountsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4e2109fe testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@18dac12f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:46,599 11153 INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 15:17:46,952 11506 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:46,953 11507 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:46,953 11507 INFO  - Rolled back transaction for test: [DefaultTestContext@78bad03b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@26101efc, testMethod = shouldRetrieveAllBookCountsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4e2109fe testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@18dac12f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:46,959 11513 INFO  - Began transaction (1) for test context [DefaultTestContext@78bad03b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@66314fee, testMethod = shouldRetrieveBookByTitleSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4e2109fe testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@18dac12f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:46,982 11536 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:46,982 11536 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:46,983 11537 INFO  - Rolled back transaction for test: [DefaultTestContext@78bad03b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@66314fee, testMethod = shouldRetrieveBookByTitleSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4e2109fe testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@18dac12f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:46,987 11541 INFO  - Began transaction (1) for test context [DefaultTestContext@78bad03b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@26a33cf, testMethod = shouldRetrieveAllBooksByAuthorsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4e2109fe testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@18dac12f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:47,015 11569 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:47,016 11570 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:47,016 11570 INFO  - Rolled back transaction for test: [DefaultTestContext@78bad03b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@26a33cf, testMethod = shouldRetrieveAllBooksByAuthorsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4e2109fe testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@18dac12f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:47,021 11575 INFO  - Began transaction (1) for test context [DefaultTestContext@78bad03b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@72f3acc9, testMethod = shouldAddFirstBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4e2109fe testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@18dac12f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:47,029 11583 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:47,029 11583 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:47,029 11583 INFO  - Rolled back transaction for test: [DefaultTestContext@78bad03b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@72f3acc9, testMethod = shouldAddFirstBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4e2109fe testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@18dac12f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:47,032 11586 INFO  - Began transaction (1) for test context [DefaultTestContext@78bad03b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@664f49f, testMethod = shouldRetrieveAllBooksSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4e2109fe testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@18dac12f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:47,054 11608 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:47,054 11608 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:47,055 11609 INFO  - Rolled back transaction for test: [DefaultTestContext@78bad03b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@664f49f, testMethod = shouldRetrieveAllBooksSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4e2109fe testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@18dac12f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:47,059 11613 INFO  - Began transaction (1) for test context [DefaultTestContext@78bad03b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@5fe3b058, testMethod = shouldDeleteBookByIsbnSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4e2109fe testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@18dac12f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:47,108 11662 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:47,108 11662 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:47,109 11663 INFO  - Rolled back transaction for test: [DefaultTestContext@78bad03b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@5fe3b058, testMethod = shouldDeleteBookByIsbnSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4e2109fe testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@18dac12f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:47,115 11669 INFO  - Began transaction (1) for test context [DefaultTestContext@78bad03b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@2a99fa07, testMethod = shouldAddSecondBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4e2109fe testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@18dac12f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:47,124 11678 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:47,124 11678 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:47,125 11679 INFO  - Rolled back transaction for test: [DefaultTestContext@78bad03b testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@2a99fa07, testMethod = shouldAddSecondBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4e2109fe testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@18dac12f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:47,128 11682 INFO  - Neither @ContextConfiguration nor @ContextHierarchy found for test class [lib.application.test.BookServicesTest], using SpringBootContextLoader
2020-09-23 15:17:47,129 11683 INFO  - Could not detect default resource locations for test class [lib.application.test.BookServicesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-09-23 15:17:47,129 11683 INFO  - Could not detect default configuration classes for test class [lib.application.test.BookServicesTest]: BookServicesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-09-23 15:17:47,136 11690 INFO  - Found @SpringBootConfiguration lib.application.BooksLibraryApp for test class lib.application.test.BookServicesTest
2020-09-23 15:17:47,136 11690 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-09-23 15:17:47,137 11691 INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3bf01a01, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@299cab08, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6c75e3bc, org.springframework.test.context.support.DirtiesContextTestExecutionListener@186f7434, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2374452a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ffc6ea7, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2c5708e7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4ffa078d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4e26564d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@42238078, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5627b8eb]
2020-09-23 15:17:47,144 11698 INFO  - Began transaction (1) for test context [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@39a865c1, testMethod = shouldRetrieveAllBookCountsSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:47,156 11710 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:47,156 11710 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:47,157 11711 INFO  - Rolled back transaction for test: [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@39a865c1, testMethod = shouldRetrieveAllBookCountsSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:47,163 11717 INFO  - Began transaction (1) for test context [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@53a09566, testMethod = shouldRetrieveBookByIsbnSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:47,181 11735 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:47,181 11735 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:47,182 11736 INFO  - Rolled back transaction for test: [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@53a09566, testMethod = shouldRetrieveBookByIsbnSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:47,185 11739 INFO  - Began transaction (1) for test context [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@74a5bef0, testMethod = shouldRetrieveBookByTitleSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:47,197 11751 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:47,198 11752 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:47,198 11752 INFO  - Rolled back transaction for test: [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@74a5bef0, testMethod = shouldRetrieveBookByTitleSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:47,201 11755 INFO  - Began transaction (1) for test context [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@4449b273, testMethod = shouldRetrieveBookByPublisherSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:47,220 11774 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:47,220 11774 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:47,221 11775 INFO  - Rolled back transaction for test: [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@4449b273, testMethod = shouldRetrieveBookByPublisherSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:47,225 11779 INFO  - Began transaction (1) for test context [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@377e90b0, testMethod = shouldDeleteBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:47,256 11810 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:47,256 11810 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:47,256 11810 INFO  - Rolled back transaction for test: [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@377e90b0, testMethod = shouldDeleteBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:47,261 11815 INFO  - Began transaction (1) for test context [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@7482309c, testMethod = shouldAddFirstBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:47,266 11820 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:47,266 11820 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:47,267 11821 INFO  - Rolled back transaction for test: [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@7482309c, testMethod = shouldAddFirstBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:47,270 11824 INFO  - Began transaction (1) for test context [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@26d24d7a, testMethod = shouldRetrieveAllBooksSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:47,285 11839 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:47,285 11839 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:47,288 11842 INFO  - Rolled back transaction for test: [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@26d24d7a, testMethod = shouldRetrieveAllBooksSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:47,291 11845 INFO  - Began transaction (1) for test context [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@653e7b, testMethod = shouldRetrieveBookByAuthorSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:47,299 11853 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:47,299 11853 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:47,299 11853 INFO  - Rolled back transaction for test: [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@653e7b, testMethod = shouldRetrieveBookByAuthorSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:17:47,304 11858 INFO  - Began transaction (1) for test context [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@2a531637, testMethod = shouldAddSecondBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@101c15ad]; rollback [true]
2020-09-23 15:17:47,314 11868 WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 15:17:47,314 11868 WARN  - Database 'memory:6b105a9c-8c55-45ff-ba9b-d6a29939924c' not created, connection made to existing database instead.
2020-09-23 15:17:47,315 11869 INFO  - Rolled back transaction for test: [DefaultTestContext@397a10df testClass = BookServicesTest, testInstance = lib.application.test.BookServicesTest@2a531637, testMethod = shouldAddSecondBookSuccessfully@BookServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141dfcf9 testClass = BookServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a7bbdbc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 15:31:40,270 1508  INFO  - Starting BooksLibraryApp on INCNI6P031 with PID 280580 (D:\mlm_dev\gitrepo\books-library-project\library-application\target\classes started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 15:31:40,275 1513  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 15:31:41,061 2299  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 15:31:41,181 2419  INFO  - Finished Spring Data repository scanning in 108ms. Found 2 JPA repository interfaces.
2020-09-23 15:31:42,408 3646  INFO  - HikariPool-1 - Starting...
2020-09-23 15:31:42,415 3653  WARN  - Registered driver with driverClassName=org.apache.derby.jdbc.EmbeddedDriver was not found, trying direct instantiation.
2020-09-23 15:31:42,799 4037  INFO  - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: No details.)
2020-09-23 15:31:42,804 4042  INFO  - HikariPool-1 - Start completed.
2020-09-23 15:31:42,893 4131  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 15:31:43,006 4244  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 15:31:43,008 4246  INFO  - HHH000206: hibernate.properties not found
2020-09-23 15:31:43,309 4547  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 15:31:44,120 5358  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 15:31:44,128 5366  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 15:31:45,453 6691  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 15:31:46,281 7519  INFO  - Unable to proxy interface-implementing method [public final io.grpc.ServerServiceDefinition lib.grpc.services.auto.BookServiceGrpc$BookServiceImplBase.bindService()] because it is marked as final: Consider using interface-based JDK proxies instead!
2020-09-23 15:31:46,975 8213  INFO  - Started BooksLibraryApp in 7.131 seconds (JVM running for 8.271)
2020-09-23 15:31:46,977 8215  INFO  - Starting gRPC Server ...
2020-09-23 15:31:47,072 8310  INFO  - 'lib.grpc.services.GrpcBookService$$EnhancerBySpringCGLIB$$2e82dc33' service has been registered.
2020-09-23 15:31:48,528 9766  INFO  - gRPC Server started, listening on port 7070.
2020-09-23 15:31:48,561 9799  INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 16:35:54,968 1715  INFO  - Neither @ContextConfiguration nor @ContextHierarchy found for test class [lib.application.test.BookGrpcServicesTest], using SpringBootContextLoader
2020-09-23 16:35:54,976 1723  INFO  - Could not detect default resource locations for test class [lib.application.test.BookGrpcServicesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-09-23 16:35:54,978 1725  INFO  - Could not detect default configuration classes for test class [lib.application.test.BookGrpcServicesTest]: BookGrpcServicesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-09-23 16:35:55,161 1908  INFO  - Found @SpringBootConfiguration lib.application.BooksLibraryApp for test class lib.application.test.BookGrpcServicesTest
2020-09-23 16:35:55,165 1912  INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-09-23 16:35:55,188 1935  INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1caa0244, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7ce026d3, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@7ce69770, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1750fbeb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5b247367, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@268f106e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e9a5ed8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7e057f43, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6c284af, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5890e879, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6440112d]
2020-09-23 16:35:55,607 2354  INFO  - Starting BookGrpcServicesTest on INCNI6P031 with PID 289208 (started by msn2t7 in D:\mlm_dev\gitrepo\books-library-project\library-application)
2020-09-23 16:35:55,609 2356  INFO  - No active profile set, falling back to default profiles: default
2020-09-23 16:35:56,264 3011  INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-09-23 16:35:56,361 3108  INFO  - Finished Spring Data repository scanning in 84ms. Found 2 JPA repository interfaces.
2020-09-23 16:35:56,523 3270  INFO  - Replacing 'dataSource' DataSource bean with embedded version
2020-09-23 16:35:57,477 4224  INFO  - Starting embedded database: url='jdbc:derby:memory:27247068-bb14-46a4-8094-19008f6f6d5c;create=true', username='sa'
2020-09-23 16:35:58,458 5205  INFO  - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-09-23 16:35:58,573 5320  INFO  - HHH000412: Hibernate Core {5.3.17.Final}
2020-09-23 16:35:58,575 5322  INFO  - HHH000206: hibernate.properties not found
2020-09-23 16:35:58,979 5726  INFO  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2020-09-23 16:35:59,179 5926  INFO  - HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
2020-09-23 16:35:59,186 5933  WARN  - HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
2020-09-23 16:36:00,597 7344  INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-09-23 16:36:01,573 8320  INFO  - Started BookGrpcServicesTest in 6.226 seconds (JVM running for 8.394)
2020-09-23 16:36:01,601 8348  INFO  - Began transaction (1) for test context [DefaultTestContext@365e65bb testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@52f43225, testMethod = shouldRetrieveAllBookCountsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d1f065 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@f9a5e3f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@60f9dc7e]; rollback [true]
2020-09-23 16:36:01,819 8566  INFO  - HHH000397: Using ASTQueryTranslatorFactory
2020-09-23 16:36:02,168 8915  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 16:36:02,168 8915  WARN  - Database 'memory:27247068-bb14-46a4-8094-19008f6f6d5c' not created, connection made to existing database instead.
2020-09-23 16:36:02,169 8916  INFO  - Rolled back transaction for test: [DefaultTestContext@365e65bb testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@52f43225, testMethod = shouldRetrieveAllBookCountsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d1f065 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@f9a5e3f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 16:36:02,175 8922  INFO  - Began transaction (1) for test context [DefaultTestContext@365e65bb testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@1fc5c0b2, testMethod = shouldRetrieveBookByTitleSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d1f065 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@f9a5e3f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@60f9dc7e]; rollback [true]
2020-09-23 16:36:02,200 8947  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 16:36:02,201 8948  WARN  - Database 'memory:27247068-bb14-46a4-8094-19008f6f6d5c' not created, connection made to existing database instead.
2020-09-23 16:36:02,201 8948  INFO  - Rolled back transaction for test: [DefaultTestContext@365e65bb testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@1fc5c0b2, testMethod = shouldRetrieveBookByTitleSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d1f065 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@f9a5e3f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 16:36:02,206 8953  INFO  - Began transaction (1) for test context [DefaultTestContext@365e65bb testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@492c8137, testMethod = shouldRetrieveAllBooksByAuthorsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d1f065 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@f9a5e3f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@60f9dc7e]; rollback [true]
2020-09-23 16:36:02,237 8984  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 16:36:02,237 8984  WARN  - Database 'memory:27247068-bb14-46a4-8094-19008f6f6d5c' not created, connection made to existing database instead.
2020-09-23 16:36:02,238 8985  INFO  - Rolled back transaction for test: [DefaultTestContext@365e65bb testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@492c8137, testMethod = shouldRetrieveAllBooksByAuthorsSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d1f065 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@f9a5e3f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 16:36:02,241 8988  INFO  - Began transaction (1) for test context [DefaultTestContext@365e65bb testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@69f3e556, testMethod = shouldAddFirstBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d1f065 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@f9a5e3f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@60f9dc7e]; rollback [true]
2020-09-23 16:36:02,249 8996  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 16:36:02,249 8996  WARN  - Database 'memory:27247068-bb14-46a4-8094-19008f6f6d5c' not created, connection made to existing database instead.
2020-09-23 16:36:02,250 8997  INFO  - Rolled back transaction for test: [DefaultTestContext@365e65bb testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@69f3e556, testMethod = shouldAddFirstBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d1f065 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@f9a5e3f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 16:36:02,259 9006  INFO  - Began transaction (1) for test context [DefaultTestContext@365e65bb testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@5a6efe33, testMethod = shouldRetrieveAllBooksSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d1f065 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@f9a5e3f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@60f9dc7e]; rollback [true]
2020-09-23 16:36:02,294 9041  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 16:36:02,294 9041  WARN  - Database 'memory:27247068-bb14-46a4-8094-19008f6f6d5c' not created, connection made to existing database instead.
2020-09-23 16:36:02,295 9042  INFO  - Rolled back transaction for test: [DefaultTestContext@365e65bb testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@5a6efe33, testMethod = shouldRetrieveAllBooksSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d1f065 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@f9a5e3f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 16:36:02,299 9046  INFO  - Began transaction (1) for test context [DefaultTestContext@365e65bb testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@15a484a9, testMethod = shouldDeleteBookByIsbnSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d1f065 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@f9a5e3f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@60f9dc7e]; rollback [true]
2020-09-23 16:36:02,362 9109  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 16:36:02,362 9109  WARN  - Database 'memory:27247068-bb14-46a4-8094-19008f6f6d5c' not created, connection made to existing database instead.
2020-09-23 16:36:02,363 9110  INFO  - Rolled back transaction for test: [DefaultTestContext@365e65bb testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@15a484a9, testMethod = shouldDeleteBookByIsbnSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d1f065 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@f9a5e3f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 16:36:02,370 9117  INFO  - Began transaction (1) for test context [DefaultTestContext@365e65bb testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@2374452a, testMethod = shouldAddSecondBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d1f065 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@f9a5e3f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@60f9dc7e]; rollback [true]
2020-09-23 16:36:02,380 9127  WARN  - SQL Warning Code: 10000, SQLState: 01J01
2020-09-23 16:36:02,380 9127  WARN  - Database 'memory:27247068-bb14-46a4-8094-19008f6f6d5c' not created, connection made to existing database instead.
2020-09-23 16:36:02,381 9128  INFO  - Rolled back transaction for test: [DefaultTestContext@365e65bb testClass = BookGrpcServicesTest, testInstance = lib.application.test.BookGrpcServicesTest@2374452a, testMethod = shouldAddSecondBookSuccessfully@BookGrpcServicesTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d1f065 testClass = BookGrpcServicesTest, locations = '{}', classes = '{class lib.application.BooksLibraryApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@f9a5e3f key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@be35cd9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a3d8174, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@49912c99, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@61e9c0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@10feca44], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-09-23 16:36:02,385 9132  INFO  - Neither @ContextConfiguration nor @ContextHierarchy found for test class [lib.application.test.BookServicesTest], using SpringBootContextLoader
2020-09-23 16:36:02,386 9133  INFO  - Could not detect default resource locations for test class [lib.application.test.BookServicesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-09-23 16:36:02,386 9133  INFO  - Could not detect default configuration classes for test class [lib.application.test.BookServicesTest]: BookServicesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-09-23 16:36:02,393 9140  INFO  - Found @SpringBootConfiguration lib.application.BooksLibraryApp for test class lib.application.test.BookServicesTest
2020-09-23 16:36:02,394 9141  INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
